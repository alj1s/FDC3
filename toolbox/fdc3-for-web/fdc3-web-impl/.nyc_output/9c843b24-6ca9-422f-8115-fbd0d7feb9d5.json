{"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/ServerContext.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/ServerContext.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":42}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":44}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":48}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":56}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":18},"end":{"line":10,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":3},"end":{"line":10,"column":40}},"type":"binary-expr","locations":[{"start":{"line":10,"column":3},"end":{"line":10,"column":8}},{"start":{"line":10,"column":13},"end":{"line":10,"column":39}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/ServerContext.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/ServerContext.ts"],"names":[],"mappings":";;;AAGA,IAAY,KAKX;AALD,WAAY,KAAK;IACb,uCAAO,CAAA;IACP,2CAAS,CAAA;IACT,mDAAa,CAAA;IACb,6CAAU,CAAA,CAAC,wCAAwC;AACvD,CAAC,EALW,KAAK,qBAAL,KAAK,QAKhB","sourcesContent":["import { AppIdentifier, AppIntent } from \"@kite9/fdc3-standard\";\nimport { Context } from \"@kite9/fdc3-context\";\n\nexport enum State {\n    Pending, /* App has started, but not completed FDC3 Handshake */\n    Connected,  /* App has completed FDC3 handshake */\n    NotResponding, /* App has not responded to a heartbeat */\n    Terminated /* App has sent a termination message */\n}\n\nexport type AppRegistration = {\n    state: State,\n    appId: string;\n    instanceId: InstanceID\n}\n\n/**\n * This is a unique, long, unguessable string that identifies a particular instance of an app.\n * All messages arriving at the desktop agent will have this UUID attached to them.\n * It is important that this is unguessable as it is a \"password\" of sorts used to \n * identify the app between reconnections.\n */\nexport type InstanceID = string\n\n/**\n * Handles messaging to apps and opening apps\n */\nexport interface ServerContext<X extends AppRegistration> {\n\n    /**\n     * UUID for outgoing message\n     */\n    createUUID(): string;\n\n    /**\n     * Post an outgoing message to a particular app\n     */\n    post(message: object, instanceId: InstanceID): Promise<void>\n\n    /**\n     * Post an outgoing message to a particular app\n     */\n    post(message: object, instanceId: InstanceID): Promise<void>\n\n    /**\n     * Opens a new instance of an application.  \n     * Promise completes once the application window is opened\n     */\n    open(appId: string): Promise<InstanceID>\n\n    /**\n     * Registers a particular instance id with a given app id\n     */\n    setInstanceDetails(uuid: InstanceID, details: X): void\n\n    /**\n     * Returns the UUID for a particular instance of an app.\n     * This is used in situations where an app is reconnecting to the same desktop agent.\n     */\n    getInstanceDetails(uuid: InstanceID): X | undefined\n\n    /**\n     * Registers an app as connected to the desktop agent. \n     */\n    setAppState(app: InstanceID, state: State): Promise<void>\n\n    /**\n     * Returns the list of apps open and connected to FDC3 at the current time.\n     * Note, it is the implementor's job to ensure this list is\n     * up-to-date in the event of app crashes or disconnections.\n     */\n    getConnectedApps(): Promise<AppRegistration[]>\n\n    /**\n     * Return the list of all apps that have ever been registed with the ServerContext.\n     */\n    getAllApps(): Promise<AppRegistration[]>\n\n    /**\n     * Helper function for determining if an app is currently open and connected to the da\n     */\n    isAppConnected(app: InstanceID): Promise<boolean>\n\n    /**\n     * Allows you to write a log message somewhere\n     */\n    log(message: string): void\n\n    /**\n     * Name of the provider of this desktop agent server\n     */\n    provider(): string\n\n    /**\n     * Version of the provider of this desktop agent server\n     */\n    providerVersion(): string\n\n    /**\n     * Supported version of the FDC3 API of the desktop agent server.\n     */\n    fdc3Version(): string\n\n    /**\n     * This is called prior to returning intents to the client.  It is a\n     * an opportunity for the server to either present an intent resolver \n     * or otherwise mess with the availble intents, or do nothing.\n     */\n    narrowIntents(raiser: AppIdentifier, IappIntents: AppIntent[], context: Context): Promise<AppIntent[]>\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"44e12a70b3ef7734dd029f95b4f2b6de94966366","contentHash":"d5063ab08785fa3fed4df50cc447aa37dc9b66ca69db6c1cba91e345c2e1b3fe"},"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/BasicFDC3Server.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/BasicFDC3Server.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":61}},"2":{"start":{"line":4,"column":27},"end":{"line":4,"column":65}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":59}},"4":{"start":{"line":6,"column":22},"end":{"line":6,"column":55}},"5":{"start":{"line":7,"column":27},"end":{"line":7,"column":65}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":33}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":21}},"8":{"start":{"line":20,"column":8},"end":{"line":20,"column":69}},"9":{"start":{"line":20,"column":35},"end":{"line":20,"column":67}},"10":{"start":{"line":23,"column":8},"end":{"line":23,"column":49}},"11":{"start":{"line":23,"column":35},"end":{"line":23,"column":47}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":42}},"13":{"start":{"line":29,"column":25},"end":{"line":33,"column":9}},"14":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"15":{"start":{"line":35,"column":12},"end":{"line":35,"column":142}},"16":{"start":{"line":37,"column":8},"end":{"line":37,"column":28}},"17":{"start":{"line":40,"column":0},"end":{"line":40,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":30},"end":{"line":17,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":27},"end":{"line":21,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":30},"end":{"line":20,"column":31}},"loc":{"start":{"line":20,"column":35},"end":{"line":20,"column":67}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":15},"end":{"line":24,"column":5}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":30},"end":{"line":23,"column":31}},"loc":{"start":{"line":23,"column":35},"end":{"line":23,"column":47}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":112},"end":{"line":38,"column":5}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":57},"end":{"line":28,"column":80}},"type":"default-arg","locations":[{"start":{"line":28,"column":75},"end":{"line":28,"column":80}}],"line":28},"1":{"loc":{"start":{"line":28,"column":82},"end":{"line":28,"column":110}},"type":"default-arg","locations":[{"start":{"line":28,"column":105},"end":{"line":28,"column":110}}],"line":28},"2":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":142,"7":142,"8":180,"9":547,"10":2,"11":8,"12":1,"13":142,"14":142,"15":2,"16":142,"17":1},"f":{"0":142,"1":180,"2":547,"3":2,"4":8,"5":142},"b":{"0":[71],"1":[71],"2":[2,140]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/BasicFDC3Server.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/BasicFDC3Server.ts"],"names":[],"mappings":";;;AAEA,kEAA6E;AAC7E,4DAAyD;AAEzD,wDAAqD;AAErD,kEAA+D;AAe/D;;GAEG;AACH,MAAa,eAAe;IAEf,QAAQ,CAAkB;IAC3B,EAAE,CAAgC;IAE1C,YAAY,QAA0B,EAAE,EAAkC;QACtE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACjB,CAAC;IAED,OAAO,CAAC,OAAsE,EAAE,IAAgB;QAC5F,yEAAyE;QACzE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAA;IAChE,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAA;IAC5C,CAAC;CACJ;AAlBD,0CAkBC;AAED,MAAa,iBAAkB,SAAQ,eAAe;IAElD,YAAY,EAAkC,EAAE,SAAoB,EAAE,YAA4B,EAAE,UAAmB,EAAE,kBAA0B,KAAK,EAAE,uBAA+B,KAAK;QAC1L,MAAM,QAAQ,GAAqB;YAC/B,IAAI,mCAAgB,CAAC,YAAY,CAAC;YAClC,IAAI,6BAAa,CAAC,SAAS,EAAE,eAAe,CAAC;YAC7C,IAAI,yBAAW,CAAC,SAAS,EAAE,oBAAoB,CAAC;SACnD,CAAA;QAED,IAAI,UAAU,EAAE,CAAC;YACb,QAAQ,CAAC,IAAI,CAAC,IAAI,mCAAgB,CAAC,oBAAoB,GAAG,EAAE,EAAE,oBAAoB,GAAG,CAAC,EAAE,oBAAoB,CAAC,CAAC,CAAA;QAClH,CAAC;QAED,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;IACvB,CAAC;CACJ;AAfD,8CAeC","sourcesContent":["import { FDC3Server } from \"./FDC3Server\";\nimport { AppRegistration, InstanceID, ServerContext } from \"./ServerContext\";\nimport { BroadcastHandler, ChannelState } from \"./handlers/BroadcastHandler\";\nimport { IntentHandler } from \"./handlers/IntentHandler\";\nimport { Directory } from \"./directory/DirectoryInterface\";\nimport { OpenHandler } from \"./handlers/OpenHandler\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\";\nimport { HeartbeatHandler } from \"./handlers/HeartbeatHandler\";\n\ntype AppRequestMessage = BrowserTypes.AppRequestMessage\ntype WebConnectionProtocol4ValidateAppIdentity = BrowserTypes.WebConnectionProtocol4ValidateAppIdentity\n\nexport interface MessageHandler {\n\n    /**\n     * Handles an AgentRequestMessage from the messaging source\n     */\n    accept(msg: any, sc: ServerContext<AppRegistration>, from: InstanceID): void\n\n    shutdown(): void\n}\n\n/**\n * This defers all functionality to either MessageHandler's or the ServerContext objects.\n */\nexport class BasicFDC3Server implements FDC3Server {\n\n    readonly handlers: MessageHandler[]\n    private sc: ServerContext<AppRegistration>\n\n    constructor(handlers: MessageHandler[], sc: ServerContext<AppRegistration>) {\n        this.handlers = handlers\n        this.sc = sc;\n    }\n\n    receive(message: AppRequestMessage | WebConnectionProtocol4ValidateAppIdentity, from: InstanceID): void {\n        // this.sc.log(`MessageReceived: \\n ${JSON.stringify(message, null, 2)}`)\n        this.handlers.forEach(h => h.accept(message, this.sc, from))\n    }\n\n    shutdown(): void {\n        this.handlers.forEach(h => h.shutdown())\n    }\n}\n\nexport class DefaultFDC3Server extends BasicFDC3Server {\n\n    constructor(sc: ServerContext<AppRegistration>, directory: Directory, userChannels: ChannelState[], heartbeats: boolean, intentTimeoutMs: number = 20000, openHandlerTimeoutMs: number = 10000) {\n        const handlers: MessageHandler[] = [\n            new BroadcastHandler(userChannels),\n            new IntentHandler(directory, intentTimeoutMs),\n            new OpenHandler(directory, openHandlerTimeoutMs),\n        ]\n\n        if (heartbeats) {\n            handlers.push(new HeartbeatHandler(openHandlerTimeoutMs / 10, openHandlerTimeoutMs / 2, openHandlerTimeoutMs))\n        }\n\n        super(handlers, sc)\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a7e3ac0427598e50c9a8284da1e9e8dddba308fb","contentHash":"ddce6b57266bb370bdd47907c3e84d506200d41c991cc375b30ccbc81837d9e1"},"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/BroadcastHandler.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/BroadcastHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":56}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":38}},"4":{"start":{"line":7,"column":0},"end":{"line":11,"column":60}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":50}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":48}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":56}},"8":{"start":{"line":13,"column":23},"end":{"line":13,"column":25}},"9":{"start":{"line":14,"column":21},"end":{"line":14,"column":23}},"10":{"start":{"line":15,"column":12},"end":{"line":15,"column":14}},"11":{"start":{"line":16,"column":21},"end":{"line":16,"column":23}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":41}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":52}},"14":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"15":{"start":{"line":27,"column":12},"end":{"line":27,"column":24}},"16":{"start":{"line":29,"column":8},"end":{"line":29,"column":56}},"17":{"start":{"line":29,"column":36},"end":{"line":29,"column":46}},"18":{"start":{"line":32,"column":8},"end":{"line":36,"column":9}},"19":{"start":{"line":33,"column":34},"end":{"line":33,"column":47}},"20":{"start":{"line":34,"column":35},"end":{"line":34,"column":49}},"21":{"start":{"line":35,"column":38},"end":{"line":35,"column":55}},"22":{"start":{"line":39,"column":8},"end":{"line":39,"column":83}},"23":{"start":{"line":39,"column":49},"end":{"line":39,"column":81}},"24":{"start":{"line":42,"column":8},"end":{"line":46,"column":11}},"25":{"start":{"line":43,"column":25},"end":{"line":43,"column":46}},"26":{"start":{"line":45,"column":12},"end":{"line":45,"column":36}},"27":{"start":{"line":49,"column":19},"end":{"line":49,"column":49}},"28":{"start":{"line":50,"column":8},"end":{"line":53,"column":9}},"29":{"start":{"line":51,"column":12},"end":{"line":51,"column":72}},"30":{"start":{"line":51,"column":48},"end":{"line":51,"column":70}},"31":{"start":{"line":52,"column":12},"end":{"line":52,"column":40}},"32":{"start":{"line":56,"column":21},"end":{"line":56,"column":48}},"33":{"start":{"line":57,"column":8},"end":{"line":60,"column":9}},"34":{"start":{"line":59,"column":12},"end":{"line":59,"column":19}},"35":{"start":{"line":61,"column":8},"end":{"line":88,"column":9}},"36":{"start":{"line":62,"column":12},"end":{"line":83,"column":13}},"37":{"start":{"line":64,"column":50},"end":{"line":64,"column":102}},"38":{"start":{"line":66,"column":47},"end":{"line":66,"column":103}},"39":{"start":{"line":67,"column":51},"end":{"line":67,"column":111}},"40":{"start":{"line":68,"column":47},"end":{"line":68,"column":103}},"41":{"start":{"line":69,"column":49},"end":{"line":69,"column":107}},"42":{"start":{"line":71,"column":41},"end":{"line":71,"column":91}},"43":{"start":{"line":73,"column":50},"end":{"line":73,"column":109}},"44":{"start":{"line":74,"column":58},"end":{"line":74,"column":125}},"45":{"start":{"line":76,"column":52},"end":{"line":76,"column":113}},"46":{"start":{"line":77,"column":56},"end":{"line":77,"column":121}},"47":{"start":{"line":79,"column":62},"end":{"line":79,"column":133}},"48":{"start":{"line":80,"column":70},"end":{"line":80,"column":149}},"49":{"start":{"line":82,"column":49},"end":{"line":82,"column":107}},"50":{"start":{"line":86,"column":33},"end":{"line":86,"column":85}},"51":{"start":{"line":87,"column":12},"end":{"line":87,"column":86}},"52":{"start":{"line":91,"column":19},"end":{"line":91,"column":34}},"53":{"start":{"line":92,"column":8},"end":{"line":97,"column":11}},"54":{"start":{"line":98,"column":8},"end":{"line":98,"column":175}},"55":{"start":{"line":101,"column":24},"end":{"line":101,"column":67}},"56":{"start":{"line":102,"column":21},"end":{"line":102,"column":45}},"57":{"start":{"line":103,"column":8},"end":{"line":109,"column":9}},"58":{"start":{"line":104,"column":28},"end":{"line":104,"column":117}},"59":{"start":{"line":104,"column":62},"end":{"line":104,"column":76}},"60":{"start":{"line":105,"column":12},"end":{"line":105,"column":110}},"61":{"start":{"line":108,"column":12},"end":{"line":108,"column":131}},"62":{"start":{"line":112,"column":18},"end":{"line":112,"column":97}},"63":{"start":{"line":112,"column":53},"end":{"line":112,"column":96}},"64":{"start":{"line":113,"column":8},"end":{"line":119,"column":9}},"65":{"start":{"line":114,"column":12},"end":{"line":114,"column":45}},"66":{"start":{"line":115,"column":12},"end":{"line":115,"column":113}},"67":{"start":{"line":118,"column":12},"end":{"line":118,"column":127}},"68":{"start":{"line":122,"column":30},"end":{"line":124,"column":63}},"69":{"start":{"line":123,"column":25},"end":{"line":123,"column":85}},"70":{"start":{"line":124,"column":25},"end":{"line":124,"column":62}},"71":{"start":{"line":125,"column":8},"end":{"line":127,"column":11}},"72":{"start":{"line":126,"column":12},"end":{"line":126,"column":147}},"73":{"start":{"line":128,"column":8},"end":{"line":128,"column":94}},"74":{"start":{"line":128,"column":66},"end":{"line":128,"column":92}},"75":{"start":{"line":129,"column":8},"end":{"line":129,"column":113}},"76":{"start":{"line":130,"column":8},"end":{"line":130,"column":95}},"77":{"start":{"line":133,"column":18},"end":{"line":134,"column":111}},"78":{"start":{"line":134,"column":28},"end":{"line":134,"column":110}},"79":{"start":{"line":135,"column":8},"end":{"line":144,"column":9}},"80":{"start":{"line":136,"column":23},"end":{"line":136,"column":47}},"81":{"start":{"line":137,"column":28},"end":{"line":137,"column":61}},"82":{"start":{"line":138,"column":12},"end":{"line":138,"column":145}},"83":{"start":{"line":139,"column":12},"end":{"line":139,"column":47}},"84":{"start":{"line":140,"column":12},"end":{"line":140,"column":101}},"85":{"start":{"line":143,"column":12},"end":{"line":143,"column":115}},"86":{"start":{"line":147,"column":24},"end":{"line":147,"column":28}},"87":{"start":{"line":148,"column":26},"end":{"line":148,"column":42}},"88":{"start":{"line":149,"column":8},"end":{"line":159,"column":9}},"89":{"start":{"line":150,"column":28},"end":{"line":150,"column":72}},"90":{"start":{"line":151,"column":12},"end":{"line":151,"column":60}},"91":{"start":{"line":152,"column":12},"end":{"line":158,"column":13}},"92":{"start":{"line":153,"column":16},"end":{"line":153,"column":136}},"93":{"start":{"line":154,"column":16},"end":{"line":154,"column":23}},"94":{"start":{"line":157,"column":16},"end":{"line":157,"column":39}},"95":{"start":{"line":160,"column":19},"end":{"line":167,"column":9}},"96":{"start":{"line":168,"column":8},"end":{"line":168,"column":39}},"97":{"start":{"line":169,"column":8},"end":{"line":169,"column":155}},"98":{"start":{"line":170,"column":8},"end":{"line":170,"column":120}},"99":{"start":{"line":173,"column":34},"end":{"line":175,"column":93}},"100":{"start":{"line":174,"column":25},"end":{"line":174,"column":62}},"101":{"start":{"line":175,"column":25},"end":{"line":175,"column":92}},"102":{"start":{"line":176,"column":29},"end":{"line":178,"column":41}},"103":{"start":{"line":177,"column":24},"end":{"line":177,"column":76}},"104":{"start":{"line":179,"column":8},"end":{"line":191,"column":11}},"105":{"start":{"line":180,"column":12},"end":{"line":190,"column":31}},"106":{"start":{"line":192,"column":8},"end":{"line":192,"column":78}},"107":{"start":{"line":193,"column":8},"end":{"line":193,"column":80}},"108":{"start":{"line":196,"column":31},"end":{"line":196,"column":59}},"109":{"start":{"line":197,"column":8},"end":{"line":208,"column":9}},"110":{"start":{"line":198,"column":12},"end":{"line":204,"column":44}},"111":{"start":{"line":207,"column":12},"end":{"line":207,"column":107}},"112":{"start":{"line":212,"column":27},"end":{"line":212,"column":70}},"113":{"start":{"line":213,"column":8},"end":{"line":215,"column":9}},"114":{"start":{"line":214,"column":12},"end":{"line":214,"column":136}},"115":{"start":{"line":217,"column":27},"end":{"line":217,"column":62}},"116":{"start":{"line":218,"column":8},"end":{"line":218,"column":53}},"117":{"start":{"line":219,"column":8},"end":{"line":219,"column":59}},"118":{"start":{"line":220,"column":8},"end":{"line":220,"column":86}},"119":{"start":{"line":223,"column":27},"end":{"line":223,"column":62}},"120":{"start":{"line":224,"column":31},"end":{"line":224,"column":62}},"121":{"start":{"line":225,"column":8},"end":{"line":228,"column":9}},"122":{"start":{"line":226,"column":12},"end":{"line":226,"column":51}},"123":{"start":{"line":227,"column":12},"end":{"line":227,"column":54}},"124":{"start":{"line":229,"column":8},"end":{"line":229,"column":90}},"125":{"start":{"line":232,"column":19},"end":{"line":232,"column":41}},"126":{"start":{"line":233,"column":22},"end":{"line":233,"column":45}},"127":{"start":{"line":234,"column":8},"end":{"line":239,"column":9}},"128":{"start":{"line":235,"column":12},"end":{"line":238,"column":13}},"129":{"start":{"line":236,"column":16},"end":{"line":236,"column":134}},"130":{"start":{"line":237,"column":16},"end":{"line":237,"column":23}},"131":{"start":{"line":240,"column":8},"end":{"line":245,"column":10}},"132":{"start":{"line":246,"column":8},"end":{"line":246,"column":33}},"133":{"start":{"line":247,"column":8},"end":{"line":247,"column":139}},"134":{"start":{"line":250,"column":29},"end":{"line":250,"column":79}},"135":{"start":{"line":250,"column":52},"end":{"line":250,"column":78}},"136":{"start":{"line":251,"column":8},"end":{"line":251,"column":222}},"137":{"start":{"line":251,"column":94},"end":{"line":251,"column":189}},"138":{"start":{"line":254,"column":24},"end":{"line":254,"column":74}},"139":{"start":{"line":255,"column":8},"end":{"line":268,"column":9}},"140":{"start":{"line":256,"column":12},"end":{"line":256,"column":144}},"141":{"start":{"line":259,"column":23},"end":{"line":265,"column":13}},"142":{"start":{"line":266,"column":12},"end":{"line":266,"column":41}},"143":{"start":{"line":267,"column":12},"end":{"line":267,"column":136}},"144":{"start":{"line":271,"column":8},"end":{"line":286,"column":9}},"145":{"start":{"line":272,"column":24},"end":{"line":282,"column":13}},"146":{"start":{"line":283,"column":12},"end":{"line":285,"column":58}},"147":{"start":{"line":284,"column":29},"end":{"line":284,"column":92}},"148":{"start":{"line":285,"column":30},"end":{"line":285,"column":56}},"149":{"start":{"line":289,"column":0},"end":{"line":289,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":1},"end":{"line":7,"column":2}},"loc":{"start":{"line":7,"column":24},"end":{"line":11,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":37},"end":{"line":19,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":15},"end":{"line":21,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":28},"end":{"line":24,"column":5}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":23},"end":{"line":30,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":31},"end":{"line":29,"column":32}},"loc":{"start":{"line":29,"column":36},"end":{"line":29,"column":46}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":37},"end":{"line":37,"column":5}},"line":31},"7":{"name":"(anonymous_7)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":24},"end":{"line":40,"column":5}},"line":38},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":44},"end":{"line":39,"column":45}},"loc":{"start":{"line":39,"column":49},"end":{"line":39,"column":81}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":45},"end":{"line":47,"column":5}},"line":41},"10":{"name":"(anonymous_10)","decl":{"start":{"line":43,"column":20},"end":{"line":43,"column":21}},"loc":{"start":{"line":43,"column":25},"end":{"line":43,"column":46}},"line":43},"11":{"name":"(anonymous_11)","decl":{"start":{"line":44,"column":21},"end":{"line":44,"column":22}},"loc":{"start":{"line":44,"column":26},"end":{"line":46,"column":9}},"line":44},"12":{"name":"(anonymous_12)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":43},"end":{"line":54,"column":5}},"line":48},"13":{"name":"(anonymous_13)","decl":{"start":{"line":51,"column":43},"end":{"line":51,"column":44}},"loc":{"start":{"line":51,"column":48},"end":{"line":51,"column":70}},"line":51},"14":{"name":"(anonymous_14)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":26},"end":{"line":89,"column":5}},"line":55},"15":{"name":"(anonymous_15)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":54},"end":{"line":99,"column":5}},"line":90},"16":{"name":"(anonymous_16)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":51},"end":{"line":110,"column":5}},"line":100},"17":{"name":"(anonymous_17)","decl":{"start":{"line":104,"column":57},"end":{"line":104,"column":58}},"loc":{"start":{"line":104,"column":62},"end":{"line":104,"column":76}},"line":104},"18":{"name":"(anonymous_18)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":72},"end":{"line":120,"column":5}},"line":111},"19":{"name":"(anonymous_19)","decl":{"start":{"line":112,"column":48},"end":{"line":112,"column":49}},"loc":{"start":{"line":112,"column":53},"end":{"line":112,"column":96}},"line":112},"20":{"name":"(anonymous_20)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":58},"end":{"line":131,"column":5}},"line":121},"21":{"name":"(anonymous_21)","decl":{"start":{"line":123,"column":20},"end":{"line":123,"column":21}},"loc":{"start":{"line":123,"column":25},"end":{"line":123,"column":85}},"line":123},"22":{"name":"(anonymous_22)","decl":{"start":{"line":124,"column":20},"end":{"line":124,"column":21}},"loc":{"start":{"line":124,"column":25},"end":{"line":124,"column":62}},"line":124},"23":{"name":"(anonymous_23)","decl":{"start":{"line":125,"column":30},"end":{"line":125,"column":31}},"loc":{"start":{"line":125,"column":35},"end":{"line":127,"column":9}},"line":125},"24":{"name":"(anonymous_24)","decl":{"start":{"line":128,"column":61},"end":{"line":128,"column":62}},"loc":{"start":{"line":128,"column":66},"end":{"line":128,"column":92}},"line":128},"25":{"name":"(anonymous_25)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":60},"end":{"line":145,"column":5}},"line":132},"26":{"name":"(anonymous_26)","decl":{"start":{"line":134,"column":23},"end":{"line":134,"column":24}},"loc":{"start":{"line":134,"column":28},"end":{"line":134,"column":110}},"line":134},"27":{"name":"(anonymous_27)","decl":{"start":{"line":146,"column":4},"end":{"line":146,"column":5}},"loc":{"start":{"line":146,"column":52},"end":{"line":171,"column":5}},"line":146},"28":{"name":"(anonymous_28)","decl":{"start":{"line":172,"column":4},"end":{"line":172,"column":5}},"loc":{"start":{"line":172,"column":43},"end":{"line":194,"column":5}},"line":172},"29":{"name":"(anonymous_29)","decl":{"start":{"line":174,"column":20},"end":{"line":174,"column":21}},"loc":{"start":{"line":174,"column":25},"end":{"line":174,"column":62}},"line":174},"30":{"name":"(anonymous_30)","decl":{"start":{"line":175,"column":20},"end":{"line":175,"column":21}},"loc":{"start":{"line":175,"column":25},"end":{"line":175,"column":92}},"line":175},"31":{"name":"(anonymous_31)","decl":{"start":{"line":177,"column":17},"end":{"line":177,"column":18}},"loc":{"start":{"line":177,"column":22},"end":{"line":177,"column":78}},"line":177},"32":{"name":"(anonymous_32)","decl":{"start":{"line":179,"column":29},"end":{"line":179,"column":30}},"loc":{"start":{"line":179,"column":36},"end":{"line":191,"column":9}},"line":179},"33":{"name":"(anonymous_33)","decl":{"start":{"line":195,"column":4},"end":{"line":195,"column":5}},"loc":{"start":{"line":195,"column":51},"end":{"line":209,"column":5}},"line":195},"34":{"name":"(anonymous_34)","decl":{"start":{"line":210,"column":4},"end":{"line":210,"column":5}},"loc":{"start":{"line":210,"column":49},"end":{"line":221,"column":5}},"line":210},"35":{"name":"(anonymous_35)","decl":{"start":{"line":222,"column":4},"end":{"line":222,"column":5}},"loc":{"start":{"line":222,"column":53},"end":{"line":230,"column":5}},"line":222},"36":{"name":"(anonymous_36)","decl":{"start":{"line":231,"column":4},"end":{"line":231,"column":5}},"loc":{"start":{"line":231,"column":45},"end":{"line":248,"column":5}},"line":231},"37":{"name":"(anonymous_37)","decl":{"start":{"line":249,"column":4},"end":{"line":249,"column":5}},"loc":{"start":{"line":249,"column":49},"end":{"line":252,"column":5}},"line":249},"38":{"name":"(anonymous_38)","decl":{"start":{"line":250,"column":47},"end":{"line":250,"column":48}},"loc":{"start":{"line":250,"column":52},"end":{"line":250,"column":78}},"line":250},"39":{"name":"(anonymous_39)","decl":{"start":{"line":251,"column":88},"end":{"line":251,"column":89}},"loc":{"start":{"line":251,"column":94},"end":{"line":251,"column":189}},"line":251},"40":{"name":"(anonymous_40)","decl":{"start":{"line":253,"column":4},"end":{"line":253,"column":5}},"loc":{"start":{"line":253,"column":64},"end":{"line":269,"column":5}},"line":253},"41":{"name":"(anonymous_41)","decl":{"start":{"line":270,"column":4},"end":{"line":270,"column":5}},"loc":{"start":{"line":270,"column":84},"end":{"line":287,"column":5}},"line":270},"42":{"name":"(anonymous_42)","decl":{"start":{"line":284,"column":24},"end":{"line":284,"column":25}},"loc":{"start":{"line":284,"column":29},"end":{"line":284,"column":92}},"line":284},"43":{"name":"(anonymous_43)","decl":{"start":{"line":285,"column":25},"end":{"line":285,"column":26}},"loc":{"start":{"line":285,"column":30},"end":{"line":285,"column":56}},"line":285}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":3},"end":{"line":11,"column":58}},"type":"binary-expr","locations":[{"start":{"line":11,"column":3},"end":{"line":11,"column":14}},{"start":{"line":11,"column":19},"end":{"line":11,"column":57}}],"line":11},"1":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"2":{"loc":{"start":{"line":29,"column":15},"end":{"line":29,"column":55}},"type":"binary-expr","locations":[{"start":{"line":29,"column":15},"end":{"line":29,"column":47}},{"start":{"line":29,"column":51},"end":{"line":29,"column":55}}],"line":29},"3":{"loc":{"start":{"line":32,"column":8},"end":{"line":36,"column":9}},"type":"switch","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":47}},{"start":{"line":34,"column":12},"end":{"line":34,"column":49}},{"start":{"line":35,"column":12},"end":{"line":35,"column":55}}],"line":32},"4":{"loc":{"start":{"line":50,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":53,"column":9}},{"start":{"line":50,"column":8},"end":{"line":53,"column":9}}],"line":50},"5":{"loc":{"start":{"line":57,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":60,"column":9}},{"start":{"line":57,"column":8},"end":{"line":60,"column":9}}],"line":57},"6":{"loc":{"start":{"line":62,"column":12},"end":{"line":83,"column":13}},"type":"switch","locations":[{"start":{"line":64,"column":16},"end":{"line":64,"column":102}},{"start":{"line":66,"column":16},"end":{"line":66,"column":103}},{"start":{"line":67,"column":16},"end":{"line":67,"column":111}},{"start":{"line":68,"column":16},"end":{"line":68,"column":103}},{"start":{"line":69,"column":16},"end":{"line":69,"column":107}},{"start":{"line":71,"column":16},"end":{"line":71,"column":91}},{"start":{"line":73,"column":16},"end":{"line":73,"column":109}},{"start":{"line":74,"column":16},"end":{"line":74,"column":125}},{"start":{"line":76,"column":16},"end":{"line":76,"column":113}},{"start":{"line":77,"column":16},"end":{"line":77,"column":121}},{"start":{"line":79,"column":16},"end":{"line":79,"column":133}},{"start":{"line":80,"column":16},"end":{"line":80,"column":149}},{"start":{"line":82,"column":16},"end":{"line":82,"column":107}}],"line":62},"7":{"loc":{"start":{"line":87,"column":56},"end":{"line":87,"column":70}},"type":"binary-expr","locations":[{"start":{"line":87,"column":56},"end":{"line":87,"column":65}},{"start":{"line":87,"column":69},"end":{"line":87,"column":70}}],"line":87},"8":{"loc":{"start":{"line":103,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":109,"column":9}},{"start":{"line":103,"column":8},"end":{"line":109,"column":9}}],"line":103},"9":{"loc":{"start":{"line":104,"column":28},"end":{"line":104,"column":117}},"type":"cond-expr","locations":[{"start":{"line":104,"column":36},"end":{"line":104,"column":85}},{"start":{"line":104,"column":90},"end":{"line":104,"column":116}}],"line":104},"10":{"loc":{"start":{"line":104,"column":36},"end":{"line":104,"column":85}},"type":"binary-expr","locations":[{"start":{"line":104,"column":36},"end":{"line":104,"column":77}},{"start":{"line":104,"column":81},"end":{"line":104,"column":85}}],"line":104},"11":{"loc":{"start":{"line":104,"column":90},"end":{"line":104,"column":116}},"type":"binary-expr","locations":[{"start":{"line":104,"column":90},"end":{"line":104,"column":108}},{"start":{"line":104,"column":112},"end":{"line":104,"column":116}}],"line":104},"12":{"loc":{"start":{"line":113,"column":8},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":119,"column":9}},{"start":{"line":113,"column":8},"end":{"line":119,"column":9}}],"line":113},"13":{"loc":{"start":{"line":123,"column":25},"end":{"line":123,"column":85}},"type":"binary-expr","locations":[{"start":{"line":123,"column":26},"end":{"line":123,"column":47}},{"start":{"line":123,"column":53},"end":{"line":123,"column":84}}],"line":123},"14":{"loc":{"start":{"line":126,"column":119},"end":{"line":126,"column":145}},"type":"binary-expr","locations":[{"start":{"line":126,"column":119},"end":{"line":126,"column":132}},{"start":{"line":126,"column":136},"end":{"line":126,"column":145}}],"line":126},"15":{"loc":{"start":{"line":134,"column":28},"end":{"line":134,"column":110}},"type":"binary-expr","locations":[{"start":{"line":134,"column":29},"end":{"line":134,"column":72}},{"start":{"line":134,"column":78},"end":{"line":134,"column":109}}],"line":134},"16":{"loc":{"start":{"line":135,"column":8},"end":{"line":144,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":144,"column":9}},{"start":{"line":135,"column":8},"end":{"line":144,"column":9}}],"line":135},"17":{"loc":{"start":{"line":138,"column":38},"end":{"line":138,"column":57}},"type":"binary-expr","locations":[{"start":{"line":138,"column":38},"end":{"line":138,"column":49}},{"start":{"line":138,"column":53},"end":{"line":138,"column":57}}],"line":138},"18":{"loc":{"start":{"line":138,"column":116},"end":{"line":138,"column":143}},"type":"binary-expr","locations":[{"start":{"line":138,"column":116},"end":{"line":138,"column":130}},{"start":{"line":138,"column":134},"end":{"line":138,"column":143}}],"line":138},"19":{"loc":{"start":{"line":149,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":159,"column":9}},{"start":{"line":149,"column":8},"end":{"line":159,"column":9}}],"line":149},"20":{"loc":{"start":{"line":151,"column":26},"end":{"line":151,"column":59}},"type":"binary-expr","locations":[{"start":{"line":151,"column":26},"end":{"line":151,"column":39}},{"start":{"line":151,"column":43},"end":{"line":151,"column":59}}],"line":151},"21":{"loc":{"start":{"line":152,"column":12},"end":{"line":158,"column":13}},"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":158,"column":13}},{"start":{"line":152,"column":12},"end":{"line":158,"column":13}}],"line":152},"22":{"loc":{"start":{"line":162,"column":24},"end":{"line":162,"column":59}},"type":"binary-expr","locations":[{"start":{"line":162,"column":24},"end":{"line":162,"column":39}},{"start":{"line":162,"column":43},"end":{"line":162,"column":59}}],"line":162},"23":{"loc":{"start":{"line":169,"column":116},"end":{"line":169,"column":153}},"type":"binary-expr","locations":[{"start":{"line":169,"column":116},"end":{"line":169,"column":140}},{"start":{"line":169,"column":144},"end":{"line":169,"column":153}}],"line":169},"24":{"loc":{"start":{"line":175,"column":25},"end":{"line":175,"column":92}},"type":"binary-expr","locations":[{"start":{"line":175,"column":25},"end":{"line":175,"column":46}},{"start":{"line":175,"column":50},"end":{"line":175,"column":92}}],"line":175},"25":{"loc":{"start":{"line":197,"column":8},"end":{"line":208,"column":9}},"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":208,"column":9}},{"start":{"line":197,"column":8},"end":{"line":208,"column":9}}],"line":197},"26":{"loc":{"start":{"line":213,"column":8},"end":{"line":215,"column":9}},"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":215,"column":9}},{"start":{"line":213,"column":8},"end":{"line":215,"column":9}}],"line":213},"27":{"loc":{"start":{"line":213,"column":12},"end":{"line":213,"column":73}},"type":"binary-expr","locations":[{"start":{"line":213,"column":13},"end":{"line":213,"column":31}},{"start":{"line":213,"column":37},"end":{"line":213,"column":72}}],"line":213},"28":{"loc":{"start":{"line":217,"column":27},"end":{"line":217,"column":62}},"type":"binary-expr","locations":[{"start":{"line":217,"column":27},"end":{"line":217,"column":42}},{"start":{"line":217,"column":46},"end":{"line":217,"column":62}}],"line":217},"29":{"loc":{"start":{"line":223,"column":27},"end":{"line":223,"column":62}},"type":"binary-expr","locations":[{"start":{"line":223,"column":27},"end":{"line":223,"column":42}},{"start":{"line":223,"column":46},"end":{"line":223,"column":62}}],"line":223},"30":{"loc":{"start":{"line":225,"column":8},"end":{"line":228,"column":9}},"type":"if","locations":[{"start":{"line":225,"column":8},"end":{"line":228,"column":9}},{"start":{"line":225,"column":8},"end":{"line":228,"column":9}}],"line":225},"31":{"loc":{"start":{"line":234,"column":8},"end":{"line":239,"column":9}},"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":239,"column":9}},{"start":{"line":234,"column":8},"end":{"line":239,"column":9}}],"line":234},"32":{"loc":{"start":{"line":235,"column":12},"end":{"line":238,"column":13}},"type":"if","locations":[{"start":{"line":235,"column":12},"end":{"line":238,"column":13}},{"start":{"line":235,"column":12},"end":{"line":238,"column":13}}],"line":235},"33":{"loc":{"start":{"line":255,"column":8},"end":{"line":268,"column":9}},"type":"if","locations":[{"start":{"line":255,"column":8},"end":{"line":268,"column":9}},{"start":{"line":255,"column":8},"end":{"line":268,"column":9}}],"line":255},"34":{"loc":{"start":{"line":255,"column":12},"end":{"line":255,"column":70}},"type":"binary-expr","locations":[{"start":{"line":255,"column":13},"end":{"line":255,"column":28}},{"start":{"line":255,"column":34},"end":{"line":255,"column":69}}],"line":255},"35":{"loc":{"start":{"line":271,"column":8},"end":{"line":286,"column":9}},"type":"if","locations":[{"start":{"line":271,"column":8},"end":{"line":286,"column":9}},{"start":{"line":271,"column":8},"end":{"line":286,"column":9}}],"line":271},"36":{"loc":{"start":{"line":284,"column":29},"end":{"line":284,"column":92}},"type":"binary-expr","locations":[{"start":{"line":284,"column":30},"end":{"line":284,"column":61}},{"start":{"line":284,"column":67},"end":{"line":284,"column":91}}],"line":284}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":142,"9":142,"10":142,"11":142,"12":142,"13":2,"14":58,"15":1,"16":57,"17":109,"18":15,"19":0,"20":4,"21":11,"22":11,"23":2,"24":11,"25":2,"26":2,"27":15,"28":15,"29":15,"30":1,"31":15,"32":180,"33":180,"34":1,"35":179,"36":179,"37":2,"38":1,"39":1,"40":12,"41":2,"42":15,"43":16,"44":6,"45":11,"46":1,"47":5,"48":1,"49":7,"50":0,"51":0,"52":11,"53":11,"54":11,"55":7,"56":7,"57":7,"58":7,"59":6,"60":7,"61":0,"62":1,"63":1,"64":1,"65":1,"66":1,"67":0,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":6,"78":5,"79":6,"80":4,"81":4,"82":4,"83":4,"84":4,"85":2,"86":16,"87":16,"88":16,"89":13,"90":13,"91":13,"92":1,"93":1,"94":12,"95":15,"96":15,"97":15,"98":15,"99":15,"100":8,"101":5,"102":15,"103":5,"104":15,"105":5,"106":15,"107":15,"108":2,"109":2,"110":1,"111":1,"112":12,"113":12,"114":2,"115":10,"116":10,"117":10,"118":10,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":2,"126":2,"127":2,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":3,"136":1,"137":3,"138":5,"139":5,"140":0,"141":5,"142":5,"143":5,"144":21,"145":17,"146":17,"147":9,"148":4,"149":1},"f":{"0":1,"1":142,"2":2,"3":2,"4":58,"5":109,"6":15,"7":11,"8":2,"9":11,"10":2,"11":2,"12":15,"13":1,"14":180,"15":11,"16":7,"17":6,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":6,"26":5,"27":16,"28":15,"29":8,"30":5,"31":5,"32":5,"33":2,"34":12,"35":1,"36":2,"37":1,"38":3,"39":3,"40":5,"41":21,"42":9,"43":4},"b":{"0":[1,1],"1":[1,57],"2":[57,3],"3":[0,4,11],"4":[15,0],"5":[1,179],"6":[2,1,1,12,2,15,16,6,11,1,5,1,7],"7":[0,0],"8":[7,0],"9":[5,2],"10":[5,2],"11":[2,1],"12":[1,0],"13":[1,1],"14":[1,0],"15":[5,5],"16":[4,2],"17":[4,1],"18":[4,1],"19":[13,3],"20":[13,1],"21":[1,12],"22":[15,0],"23":[15,5],"24":[5,3],"25":[1,1],"26":[2,10],"27":[12,11],"28":[10,0],"29":[1,0],"30":[1,0],"31":[1,1],"32":[1,0],"33":[0,5],"34":[5,5],"35":[17,4],"36":[9,9]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/BroadcastHandler.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/BroadcastHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { MessageHandler } from \"../BasicFDC3Server\";\nimport { InstanceID, ServerContext } from \"../ServerContext\";\nimport { Context } from \"@kite9/fdc3-context\";\nimport { AppIdentifier, ChannelError, DisplayMetadata } from \"@kite9/fdc3-standard\";\nimport { successResponse, errorResponse, onlyUnique } from \"./support\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\";\n\ntype PrivateChannelEventListenerTypes = BrowserTypes.PrivateChannelEventListenerTypes\ntype GetCurrentContextRequest = BrowserTypes.GetCurrentContextRequest\ntype BroadcastRequest = BrowserTypes.BroadcastRequest\ntype ContextListenerUnsubscribeRequest = BrowserTypes.ContextListenerUnsubscribeRequest\ntype AddContextListenerRequest = BrowserTypes.AddContextListenerRequest\ntype PrivateChannelDisconnectRequest = BrowserTypes.PrivateChannelDisconnectRequest\ntype PrivateChannelAddEventListenerRequest = BrowserTypes.PrivateChannelAddEventListenerRequest\ntype PrivateChannelUnsubscribeEventListenerRequest = BrowserTypes.PrivateChannelUnsubscribeEventListenerRequest\ntype GetOrCreateChannelRequest = BrowserTypes.GetOrCreateChannelRequest\ntype GetUserChannelsRequest = BrowserTypes.GetUserChannelsRequest\ntype LeaveCurrentChannelRequest = BrowserTypes.LeaveCurrentChannelRequest\ntype JoinUserChannelRequest = BrowserTypes.JoinUserChannelRequest\ntype GetCurrentChannelRequest = BrowserTypes.GetCurrentChannelRequest\ntype AgentEventMessage = BrowserTypes.AgentEventMessage\ntype CreatePrivateChannelRequest = BrowserTypes.CreatePrivateChannelRequest\n\ntype ContextListenerRegistration = {\n    appId: string,\n    instanceId: string,\n    listenerUuid: string,\n    channelId: string | null,\n    contextType: string | null\n    userChannelListener: boolean\n}\n\ntype NotificationAgentEventMessage = 'privateChannelOnAddContextListenerEvent' | 'privateChannelOnDisconnectEvent' | 'privateChannelOnUnsubscribeEvent'\n\ntype PrivateChannelEventListener = {\n    appId: string,\n    instanceId: string,\n    channelId: string,\n    eventType: PrivateChannelEventListenerTypes,\n    listenerUuid: string\n}\n\nexport enum ChannelType { 'user', 'app', 'private' }\n\nexport type ChannelState = {\n    id: string,\n    type: ChannelType,\n    context: Context[],\n    displayMetadata: DisplayMetadata\n}\n\nexport class BroadcastHandler implements MessageHandler {\n\n    private contextListeners: ContextListenerRegistration[] = []\n    private readonly eventListeners: PrivateChannelEventListener[] = []\n    private readonly state: ChannelState[] = []\n    private readonly currentChannel: { [instanceId: string]: ChannelState } = {}\n\n    constructor(initialChannelState: ChannelState[]) {\n        this.state = initialChannelState\n    }\n\n    shutdown(): void {\n    }\n\n    getCurrentChannel(from: AppIdentifier): ChannelState | null {\n        return this.currentChannel[from.instanceId!!]\n    }\n\n    getChannelById(id: string | null): ChannelState | null {\n        if (id == null) {\n            return null\n        }\n        return this.state.find(c => c.id == id) ?? null\n    }\n\n    convertChannelTypeToString(type: ChannelType): string {\n        switch (type) {\n            case ChannelType.app: return 'app'\n            case ChannelType.user: return 'user'\n            case ChannelType.private: return 'private'\n        }\n    }\n\n    getListeners(appId: AppIdentifier) {\n        return this.contextListeners.filter(r => r.instanceId == appId.instanceId)\n    }\n\n    moveUserChannelListeners(app: AppIdentifier, channelId: string | null) {\n        this.getListeners(app)\n            .filter(l => l.userChannelListener)\n            .forEach(l => {\n                l.channelId = channelId\n            })\n    }\n\n    updateChannelState(channelId: string, context: Context) {\n        const cs = this.getChannelById(channelId)\n        if (cs) {\n            cs.context = cs.context.filter(c => c.type != context.type)\n            cs.context.unshift(context)\n        }\n    }\n\n    accept(msg: any, sc: ServerContext<any>, uuid: InstanceID) {\n        const from = sc.getInstanceDetails(uuid)\n\n        if (from == null) {\n            // this handler only deals with connected apps\n            return\n        }\n\n        try {\n\n            switch (msg.type as string | null) {\n                // app channels registration\n                case 'getOrCreateChannelRequest': return this.handleGetOrCreateRequest(msg as GetOrCreateChannelRequest, sc, from)\n\n                // user channel management\n                case 'getUserChannelsRequest': return this.handleGetUserChannelsRequest(msg as GetUserChannelsRequest, sc, from)\n                case 'leaveCurrentChannelRequest': return this.handleLeaveCurrentChannelRequest(msg as LeaveCurrentChannelRequest, sc, from)\n                case 'joinUserChannelRequest': return this.handleJoinUserChannelRequest(msg as JoinUserChannelRequest, sc, from)\n                case 'getCurrentChannelRequest': return this.handleGetCurrentChannelRequest(msg as GetCurrentChannelRequest, sc, from)\n\n                // general broadcast\n                case 'broadcastRequest': return this.handleBroadcastRequest(msg as BroadcastRequest, sc, from)\n\n                // context listeners\n                case 'addContextListenerRequest': return this.handleAddContextListenerRequest(msg as AddContextListenerRequest, sc, from)\n                case 'contextListenerUnsubscribeRequest': return this.handleContextListenerUnsubscribeRequest(msg as ContextListenerUnsubscribeRequest, sc, from)\n\n                // private channels create/disconnect\n                case 'createPrivateChannelRequest': return this.handleCreatePrivateChannelRequest(msg as CreatePrivateChannelRequest, sc, from)\n                case 'privateChannelDisconnectRequest': return this.handlePrivateChannelDisconnectRequest(msg as PrivateChannelDisconnectRequest, sc, from)\n\n                // private channel event listeners\n                case 'privateChannelAddEventListenerRequest': return this.handlePrivateChannelAddEventListenerRequest(msg as PrivateChannelAddEventListenerRequest, from, sc)\n                case 'privateChannelUnsubscribeEventListenerRequest': return this.handlePrivateChannelUnsubscribeEventListenerRequest(msg as PrivateChannelUnsubscribeEventListenerRequest, sc, from)\n\n                // handling state synchronisation of channels\n                case 'getCurrentContextRequest': return this.handleGetCurrentContextRequest(msg as GetCurrentContextRequest, sc, from)\n            }\n        } catch (e: any) {\n            const responseType = msg.type.replace(new RegExp(\"Request$\"), 'Response')\n            errorResponse(sc, msg, from, e.message ?? e, responseType)\n        }\n    }\n\n    handleCreatePrivateChannelRequest(arg0: CreatePrivateChannelRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const id = sc.createUUID()\n        this.state.push({\n            id,\n            type: ChannelType.private,\n            context: [],\n            displayMetadata: {\n            }\n        })\n\n        successResponse(sc, arg0, from, { privateChannel: { id, type: this.convertChannelTypeToString(ChannelType.private) } }, 'createPrivateChannelResponse')\n    }\n\n    handleGetCurrentContextRequest(arg0: GetCurrentContextRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const channel = this.getChannelById(arg0.payload.channelId)\n        const type = arg0.payload.contextType\n\n        if (channel) {\n            const context = type ? (channel.context.find(c => c.type == type) ?? null) : (channel.context[0] ?? null)\n            successResponse(sc, arg0, from, { context: context }, 'getCurrentContextResponse')\n        } else {\n            errorResponse(sc, arg0, from, ChannelError.NoChannelFound, 'getCurrentContextResponse')\n        }\n    }\n\n    handlePrivateChannelUnsubscribeEventListenerRequest(arg0: PrivateChannelUnsubscribeEventListenerRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const i = this.eventListeners.findIndex(r => r.listenerUuid == arg0.payload.listenerUUID)\n        if (i > -1) {\n            this.eventListeners.splice(i, 1)\n            successResponse(sc, arg0, from, {}, 'privateChannelUnsubscribeEventListenerResponse')\n        } else {\n            errorResponse(sc, arg0, from, \"ListenerNotFound\", 'privateChannelUnsubscribeEventListenerResponse')\n        }\n    }\n\n    handlePrivateChannelDisconnectRequest(arg0: PrivateChannelDisconnectRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const toUnsubscribe = this.contextListeners\n            .filter(r => (r.appId == from.appId) && (r.instanceId == from.instanceId))\n            .filter(r => r.channelId == arg0.payload.channelId)\n\n        toUnsubscribe.forEach(u => {\n            this.invokeEventListeners(arg0.payload.channelId, \"onUnsubscribe\", 'privateChannelOnUnsubscribeEvent', sc, u.contextType ?? undefined)\n        })\n\n        this.contextListeners = this.contextListeners.filter(r => !toUnsubscribe.includes(r))\n        this.invokeEventListeners(arg0.payload.channelId, \"onDisconnect\", 'privateChannelOnDisconnectEvent', sc)\n        successResponse(sc, arg0, from, {}, 'privateChannelDisconnectResponse')\n    }\n\n    handleContextListenerUnsubscribeRequest(arg0: ContextListenerUnsubscribeRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const i = this.contextListeners\n            .findIndex(r => (r.listenerUuid == arg0.payload.listenerUUID) && (r.instanceId == from.instanceId))\n\n        if (i > -1) {\n            const rl = this.contextListeners[i]\n            const channel = this.getChannelById(rl.channelId)\n            this.invokeEventListeners(channel?.id ?? null, \"onUnsubscribe\", 'privateChannelOnUnsubscribeEvent', sc, rl.contextType ?? undefined)\n            this.contextListeners.splice(i, 1)\n            successResponse(sc, arg0, from, {}, 'contextListenerUnsubscribeResponse')\n        } else {\n            errorResponse(sc, arg0, from, \"ListenerNotFound\", 'contextListenerUnsubscribeResponse')\n        }\n    }\n\n    handleAddContextListenerRequest(arg0: AddContextListenerRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        var channelId = null\n        var channelType = ChannelType.user\n\n        if (arg0.payload?.channelId) {\n            const channel = this.getChannelById(arg0.payload?.channelId)\n            channelType = channel?.type ?? ChannelType.user\n\n            if (channel == null) {\n                errorResponse(sc, arg0, from, ChannelError.NoChannelFound, 'addContextListenerResponse')\n                return\n            } else {\n                channelId = channel.id\n            }\n        }\n\n        const lr: ContextListenerRegistration = {\n            appId: from.appId,\n            instanceId: from.instanceId ?? 'no-instance-id',\n            channelId: channelId,\n            listenerUuid: sc.createUUID(),\n            contextType: arg0.payload.contextType,\n            userChannelListener: channelType == ChannelType.user\n        }\n\n        this.contextListeners.push(lr)\n        this.invokeEventListeners(channelId, \"onAddContextListener\", \"privateChannelOnAddContextListenerEvent\", sc, arg0.payload.contextType ?? undefined)\n        successResponse(sc, arg0, from, { listenerUUID: lr.listenerUuid }, 'addContextListenerResponse')\n\n    }\n\n    handleBroadcastRequest(arg0: BroadcastRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const matchingListeners = this.contextListeners\n            .filter(r => r.channelId == arg0.payload.channelId)\n            .filter(r => r.contextType == null || r.contextType == arg0.payload.context.type)\n\n        const matchingApps = matchingListeners\n            .map(r => { return { appId: r.appId, instanceId: r.instanceId } })\n            .filter(onlyUnique)\n\n        matchingApps.forEach(app => {\n            sc.post({\n                meta: {\n                    eventUuid: sc.createUUID(),\n                    timestamp: new Date()\n                },\n                type: 'broadcastEvent',\n                payload: {\n                    channelId: arg0.payload.channelId,\n                    context: arg0.payload.context\n                }\n            }, app.instanceId)\n        })\n\n        this.updateChannelState(arg0.payload.channelId, arg0.payload.context)\n        successResponse(sc, arg0, from, {}, 'broadcastResponse')\n    }\n\n    handleGetCurrentChannelRequest(arg0: GetCurrentChannelRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const currentChannel = this.getCurrentChannel(from)\n        if (currentChannel) {\n            successResponse(sc, arg0, from, {\n                channel: {\n                    id: currentChannel.id,\n                    type: this.convertChannelTypeToString(currentChannel.type),\n                    displayMetadata: currentChannel.displayMetadata\n                }\n            }, 'getCurrentChannelResponse')\n        } else {\n            successResponse(sc, arg0, from, { channel: null }, 'getCurrentChannelResponse')\n        }\n    }\n\n    handleJoinUserChannelRequest(arg0: JoinUserChannelRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        // check it's a user channel\n        const newChannel = this.getChannelById(arg0.payload.channelId)\n        if ((newChannel == null) || (newChannel.type != ChannelType.user)) {\n            return errorResponse(sc, arg0, from, ChannelError.NoChannelFound, 'joinUserChannelResponse')\n        }\n\n        // join it.  \n        const instanceId = from.instanceId ?? 'no-instance-id'\n        this.currentChannel[instanceId] = newChannel\n        this.moveUserChannelListeners(from, newChannel.id)\n        successResponse(sc, arg0, from, {}, 'joinUserChannelResponse')\n    }\n\n    handleLeaveCurrentChannelRequest(arg0: LeaveCurrentChannelRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const instanceId = from.instanceId ?? 'no-instance-id'\n        const currentChannel = this.currentChannel[instanceId]\n        if (currentChannel) {\n            delete this.currentChannel[instanceId]\n            this.moveUserChannelListeners(from, null)\n        }\n        successResponse(sc, arg0, from, {}, 'leaveCurrentChannelResponse')\n    }\n\n    handleGetOrCreateRequest(arg0: GetOrCreateChannelRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const id = arg0.payload.channelId\n        var channel = this.getChannelById(id)\n        if (channel) {\n            if (channel.type != ChannelType.app) {\n                errorResponse(sc, arg0, from, ChannelError.AccessDenied, 'getOrCreateChannelResponse')\n                return\n            }\n        }\n\n        channel = {\n            id: id,\n            type: ChannelType.app,\n            context: [],\n            displayMetadata: {}\n        }\n        this.state.push(channel)\n        successResponse(sc, arg0, from, { channel: { id: channel.id, type: channel.type, } }, 'getOrCreateChannelResponse')\n    }\n\n\n    handleGetUserChannelsRequest(arg0: GetUserChannelsRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const userChannels = this.state.filter(c => c.type == ChannelType.user)\n        successResponse(sc, arg0, from, { userChannels: userChannels.map(c => ({ id: c.id, type: this.convertChannelTypeToString(c.type), displayMetadata: c.displayMetadata })) }, 'getUserChannelsResponse')\n    }\n\n    handlePrivateChannelAddEventListenerRequest(arg0: PrivateChannelAddEventListenerRequest, from: AppIdentifier, sc: ServerContext<any>) {\n        const channel = this.getChannelById(arg0.payload.privateChannelId)\n\n        if ((channel == null) || (channel.type != ChannelType.private)) {\n            errorResponse(sc, arg0, from, ChannelError.NoChannelFound, 'privateChannelAddEventListenerResponse')\n        } else {\n            const el = {\n                appId: from.appId!!,\n                instanceId: from.instanceId!!,\n                channelId: arg0.payload.privateChannelId,\n                eventType: arg0.payload.listenerType,\n                listenerUuid: sc.createUUID(),\n            } as PrivateChannelEventListener\n            this.eventListeners.push(el)\n            successResponse(sc, arg0, from, { listenerUUID: el.listenerUuid }, 'privateChannelAddEventListenerResponse')\n        }\n    }\n\n    invokeEventListeners(privateChannelId: string | null, eventType: PrivateChannelEventListenerTypes, messageType: NotificationAgentEventMessage, sc: ServerContext<any>, contextType?: string) {\n        if (privateChannelId) {\n            const msg = {\n                type: messageType,\n                meta: {\n                    eventUuid: sc.createUUID(),\n                    timestamp: new Date()\n                },\n                payload: {\n                    privateChannelId,\n                    contextType: contextType\n                }\n            } as AgentEventMessage\n\n            this.eventListeners\n                .filter(e => (e.channelId == privateChannelId) && (e.eventType == eventType))\n                .forEach(e => sc.post(msg, e.instanceId))\n        }\n    }\n\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ca205c6dd5e1bcc179f282e0dc46b1293430ae5f","contentHash":"b95033c250109f949abfc37b141fee4798dbb3fc518be4d92eeb4743d3b0bdf9"},"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/support.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/support.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":78}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":74}},"8":{"start":{"line":15,"column":4},"end":{"line":23,"column":22}},"9":{"start":{"line":26,"column":4},"end":{"line":36,"column":22}},"10":{"start":{"line":42,"column":4},"end":{"line":42,"column":41}}},"fnMap":{"0":{"name":"successResponse","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":24}},"loc":{"start":{"line":8,"column":57},"end":{"line":10,"column":1}},"line":8},"1":{"name":"errorResponse","decl":{"start":{"line":11,"column":9},"end":{"line":11,"column":22}},"loc":{"start":{"line":11,"column":53},"end":{"line":13,"column":1}},"line":11},"2":{"name":"successResponseId","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":26}},"loc":{"start":{"line":14,"column":61},"end":{"line":24,"column":1}},"line":14},"3":{"name":"errorResponseId","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":24}},"loc":{"start":{"line":25,"column":57},"end":{"line":37,"column":1}},"line":25},"4":{"name":"onlyUnique","decl":{"start":{"line":41,"column":9},"end":{"line":41,"column":19}},"loc":{"start":{"line":41,"column":40},"end":{"line":43,"column":1}},"line":41}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":130,"7":10,"8":143,"9":22,"10":5},"f":{"0":130,"1":10,"2":143,"3":22,"4":5},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/support.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/support.ts"],"names":[],"mappings":";;AAOA,0CAEC;AAED,sCAEC;AAED,8CAUC;AAED,0CAYC;AAKD,gCAEC;AAvCD,SAAgB,eAAe,CAAC,EAAkC,EAAE,OAA0B,EAAE,EAAiB,EAAE,OAAY,EAAE,IAAY;IACzI,OAAO,iBAAiB,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AAC9E,CAAC;AAED,SAAgB,aAAa,CAAC,EAAkC,EAAE,OAA0B,EAAE,EAAiB,EAAE,KAAa,EAAE,IAAY;IACxI,OAAO,eAAe,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC1E,CAAC;AAED,SAAgB,iBAAiB,CAAC,EAAkC,EAAE,SAAiB,EAAE,EAAiB,EAAE,OAAY,EAAE,IAAY;IAClI,EAAE,CAAC,IAAI,CAAC;QACJ,IAAI,EAAE;YACF,YAAY,EAAE,EAAE,CAAC,UAAU,EAAE;YAC7B,WAAW,EAAE,SAAS;YACtB,SAAS,EAAE,IAAI,IAAI,EAAE;SACxB;QACD,IAAI;QACJ,OAAO;KACc,EAAE,EAAE,CAAC,UAAY,CAAC,CAAA;AAC/C,CAAC;AAED,SAAgB,eAAe,CAAC,EAAkC,EAAE,SAAiB,EAAE,EAAiB,EAAE,KAAa,EAAE,IAAY;IACjI,EAAE,CAAC,IAAI,CAAC;QACJ,IAAI,EAAE;YACF,YAAY,EAAE,EAAE,CAAC,UAAU,EAAE;YAC7B,WAAW,EAAE,SAAS;YACtB,SAAS,EAAE,IAAI,IAAI,EAAE;SACxB;QACD,IAAI;QACJ,OAAO,EAAE;YACL,KAAK;SACR;KACoB,EAAE,EAAE,CAAC,UAAY,CAAC,CAAA;AAC/C,CAAC;AAED;;GAEG;AACH,SAAgB,UAAU,CAAC,KAAU,EAAE,KAAU,EAAE,IAAS;IACxD,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;AACzC,CAAC","sourcesContent":["import { AppRegistration, ServerContext } from \"../ServerContext\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\";\nimport { AppIdentifier } from \"@kite9/fdc3-standard\";\n\ntype AppRequestMessage = BrowserTypes.AppRequestMessage\ntype AgentResponseMessage = BrowserTypes.AgentResponseMessage\n\nexport function successResponse(sc: ServerContext<AppRegistration>, request: AppRequestMessage, to: AppIdentifier, payload: any, type: string) {\n    return successResponseId(sc, request.meta.requestUuid, to, payload, type);\n}\n\nexport function errorResponse(sc: ServerContext<AppRegistration>, request: AppRequestMessage, to: AppIdentifier, error: string, type: string) {\n    return errorResponseId(sc, request.meta.requestUuid, to, error, type);\n}\n\nexport function successResponseId(sc: ServerContext<AppRegistration>, requestId: string, to: AppIdentifier, payload: any, type: string) {\n    sc.post({\n        meta: {\n            responseUuid: sc.createUUID(),\n            requestUuid: requestId,\n            timestamp: new Date()\n        },\n        type,\n        payload,\n    } as AgentResponseMessage, to.instanceId!!)\n}\n\nexport function errorResponseId(sc: ServerContext<AppRegistration>, requestId: string, to: AppIdentifier, error: string, type: string) {\n    sc.post({\n        meta: {\n            responseUuid: sc.createUUID(),\n            requestUuid: requestId,\n            timestamp: new Date()\n        },\n        type,\n        payload: {\n            error\n        },\n    } as AgentResponseMessage, to.instanceId!!)\n}\n\n/* \n * from: https://stackoverflow.com/questions/1960473/get-all-unique-values-in-a-javascript-array-remove-duplicates#14438954\n */\nexport function onlyUnique(value: any, index: any, self: any) {\n    return self.indexOf(value) === index;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b48e09245c99fc180367666abe82ca9b28319436","contentHash":"9ca63be3de9efaaa4845ffb98aac1f8f4529133e80a8a3d86a8a7b682ab2ea98"},"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/IntentHandler.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/IntentHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":38}},"4":{"start":{"line":10,"column":16},"end":{"line":25,"column":5}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":59}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":38}},"7":{"start":{"line":29,"column":4},"end":{"line":34,"column":18}},"8":{"start":{"line":43,"column":15},"end":{"line":43,"column":20}},"9":{"start":{"line":49,"column":8},"end":{"line":49,"column":19}},"10":{"start":{"line":50,"column":8},"end":{"line":50,"column":27}},"11":{"start":{"line":51,"column":8},"end":{"line":51,"column":21}},"12":{"start":{"line":52,"column":8},"end":{"line":52,"column":21}},"13":{"start":{"line":54,"column":8},"end":{"line":59,"column":25}},"14":{"start":{"line":55,"column":12},"end":{"line":58,"column":13}},"15":{"start":{"line":56,"column":16},"end":{"line":56,"column":133}},"16":{"start":{"line":57,"column":16},"end":{"line":57,"column":52}},"17":{"start":{"line":62,"column":8},"end":{"line":68,"column":9}},"18":{"start":{"line":65,"column":12},"end":{"line":65,"column":33}},"19":{"start":{"line":66,"column":12},"end":{"line":66,"column":48}},"20":{"start":{"line":67,"column":12},"end":{"line":67,"column":105}},"21":{"start":{"line":73,"column":11},"end":{"line":73,"column":13}},"22":{"start":{"line":74,"column":21},"end":{"line":74,"column":30}},"23":{"start":{"line":75,"column":25},"end":{"line":75,"column":34}},"24":{"start":{"line":78,"column":8},"end":{"line":78,"column":27}},"25":{"start":{"line":79,"column":8},"end":{"line":79,"column":35}},"26":{"start":{"line":84,"column":20},"end":{"line":84,"column":71}},"27":{"start":{"line":85,"column":8},"end":{"line":85,"column":19}},"28":{"start":{"line":88,"column":21},"end":{"line":88,"column":48}},"29":{"start":{"line":89,"column":8},"end":{"line":92,"column":9}},"30":{"start":{"line":91,"column":12},"end":{"line":91,"column":19}},"31":{"start":{"line":93,"column":8},"end":{"line":110,"column":9}},"32":{"start":{"line":94,"column":12},"end":{"line":105,"column":13}},"33":{"start":{"line":96,"column":52},"end":{"line":96,"column":107}},"34":{"start":{"line":97,"column":42},"end":{"line":97,"column":87}},"35":{"start":{"line":99,"column":49},"end":{"line":99,"column":96}},"36":{"start":{"line":100,"column":57},"end":{"line":100,"column":98}},"37":{"start":{"line":102,"column":43},"end":{"line":102,"column":89}},"38":{"start":{"line":103,"column":53},"end":{"line":103,"column":109}},"39":{"start":{"line":104,"column":44},"end":{"line":104,"column":91}},"40":{"start":{"line":108,"column":33},"end":{"line":108,"column":85}},"41":{"start":{"line":109,"column":12},"end":{"line":109,"column":86}},"42":{"start":{"line":116,"column":26},"end":{"line":116,"column":61}},"43":{"start":{"line":117,"column":19},"end":{"line":117,"column":57}},"44":{"start":{"line":118,"column":8},"end":{"line":130,"column":9}},"45":{"start":{"line":120,"column":12},"end":{"line":122,"column":44}},"46":{"start":{"line":124,"column":12},"end":{"line":124,"column":87}},"47":{"start":{"line":125,"column":12},"end":{"line":125,"column":54}},"48":{"start":{"line":129,"column":12},"end":{"line":129,"column":115}},"49":{"start":{"line":133,"column":19},"end":{"line":133,"column":44}},"50":{"start":{"line":134,"column":19},"end":{"line":134,"column":67}},"51":{"start":{"line":134,"column":46},"end":{"line":134,"column":66}},"52":{"start":{"line":135,"column":8},"end":{"line":141,"column":9}},"53":{"start":{"line":136,"column":12},"end":{"line":136,"column":36}},"54":{"start":{"line":137,"column":12},"end":{"line":137,"column":100}},"55":{"start":{"line":140,"column":12},"end":{"line":140,"column":119}},"56":{"start":{"line":144,"column":19},"end":{"line":149,"column":9}},"57":{"start":{"line":150,"column":8},"end":{"line":150,"column":27}},"58":{"start":{"line":151,"column":8},"end":{"line":153,"column":40}},"59":{"start":{"line":155,"column":8},"end":{"line":160,"column":9}},"60":{"start":{"line":156,"column":12},"end":{"line":156,"column":25}},"61":{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},"62":{"start":{"line":158,"column":16},"end":{"line":158,"column":46}},"63":{"start":{"line":163,"column":8},"end":{"line":163,"column":105}},"64":{"start":{"line":163,"column":35},"end":{"line":163,"column":95}},"65":{"start":{"line":166,"column":8},"end":{"line":166,"column":75}},"66":{"start":{"line":166,"column":57},"end":{"line":166,"column":73}},"67":{"start":{"line":170,"column":19},"end":{"line":170,"column":60}},"68":{"start":{"line":171,"column":8},"end":{"line":171,"column":36}},"69":{"start":{"line":172,"column":8},"end":{"line":172,"column":65}},"70":{"start":{"line":172,"column":44},"end":{"line":172,"column":61}},"71":{"start":{"line":175,"column":8},"end":{"line":183,"column":11}},"72":{"start":{"line":176,"column":12},"end":{"line":182,"column":14}},"73":{"start":{"line":186,"column":8},"end":{"line":189,"column":9}},"74":{"start":{"line":188,"column":12},"end":{"line":188,"column":159}},"75":{"start":{"line":190,"column":38},"end":{"line":190,"column":101}},"76":{"start":{"line":190,"column":55},"end":{"line":190,"column":100}},"77":{"start":{"line":191,"column":8},"end":{"line":197,"column":9}},"78":{"start":{"line":192,"column":12},"end":{"line":192,"column":67}},"79":{"start":{"line":196,"column":12},"end":{"line":196,"column":78}},"80":{"start":{"line":201,"column":32},"end":{"line":201,"column":101}},"81":{"start":{"line":202,"column":25},"end":{"line":202,"column":75}},"82":{"start":{"line":202,"column":51},"end":{"line":202,"column":74}},"83":{"start":{"line":203,"column":8},"end":{"line":210,"column":9}},"84":{"start":{"line":205,"column":23},"end":{"line":205,"column":62}},"85":{"start":{"line":206,"column":12},"end":{"line":206,"column":40}},"86":{"start":{"line":209,"column":12},"end":{"line":209,"column":123}},"87":{"start":{"line":214,"column":28},"end":{"line":214,"column":71}},"88":{"start":{"line":215,"column":27},"end":{"line":215,"column":97}},"89":{"start":{"line":216,"column":35},"end":{"line":216,"column":106}},"90":{"start":{"line":217,"column":8},"end":{"line":237,"column":9}},"91":{"start":{"line":218,"column":12},"end":{"line":236,"column":13}},"92":{"start":{"line":220,"column":16},"end":{"line":220,"column":91}},"93":{"start":{"line":222,"column":17},"end":{"line":236,"column":13}},"94":{"start":{"line":224,"column":35},"end":{"line":224,"column":80}},"95":{"start":{"line":225,"column":16},"end":{"line":235,"column":17}},"96":{"start":{"line":226,"column":31},"end":{"line":229,"column":21}},"97":{"start":{"line":230,"column":20},"end":{"line":230,"column":71}},"98":{"start":{"line":234,"column":20},"end":{"line":234,"column":162}},"99":{"start":{"line":239,"column":8},"end":{"line":249,"column":9}},"100":{"start":{"line":240,"column":12},"end":{"line":242,"column":29}},"101":{"start":{"line":246,"column":12},"end":{"line":248,"column":29}},"102":{"start":{"line":252,"column":21},"end":{"line":252,"column":53}},"103":{"start":{"line":252,"column":45},"end":{"line":252,"column":52}},"104":{"start":{"line":253,"column":27},"end":{"line":253,"column":78}},"105":{"start":{"line":253,"column":52},"end":{"line":253,"column":70}},"106":{"start":{"line":254,"column":8},"end":{"line":254,"column":33}},"107":{"start":{"line":257,"column":30},"end":{"line":257,"column":57}},"108":{"start":{"line":258,"column":32},"end":{"line":258,"column":118}},"109":{"start":{"line":258,"column":50},"end":{"line":258,"column":117}},"110":{"start":{"line":259,"column":34},"end":{"line":259,"column":112}},"111":{"start":{"line":259,"column":59},"end":{"line":259,"column":71}},"112":{"start":{"line":259,"column":93},"end":{"line":259,"column":111}},"113":{"start":{"line":260,"column":27},"end":{"line":273,"column":10}},"114":{"start":{"line":261,"column":44},"end":{"line":261,"column":112}},"115":{"start":{"line":261,"column":73},"end":{"line":261,"column":91}},"116":{"start":{"line":261,"column":103},"end":{"line":261,"column":111}},"117":{"start":{"line":262,"column":32},"end":{"line":262,"column":102}},"118":{"start":{"line":262,"column":59},"end":{"line":262,"column":101}},"119":{"start":{"line":263,"column":12},"end":{"line":272,"column":14}},"120":{"start":{"line":270,"column":58},"end":{"line":270,"column":78}},"121":{"start":{"line":274,"column":35},"end":{"line":274,"column":106}},"122":{"start":{"line":275,"column":8},"end":{"line":278,"column":9}},"123":{"start":{"line":277,"column":12},"end":{"line":277,"column":145}},"124":{"start":{"line":279,"column":8},"end":{"line":295,"column":9}},"125":{"start":{"line":280,"column":33},"end":{"line":280,"column":54}},"126":{"start":{"line":281,"column":12},"end":{"line":294,"column":13}},"127":{"start":{"line":282,"column":38},"end":{"line":282,"column":88}},"128":{"start":{"line":282,"column":68},"end":{"line":282,"column":80}},"129":{"start":{"line":283,"column":27},"end":{"line":286,"column":17}},"130":{"start":{"line":287,"column":16},"end":{"line":293,"column":17}},"131":{"start":{"line":289,"column":20},"end":{"line":289,"column":78}},"132":{"start":{"line":291,"column":21},"end":{"line":293,"column":17}},"133":{"start":{"line":292,"column":20},"end":{"line":292,"column":85}},"134":{"start":{"line":296,"column":8},"end":{"line":305,"column":9}},"135":{"start":{"line":298,"column":12},"end":{"line":300,"column":29}},"136":{"start":{"line":304,"column":12},"end":{"line":304,"column":141}},"137":{"start":{"line":308,"column":30},"end":{"line":314,"column":9}},"138":{"start":{"line":315,"column":23},"end":{"line":315,"column":39}},"139":{"start":{"line":316,"column":8},"end":{"line":324,"column":9}},"140":{"start":{"line":317,"column":12},"end":{"line":317,"column":90}},"141":{"start":{"line":319,"column":13},"end":{"line":324,"column":9}},"142":{"start":{"line":320,"column":12},"end":{"line":320,"column":87}},"143":{"start":{"line":323,"column":12},"end":{"line":323,"column":65}},"144":{"start":{"line":328,"column":30},"end":{"line":328,"column":109}},"145":{"start":{"line":329,"column":34},"end":{"line":329,"column":122}},"146":{"start":{"line":329,"column":68},"end":{"line":329,"column":121}},"147":{"start":{"line":329,"column":86},"end":{"line":329,"column":115}},"148":{"start":{"line":330,"column":39},"end":{"line":338,"column":10}},"149":{"start":{"line":331,"column":12},"end":{"line":337,"column":14}},"150":{"start":{"line":339,"column":8},"end":{"line":341,"column":9}},"151":{"start":{"line":340,"column":12},"end":{"line":340,"column":158}},"152":{"start":{"line":342,"column":23},"end":{"line":342,"column":39}},"153":{"start":{"line":343,"column":8},"end":{"line":351,"column":9}},"154":{"start":{"line":344,"column":12},"end":{"line":344,"column":97}},"155":{"start":{"line":346,"column":13},"end":{"line":351,"column":9}},"156":{"start":{"line":347,"column":12},"end":{"line":347,"column":94}},"157":{"start":{"line":350,"column":12},"end":{"line":350,"column":72}},"158":{"start":{"line":355,"column":28},"end":{"line":355,"column":37}},"159":{"start":{"line":356,"column":22},"end":{"line":356,"column":89}},"160":{"start":{"line":358,"column":22},"end":{"line":358,"column":24}},"161":{"start":{"line":359,"column":8},"end":{"line":377,"column":11}},"162":{"start":{"line":360,"column":29},"end":{"line":360,"column":78}},"163":{"start":{"line":360,"column":46},"end":{"line":360,"column":77}},"164":{"start":{"line":361,"column":12},"end":{"line":376,"column":13}},"165":{"start":{"line":362,"column":16},"end":{"line":362,"column":56}},"166":{"start":{"line":365,"column":16},"end":{"line":375,"column":19}},"167":{"start":{"line":378,"column":8},"end":{"line":380,"column":43}},"168":{"start":{"line":383,"column":48},"end":{"line":383,"column":57}},"169":{"start":{"line":385,"column":22},"end":{"line":391,"column":10}},"170":{"start":{"line":387,"column":12},"end":{"line":390,"column":14}},"171":{"start":{"line":393,"column":22},"end":{"line":403,"column":10}},"172":{"start":{"line":395,"column":12},"end":{"line":397,"column":14}},"173":{"start":{"line":401,"column":28},"end":{"line":401,"column":65}},"174":{"start":{"line":401,"column":45},"end":{"line":401,"column":64}},"175":{"start":{"line":402,"column":12},"end":{"line":402,"column":28}},"176":{"start":{"line":405,"column":35},"end":{"line":405,"column":100}},"177":{"start":{"line":406,"column":28},"end":{"line":406,"column":107}},"178":{"start":{"line":407,"column":8},"end":{"line":415,"column":33}},"179":{"start":{"line":418,"column":27},"end":{"line":418,"column":54}},"180":{"start":{"line":419,"column":25},"end":{"line":419,"column":74}},"181":{"start":{"line":419,"column":47},"end":{"line":419,"column":73}},"182":{"start":{"line":421,"column":23},"end":{"line":421,"column":95}},"183":{"start":{"line":421,"column":44},"end":{"line":421,"column":94}},"184":{"start":{"line":421,"column":65},"end":{"line":421,"column":93}},"185":{"start":{"line":423,"column":8},"end":{"line":423,"column":22}},"186":{"start":{"line":426,"column":0},"end":{"line":426,"column":38}}},"fnMap":{"0":{"name":"forwardRequest","decl":{"start":{"line":9,"column":15},"end":{"line":9,"column":29}},"loc":{"start":{"line":9,"column":48},"end":{"line":35,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":34},"end":{"line":60,"column":5}},"line":48},"2":{"name":"(anonymous_2)","decl":{"start":{"line":54,"column":19},"end":{"line":54,"column":20}},"loc":{"start":{"line":54,"column":25},"end":{"line":59,"column":9}},"line":54},"3":{"name":"(anonymous_3)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":23},"end":{"line":69,"column":5}},"line":61},"4":{"name":"(anonymous_4)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":30},"end":{"line":80,"column":5}},"line":77},"5":{"name":"(anonymous_5)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":15},"end":{"line":82,"column":5}},"line":81},"6":{"name":"(anonymous_6)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":57},"end":{"line":86,"column":5}},"line":83},"7":{"name":"(anonymous_7)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":32},"end":{"line":111,"column":5}},"line":87},"8":{"name":"(anonymous_8)","decl":{"start":{"line":115,"column":4},"end":{"line":115,"column":5}},"loc":{"start":{"line":115,"column":40},"end":{"line":131,"column":5}},"line":115},"9":{"name":"(anonymous_9)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":34},"end":{"line":142,"column":5}},"line":132},"10":{"name":"(anonymous_10)","decl":{"start":{"line":134,"column":39},"end":{"line":134,"column":40}},"loc":{"start":{"line":134,"column":46},"end":{"line":134,"column":66}},"line":134},"11":{"name":"(anonymous_11)","decl":{"start":{"line":143,"column":4},"end":{"line":143,"column":5}},"loc":{"start":{"line":143,"column":40},"end":{"line":161,"column":5}},"line":143},"12":{"name":"(anonymous_12)","decl":{"start":{"line":162,"column":4},"end":{"line":162,"column":5}},"loc":{"start":{"line":162,"column":40},"end":{"line":164,"column":5}},"line":162},"13":{"name":"(anonymous_13)","decl":{"start":{"line":163,"column":30},"end":{"line":163,"column":31}},"loc":{"start":{"line":163,"column":35},"end":{"line":163,"column":95}},"line":163},"14":{"name":"(anonymous_14)","decl":{"start":{"line":165,"column":4},"end":{"line":165,"column":5}},"loc":{"start":{"line":165,"column":36},"end":{"line":167,"column":5}},"line":165},"15":{"name":"(anonymous_15)","decl":{"start":{"line":166,"column":52},"end":{"line":166,"column":53}},"loc":{"start":{"line":166,"column":57},"end":{"line":166,"column":73}},"line":166},"16":{"name":"(anonymous_16)","decl":{"start":{"line":168,"column":4},"end":{"line":168,"column":5}},"loc":{"start":{"line":168,"column":51},"end":{"line":173,"column":5}},"line":168},"17":{"name":"(anonymous_17)","decl":{"start":{"line":172,"column":36},"end":{"line":172,"column":37}},"loc":{"start":{"line":172,"column":42},"end":{"line":172,"column":63}},"line":172},"18":{"name":"(anonymous_18)","decl":{"start":{"line":174,"column":4},"end":{"line":174,"column":5}},"loc":{"start":{"line":174,"column":33},"end":{"line":184,"column":5}},"line":174},"19":{"name":"(anonymous_19)","decl":{"start":{"line":175,"column":22},"end":{"line":175,"column":23}},"loc":{"start":{"line":175,"column":27},"end":{"line":183,"column":9}},"line":175},"20":{"name":"(anonymous_20)","decl":{"start":{"line":185,"column":4},"end":{"line":185,"column":5}},"loc":{"start":{"line":185,"column":65},"end":{"line":198,"column":5}},"line":185},"21":{"name":"(anonymous_21)","decl":{"start":{"line":190,"column":50},"end":{"line":190,"column":51}},"loc":{"start":{"line":190,"column":55},"end":{"line":190,"column":100}},"line":190},"22":{"name":"(anonymous_22)","decl":{"start":{"line":199,"column":4},"end":{"line":199,"column":5}},"loc":{"start":{"line":199,"column":55},"end":{"line":211,"column":5}},"line":199},"23":{"name":"(anonymous_23)","decl":{"start":{"line":202,"column":46},"end":{"line":202,"column":47}},"loc":{"start":{"line":202,"column":51},"end":{"line":202,"column":74}},"line":202},"24":{"name":"(anonymous_24)","decl":{"start":{"line":212,"column":4},"end":{"line":212,"column":5}},"loc":{"start":{"line":212,"column":62},"end":{"line":250,"column":5}},"line":212},"25":{"name":"(anonymous_25)","decl":{"start":{"line":251,"column":4},"end":{"line":251,"column":5}},"loc":{"start":{"line":251,"column":26},"end":{"line":255,"column":5}},"line":251},"26":{"name":"(anonymous_26)","decl":{"start":{"line":252,"column":40},"end":{"line":252,"column":41}},"loc":{"start":{"line":252,"column":45},"end":{"line":252,"column":52}},"line":252},"27":{"name":"(anonymous_27)","decl":{"start":{"line":253,"column":39},"end":{"line":253,"column":40}},"loc":{"start":{"line":253,"column":52},"end":{"line":253,"column":70}},"line":253},"28":{"name":"(anonymous_28)","decl":{"start":{"line":256,"column":4},"end":{"line":256,"column":5}},"loc":{"start":{"line":256,"column":40},"end":{"line":306,"column":5}},"line":256},"29":{"name":"(anonymous_29)","decl":{"start":{"line":258,"column":45},"end":{"line":258,"column":46}},"loc":{"start":{"line":258,"column":50},"end":{"line":258,"column":117}},"line":258},"30":{"name":"(anonymous_30)","decl":{"start":{"line":259,"column":54},"end":{"line":259,"column":55}},"loc":{"start":{"line":259,"column":59},"end":{"line":259,"column":71}},"line":259},"31":{"name":"(anonymous_31)","decl":{"start":{"line":259,"column":80},"end":{"line":259,"column":81}},"loc":{"start":{"line":259,"column":93},"end":{"line":259,"column":111}},"line":259},"32":{"name":"(anonymous_32)","decl":{"start":{"line":260,"column":49},"end":{"line":260,"column":50}},"loc":{"start":{"line":260,"column":54},"end":{"line":273,"column":9}},"line":260},"33":{"name":"(anonymous_33)","decl":{"start":{"line":261,"column":67},"end":{"line":261,"column":68}},"loc":{"start":{"line":261,"column":73},"end":{"line":261,"column":91}},"line":261},"34":{"name":"(anonymous_34)","decl":{"start":{"line":261,"column":97},"end":{"line":261,"column":98}},"loc":{"start":{"line":261,"column":103},"end":{"line":261,"column":111}},"line":261},"35":{"name":"(anonymous_35)","decl":{"start":{"line":262,"column":53},"end":{"line":262,"column":54}},"loc":{"start":{"line":262,"column":59},"end":{"line":262,"column":101}},"line":262},"36":{"name":"(anonymous_36)","decl":{"start":{"line":270,"column":51},"end":{"line":270,"column":52}},"loc":{"start":{"line":270,"column":56},"end":{"line":270,"column":80}},"line":270},"37":{"name":"(anonymous_37)","decl":{"start":{"line":282,"column":63},"end":{"line":282,"column":64}},"loc":{"start":{"line":282,"column":68},"end":{"line":282,"column":80}},"line":282},"38":{"name":"(anonymous_38)","decl":{"start":{"line":307,"column":4},"end":{"line":307,"column":5}},"loc":{"start":{"line":307,"column":45},"end":{"line":325,"column":5}},"line":307},"39":{"name":"(anonymous_39)","decl":{"start":{"line":326,"column":4},"end":{"line":326,"column":5}},"loc":{"start":{"line":326,"column":55},"end":{"line":352,"column":5}},"line":326},"40":{"name":"(anonymous_40)","decl":{"start":{"line":329,"column":55},"end":{"line":329,"column":56}},"loc":{"start":{"line":329,"column":68},"end":{"line":329,"column":121}},"line":329},"41":{"name":"(anonymous_41)","decl":{"start":{"line":329,"column":80},"end":{"line":329,"column":81}},"loc":{"start":{"line":329,"column":86},"end":{"line":329,"column":115}},"line":329},"42":{"name":"(anonymous_42)","decl":{"start":{"line":330,"column":61},"end":{"line":330,"column":62}},"loc":{"start":{"line":330,"column":66},"end":{"line":338,"column":9}},"line":330},"43":{"name":"(anonymous_43)","decl":{"start":{"line":353,"column":4},"end":{"line":353,"column":5}},"loc":{"start":{"line":353,"column":51},"end":{"line":381,"column":5}},"line":353},"44":{"name":"(anonymous_44)","decl":{"start":{"line":359,"column":22},"end":{"line":359,"column":23}},"loc":{"start":{"line":359,"column":28},"end":{"line":377,"column":9}},"line":359},"45":{"name":"(anonymous_45)","decl":{"start":{"line":360,"column":40},"end":{"line":360,"column":41}},"loc":{"start":{"line":360,"column":46},"end":{"line":360,"column":77}},"line":360},"46":{"name":"(anonymous_46)","decl":{"start":{"line":382,"column":4},"end":{"line":382,"column":5}},"loc":{"start":{"line":382,"column":41},"end":{"line":416,"column":5}},"line":382},"47":{"name":"(anonymous_47)","decl":{"start":{"line":386,"column":17},"end":{"line":386,"column":18}},"loc":{"start":{"line":386,"column":23},"end":{"line":391,"column":9}},"line":386},"48":{"name":"(anonymous_48)","decl":{"start":{"line":394,"column":17},"end":{"line":394,"column":18}},"loc":{"start":{"line":394,"column":22},"end":{"line":398,"column":9}},"line":394},"49":{"name":"(anonymous_49)","decl":{"start":{"line":399,"column":20},"end":{"line":399,"column":21}},"loc":{"start":{"line":399,"column":25},"end":{"line":403,"column":9}},"line":399},"50":{"name":"(anonymous_50)","decl":{"start":{"line":401,"column":39},"end":{"line":401,"column":40}},"loc":{"start":{"line":401,"column":45},"end":{"line":401,"column":64}},"line":401},"51":{"name":"(anonymous_51)","decl":{"start":{"line":417,"column":4},"end":{"line":417,"column":5}},"loc":{"start":{"line":417,"column":44},"end":{"line":424,"column":5}},"line":417},"52":{"name":"(anonymous_52)","decl":{"start":{"line":419,"column":42},"end":{"line":419,"column":43}},"loc":{"start":{"line":419,"column":47},"end":{"line":419,"column":73}},"line":419},"53":{"name":"(anonymous_53)","decl":{"start":{"line":421,"column":39},"end":{"line":421,"column":40}},"loc":{"start":{"line":421,"column":44},"end":{"line":421,"column":94}},"line":421},"54":{"name":"(anonymous_54)","decl":{"start":{"line":421,"column":60},"end":{"line":421,"column":61}},"loc":{"start":{"line":421,"column":65},"end":{"line":421,"column":93}},"line":421}},"branchMap":{"0":{"loc":{"start":{"line":55,"column":12},"end":{"line":58,"column":13}},"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":58,"column":13}},{"start":{"line":55,"column":12},"end":{"line":58,"column":13}}],"line":55},"1":{"loc":{"start":{"line":62,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":68,"column":9}},{"start":{"line":62,"column":8},"end":{"line":68,"column":9}}],"line":62},"2":{"loc":{"start":{"line":62,"column":12},"end":{"line":64,"column":96}},"type":"binary-expr","locations":[{"start":{"line":62,"column":13},"end":{"line":62,"column":43}},{"start":{"line":63,"column":13},"end":{"line":63,"column":45}},{"start":{"line":64,"column":14},"end":{"line":64,"column":54}},{"start":{"line":64,"column":60},"end":{"line":64,"column":94}}],"line":62},"3":{"loc":{"start":{"line":89,"column":8},"end":{"line":92,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":92,"column":9}},{"start":{"line":89,"column":8},"end":{"line":92,"column":9}}],"line":89},"4":{"loc":{"start":{"line":94,"column":12},"end":{"line":105,"column":13}},"type":"switch","locations":[{"start":{"line":96,"column":16},"end":{"line":96,"column":107}},{"start":{"line":97,"column":16},"end":{"line":97,"column":87}},{"start":{"line":99,"column":16},"end":{"line":99,"column":96}},{"start":{"line":100,"column":16},"end":{"line":100,"column":98}},{"start":{"line":102,"column":16},"end":{"line":102,"column":89}},{"start":{"line":103,"column":16},"end":{"line":103,"column":109}},{"start":{"line":104,"column":16},"end":{"line":104,"column":91}}],"line":94},"5":{"loc":{"start":{"line":109,"column":56},"end":{"line":109,"column":70}},"type":"binary-expr","locations":[{"start":{"line":109,"column":56},"end":{"line":109,"column":65}},{"start":{"line":109,"column":69},"end":{"line":109,"column":70}}],"line":109},"6":{"loc":{"start":{"line":118,"column":8},"end":{"line":130,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":130,"column":9}},{"start":{"line":118,"column":8},"end":{"line":130,"column":9}}],"line":118},"7":{"loc":{"start":{"line":135,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":141,"column":9}},{"start":{"line":135,"column":8},"end":{"line":141,"column":9}}],"line":135},"8":{"loc":{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},"type":"if","locations":[{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},{"start":{"line":157,"column":12},"end":{"line":159,"column":13}}],"line":157},"9":{"loc":{"start":{"line":163,"column":35},"end":{"line":163,"column":95}},"type":"binary-expr","locations":[{"start":{"line":163,"column":36},"end":{"line":163,"column":62}},{"start":{"line":163,"column":68},"end":{"line":163,"column":94}}],"line":163},"10":{"loc":{"start":{"line":186,"column":8},"end":{"line":189,"column":9}},"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":189,"column":9}},{"start":{"line":186,"column":8},"end":{"line":189,"column":9}}],"line":186},"11":{"loc":{"start":{"line":191,"column":8},"end":{"line":197,"column":9}},"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":197,"column":9}},{"start":{"line":191,"column":8},"end":{"line":197,"column":9}}],"line":191},"12":{"loc":{"start":{"line":203,"column":8},"end":{"line":210,"column":9}},"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":210,"column":9}},{"start":{"line":203,"column":8},"end":{"line":210,"column":9}}],"line":203},"13":{"loc":{"start":{"line":217,"column":8},"end":{"line":237,"column":9}},"type":"if","locations":[{"start":{"line":217,"column":8},"end":{"line":237,"column":9}},{"start":{"line":217,"column":8},"end":{"line":237,"column":9}}],"line":217},"14":{"loc":{"start":{"line":218,"column":12},"end":{"line":236,"column":13}},"type":"if","locations":[{"start":{"line":218,"column":12},"end":{"line":236,"column":13}},{"start":{"line":218,"column":12},"end":{"line":236,"column":13}}],"line":218},"15":{"loc":{"start":{"line":218,"column":16},"end":{"line":218,"column":102}},"type":"binary-expr","locations":[{"start":{"line":218,"column":17},"end":{"line":218,"column":55}},{"start":{"line":218,"column":61},"end":{"line":218,"column":101}}],"line":218},"16":{"loc":{"start":{"line":222,"column":17},"end":{"line":236,"column":13}},"type":"if","locations":[{"start":{"line":222,"column":17},"end":{"line":236,"column":13}},{"start":{"line":222,"column":17},"end":{"line":236,"column":13}}],"line":222},"17":{"loc":{"start":{"line":225,"column":16},"end":{"line":235,"column":17}},"type":"if","locations":[{"start":{"line":225,"column":16},"end":{"line":235,"column":17}},{"start":{"line":225,"column":16},"end":{"line":235,"column":17}}],"line":225},"18":{"loc":{"start":{"line":239,"column":8},"end":{"line":249,"column":9}},"type":"if","locations":[{"start":{"line":239,"column":8},"end":{"line":249,"column":9}},{"start":{"line":239,"column":8},"end":{"line":249,"column":9}}],"line":239},"19":{"loc":{"start":{"line":275,"column":8},"end":{"line":278,"column":9}},"type":"if","locations":[{"start":{"line":275,"column":8},"end":{"line":278,"column":9}},{"start":{"line":275,"column":8},"end":{"line":278,"column":9}}],"line":275},"20":{"loc":{"start":{"line":279,"column":8},"end":{"line":295,"column":9}},"type":"if","locations":[{"start":{"line":279,"column":8},"end":{"line":295,"column":9}},{"start":{"line":279,"column":8},"end":{"line":295,"column":9}}],"line":279},"21":{"loc":{"start":{"line":281,"column":12},"end":{"line":294,"column":13}},"type":"if","locations":[{"start":{"line":281,"column":12},"end":{"line":294,"column":13}},{"start":{"line":281,"column":12},"end":{"line":294,"column":13}}],"line":281},"22":{"loc":{"start":{"line":287,"column":16},"end":{"line":293,"column":17}},"type":"if","locations":[{"start":{"line":287,"column":16},"end":{"line":293,"column":17}},{"start":{"line":287,"column":16},"end":{"line":293,"column":17}}],"line":287},"23":{"loc":{"start":{"line":291,"column":21},"end":{"line":293,"column":17}},"type":"if","locations":[{"start":{"line":291,"column":21},"end":{"line":293,"column":17}},{"start":{"line":291,"column":21},"end":{"line":293,"column":17}}],"line":291},"24":{"loc":{"start":{"line":296,"column":8},"end":{"line":305,"column":9}},"type":"if","locations":[{"start":{"line":296,"column":8},"end":{"line":305,"column":9}},{"start":{"line":296,"column":8},"end":{"line":305,"column":9}}],"line":296},"25":{"loc":{"start":{"line":316,"column":8},"end":{"line":324,"column":9}},"type":"if","locations":[{"start":{"line":316,"column":8},"end":{"line":324,"column":9}},{"start":{"line":316,"column":8},"end":{"line":324,"column":9}}],"line":316},"26":{"loc":{"start":{"line":319,"column":13},"end":{"line":324,"column":9}},"type":"if","locations":[{"start":{"line":319,"column":13},"end":{"line":324,"column":9}},{"start":{"line":319,"column":13},"end":{"line":324,"column":9}}],"line":319},"27":{"loc":{"start":{"line":339,"column":8},"end":{"line":341,"column":9}},"type":"if","locations":[{"start":{"line":339,"column":8},"end":{"line":341,"column":9}},{"start":{"line":339,"column":8},"end":{"line":341,"column":9}}],"line":339},"28":{"loc":{"start":{"line":343,"column":8},"end":{"line":351,"column":9}},"type":"if","locations":[{"start":{"line":343,"column":8},"end":{"line":351,"column":9}},{"start":{"line":343,"column":8},"end":{"line":351,"column":9}}],"line":343},"29":{"loc":{"start":{"line":346,"column":13},"end":{"line":351,"column":9}},"type":"if","locations":[{"start":{"line":346,"column":13},"end":{"line":351,"column":9}},{"start":{"line":346,"column":13},"end":{"line":351,"column":9}}],"line":346},"30":{"loc":{"start":{"line":361,"column":12},"end":{"line":376,"column":13}},"type":"if","locations":[{"start":{"line":361,"column":12},"end":{"line":376,"column":13}},{"start":{"line":361,"column":12},"end":{"line":376,"column":13}}],"line":361},"31":{"loc":{"start":{"line":368,"column":37},"end":{"line":368,"column":68}},"type":"binary-expr","locations":[{"start":{"line":368,"column":37},"end":{"line":368,"column":51}},{"start":{"line":368,"column":55},"end":{"line":368,"column":68}}],"line":368},"32":{"loc":{"start":{"line":406,"column":28},"end":{"line":406,"column":107}},"type":"cond-expr","locations":[{"start":{"line":406,"column":62},"end":{"line":406,"column":95}},{"start":{"line":406,"column":98},"end":{"line":406,"column":107}}],"line":406}},"s":{"0":1,"1":1,"2":1,"3":1,"4":8,"5":8,"6":8,"7":8,"8":5,"9":5,"10":5,"11":5,"12":5,"13":5,"14":5,"15":2,"16":2,"17":3,"18":3,"19":3,"20":3,"21":142,"22":142,"23":142,"24":142,"25":142,"26":11,"27":11,"28":180,"29":180,"30":1,"31":179,"32":179,"33":1,"34":9,"35":36,"36":1,"37":15,"38":7,"39":4,"40":0,"41":0,"42":4,"43":4,"44":4,"45":3,"46":3,"47":3,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":0,"56":36,"57":36,"58":36,"59":36,"60":3,"61":3,"62":3,"63":7,"64":7,"65":8,"66":16,"67":5,"68":5,"69":5,"70":5,"71":8,"72":8,"73":11,"74":5,"75":6,"76":7,"77":6,"78":1,"79":5,"80":1,"81":1,"82":1,"83":1,"84":0,"85":0,"86":1,"87":8,"88":8,"89":8,"90":8,"91":8,"92":0,"93":8,"94":8,"95":8,"96":5,"97":5,"98":3,"99":0,"100":0,"101":0,"102":1,"103":3,"104":1,"105":3,"106":1,"107":3,"108":3,"109":4,"110":3,"111":5,"112":5,"113":3,"114":3,"115":8,"116":5,"117":3,"118":6,"119":3,"120":5,"121":3,"122":3,"123":1,"124":2,"125":1,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":2,"135":1,"136":1,"137":15,"138":15,"139":15,"140":8,"141":7,"142":5,"143":2,"144":7,"145":7,"146":15,"147":23,"148":7,"149":11,"150":7,"151":0,"152":7,"153":7,"154":3,"155":4,"156":3,"157":1,"158":1,"159":1,"160":1,"161":1,"162":4,"163":6,"164":4,"165":0,"166":4,"167":1,"168":9,"169":9,"170":1,"171":9,"172":6,"173":6,"174":1,"175":6,"176":9,"177":9,"178":9,"179":9,"180":9,"181":8,"182":9,"183":2,"184":2,"185":9,"186":1},"f":{"0":8,"1":5,"2":5,"3":3,"4":142,"5":2,"6":11,"7":180,"8":4,"9":1,"10":1,"11":36,"12":7,"13":7,"14":8,"15":16,"16":5,"17":5,"18":8,"19":8,"20":11,"21":7,"22":1,"23":1,"24":8,"25":1,"26":3,"27":3,"28":3,"29":4,"30":5,"31":5,"32":3,"33":8,"34":5,"35":6,"36":5,"37":0,"38":15,"39":7,"40":15,"41":23,"42":11,"43":1,"44":4,"45":6,"46":9,"47":1,"48":6,"49":6,"50":1,"51":9,"52":8,"53":2,"54":2},"b":{"0":[2,3],"1":[3,0],"2":[3,3,3,3],"3":[1,179],"4":[1,9,36,1,15,7,4],"5":[0,0],"6":[3,1],"7":[1,0],"8":[3,0],"9":[7,6],"10":[5,6],"11":[1,5],"12":[0,1],"13":[8,0],"14":[0,8],"15":[8,0],"16":[8,0],"17":[5,3],"18":[0,0],"19":[1,2],"20":[1,1],"21":[0,1],"22":[0,0],"23":[0,0],"24":[1,1],"25":[8,7],"26":[5,2],"27":[0,7],"28":[3,4],"29":[3,1],"30":[0,4],"31":[4,0],"32":[6,3]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/IntentHandler.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/IntentHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { MessageHandler } from \"../BasicFDC3Server\";\nimport { AppRegistration, InstanceID, ServerContext } from \"../ServerContext\";\nimport { Directory, DirectoryIntent } from \"../directory/DirectoryInterface\";\nimport { Context } from \"@kite9/fdc3-context\";\nimport { AppIntent, ResolveError, AppIdentifier, } from \"@kite9/fdc3-standard\";\nimport { errorResponse, errorResponseId, successResponse, successResponseId } from \"./support\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\";\n\ntype AddIntentListenerRequest = BrowserTypes.AddIntentListenerRequest\ntype FindIntentRequest = BrowserTypes.FindIntentRequest\ntype FindIntentsByContextRequest = BrowserTypes.FindIntentsByContextRequest\ntype IntentEvent = BrowserTypes.IntentEvent\ntype IntentListenerUnsubscribeRequest = BrowserTypes.IntentListenerUnsubscribeRequest\ntype RaiseIntentRequest = BrowserTypes.RaiseIntentRequest\ntype RaiseIntentForContextRequest = BrowserTypes.RaiseIntentForContextRequest\ntype IntentResultRequest = BrowserTypes.IntentResultRequest\n\ntype ListenerRegistration = {\n    appId: string | undefined,\n    instanceId: string | undefined,\n    intentName: string | undefined,\n    listenerUUID: string\n}\n\ntype IntentRequest = {\n    intent: string,\n    context: Context,\n    requestUuid: string,\n    from: AppIdentifier,\n    type: 'raiseIntentResponse' | 'raiseIntentForContextResponse'\n}\n\n\n/**\n * Re-writes the request to forward it on to the target application\n */\nasync function forwardRequest(arg0: IntentRequest, to: AppIdentifier, sc: ServerContext<AppRegistration>, ih: IntentHandler): Promise<void> {\n    const out: IntentEvent = {\n        type: 'intentEvent',\n        payload: {\n            context: arg0.context,\n            intent: arg0.intent,\n            originatingApp: {\n                appId: arg0.from.appId,\n                instanceId: arg0.from.instanceId\n            },\n            raiseIntentRequestUuid: arg0.requestUuid\n        },\n        meta: {\n            eventUuid: sc.createUUID(),\n            timestamp: new Date()\n        }\n    }\n\n    // register the resolution destination\n    ih.pendingResolutions.set(arg0.requestUuid, arg0.from)\n    await sc.post(out, to.instanceId!!)\n    successResponseId(sc, arg0.requestUuid, arg0.from, {\n        intentResolution: {\n            intent: arg0.intent,\n            source: to\n        }\n    }, arg0.type)\n}\n\n/**\n * A pending intent is one for an app that hasn't registered it's intent listener yet.\n * (Possibly it is being opened)\n * \n * Pending intents wait for that registration and then message the app.\n */\nclass PendingIntent {\n\n    complete: boolean = false\n    r: IntentRequest\n    appId: AppIdentifier\n    sc: ServerContext<AppRegistration>\n    ih: IntentHandler\n\n    constructor(r: IntentRequest, sc: ServerContext<AppRegistration>, ih: IntentHandler, appId: AppIdentifier) {\n        this.r = r\n        this.appId = appId\n        this.sc = sc\n        this.ih = ih\n\n        // handle the timeout\n        setTimeout(() => {\n            if (!this.complete) {\n                errorResponseId(sc, r.requestUuid, r.from, ResolveError.IntentDeliveryFailed, r.type)\n                this.ih.pendingIntents.delete(this)\n            }\n        }, ih.timeoutMs)\n    }\n\n\n    async accept(arg0: ListenerRegistration): Promise<void> {\n        if ((arg0.appId == this.appId.appId) &&\n            (arg0.intentName == this.r.intent) &&\n            ((arg0.instanceId == this.appId.instanceId) || (this.appId.instanceId == undefined))) {\n            this.complete = true\n            this.ih.pendingIntents.delete(this)\n            forwardRequest(this.r, { appId: arg0.appId, instanceId: arg0.instanceId }, this.sc, this.ih)\n        }\n    }\n}\n\nexport class IntentHandler implements MessageHandler {\n\n    private readonly directory: Directory\n    private readonly regs: ListenerRegistration[] = []\n    readonly pendingIntents: Set<PendingIntent> = new Set()\n    readonly pendingResolutions: Map<string, AppIdentifier> = new Map()\n    readonly timeoutMs: number\n\n    constructor(d: Directory, timeoutMs: number) {\n        this.directory = d\n        this.timeoutMs = timeoutMs\n    }\n\n    shutdown(): void {\n    }\n\n    async narrowIntents(raiser: AppIdentifier, appIntents: AppIntent[], context: Context, sc: ServerContext<AppRegistration>): Promise<AppIntent[]> {\n        const out = await sc.narrowIntents(raiser, appIntents, context)\n        return out\n    }\n\n    async accept(msg: any, sc: ServerContext<AppRegistration>, uuid: InstanceID): Promise<void> {\n        const from = sc.getInstanceDetails(uuid)\n\n        if (from == null) {\n            // this handler only deals with connected apps\n            return\n        }\n\n        try {\n\n\n            switch (msg.type as string) {\n                // finding intents\n                case 'findIntentsByContextRequest': return this.findIntentsByContextRequest(msg as FindIntentsByContextRequest, sc, from)\n                case 'findIntentRequest': return this.findIntentRequest(msg as FindIntentRequest, sc, from)\n\n                // listeners\n                case 'addIntentListenerRequest': return this.onAddIntentListener(msg as AddIntentListenerRequest, sc, from)\n                case 'intentListenerUnsubscribeRequest': return this.onUnsubscribe(msg as IntentListenerUnsubscribeRequest, sc, from)\n\n                // raising intents and returning results\n                case 'raiseIntentRequest': return this.raiseIntentRequest(msg as RaiseIntentRequest, sc, from)\n                case 'raiseIntentForContextRequest': return this.raiseIntentForContextRequest(msg as RaiseIntentForContextRequest, sc, from)\n                case 'intentResultRequest': return this.intentResultRequest(msg as IntentResultRequest, sc, from)\n            }\n\n        } catch (e: any) {\n            const responseType = msg.type.replace(new RegExp(\"Request$\"), 'Response')\n            errorResponse(sc, msg, from, e.message ?? e, responseType)\n        }\n    }\n\n    /**\n     * Called when target app handles an intent\n     */\n    intentResultRequest(arg0: IntentResultRequest, sc: ServerContext<AppRegistration>, from: AppIdentifier): void | PromiseLike<void> {\n        const requestId = arg0.payload.raiseIntentRequestUuid\n        const to = this.pendingResolutions.get(requestId)\n        if (to) {\n            // post the result to the app that raised the intent\n            successResponseId(sc, requestId, to!!, {\n                intentResult: arg0.payload.intentResult\n            }, 'raiseIntentResultResponse')\n\n            // respond to the app that handled the intent\n            successResponse(sc, arg0, from, {}, 'intentResultResponse')\n            this.pendingResolutions.delete(requestId)\n        } else {\n            // no-one waiting for this result\n            errorResponse(sc, arg0, from, \"No-one waiting for this result\", 'intentResultResponse')\n        }\n    }\n\n    onUnsubscribe(arg0: IntentListenerUnsubscribeRequest, sc: ServerContext<AppRegistration>, from: AppIdentifier): void {\n        const id = arg0.payload.listenerUUID\n        const fi = this.regs.findIndex((e) => e.listenerUUID == id)\n        if (fi > -1) {\n            this.regs.splice(fi, 1)\n            successResponse(sc, arg0, from, {}, 'intentListenerUnsubscribeResponse')\n        } else {\n            errorResponse(sc, arg0, from, \"Non-Existent Listener\", 'intentListenerUnsubscribeResponse')\n        }\n    }\n\n    onAddIntentListener(arg0: AddIntentListenerRequest, sc: ServerContext<AppRegistration>, from: AppIdentifier): void {\n        const lr = {\n            appId: from.appId,\n            instanceId: from.instanceId,\n            intentName: arg0.payload.intent,\n            listenerUUID: sc.createUUID()\n        } as ListenerRegistration\n\n        this.regs.push(lr)\n        successResponse(sc, arg0, from, {\n            listenerUUID: lr.listenerUUID\n        }, 'addIntentListenerResponse')\n\n        // see if this intent listener is the destination for any pending intents\n        for (let x of this.pendingIntents) {\n            x.accept(lr)\n            if (x.complete) {\n                this.pendingIntents.delete(x)\n            }\n        }\n    }\n\n    hasListener(instanceId: string, intentName: string): boolean {\n        return this.regs.find(r => (r.instanceId == instanceId) && (r.intentName == intentName)) != null\n    }\n\n    async getRunningApps(appId: string, sc: ServerContext<AppRegistration>): Promise<AppIdentifier[]> {\n        return (await sc.getConnectedApps()).filter(a => a.appId == appId)\n    }\n\n    async startWithPendingIntent(arg0: IntentRequest, sc: ServerContext<AppRegistration>, target: AppIdentifier): Promise<void> {\n        // app exists but needs starting\n        const pi = new PendingIntent(arg0, sc, this, target)\n        this.pendingIntents.add(pi)\n        sc.open(target?.appId!!).then(() => { return undefined })\n    }\n\n    createAppIntents(ir: IntentRequest[], target: AppIdentifier[]): AppIntent[] {\n        return ir.map(r => {\n            return {\n                intent: {\n                    name: r.intent,\n                    displayName: r.intent\n                },\n                apps: target\n            }\n        })\n    }\n\n    async raiseIntentRequestToSpecificInstance(arg0: IntentRequest[], sc: ServerContext<AppRegistration>, target: AppIdentifier): Promise<void> {\n        if (!(await sc.isAppConnected(target.instanceId!!))) {\n            // instance doesn't exist\n            return errorResponseId(sc, arg0[0].requestUuid, arg0[0].from, ResolveError.TargetInstanceUnavailable, arg0[0].type)\n        }\n\n        const requestsWithListeners = arg0.filter(r => this.hasListener(target.instanceId!!, r.intent))\n\n        if (requestsWithListeners.length == 0) {\n            this.createPendingIntentIfAllowed(arg0[0], sc, target)\n        } else {\n            // ok, deliver to the current running app.\n            return forwardRequest(requestsWithListeners[0], target, sc, this)\n        }\n    }\n\n    async createPendingIntentIfAllowed(ir: IntentRequest, sc: ServerContext<AppRegistration>, target: AppIdentifier) {\n        // if this app declares that it supports the intent, we'll create a pending intent\n        const matchingIntents: DirectoryIntent[] = this.directory.retrieveIntents(ir.context.type, ir.intent, undefined)\n        const declared = matchingIntents.find(i => i.appId == target.appId)\n\n        if (declared) {\n            // maybe listener hasn't been registered yet - create a pending intent\n            const pi = new PendingIntent(ir, sc, this, target)\n            this.pendingIntents.add(pi)\n        } else {\n            errorResponseId(sc, ir.requestUuid, ir.from, ResolveError.NoAppsFound, ir.type)\n        }\n    }\n\n    async raiseIntentRequestToSpecificAppId(arg0: IntentRequest[], sc: ServerContext<AppRegistration>, target: AppIdentifier): Promise<void> {\n        // dealing with a specific app, which may or may not be open\n        const runningApps = await this.getRunningApps(target.appId, sc)\n\n        const appIntents = this.createAppIntents(arg0, [...runningApps, { appId: target.appId }])\n\n        const narrowedAppIntents = await this.narrowIntents(arg0[0].from, appIntents, arg0[0].context, sc)\n\n        if (narrowedAppIntents.length == 1) {\n            if ((narrowedAppIntents[0].apps.length == 2) && (narrowedAppIntents[0].apps[0].instanceId)) {\n                // single running instance\n                return this.raiseIntentRequestToSpecificInstance(arg0, sc, runningApps[0])\n            } else if (narrowedAppIntents[0].apps.length == 1) {\n                // no running instance, single app\n                const appRecords = this.directory.retrieveAppsById(target.appId)\n                if (appRecords.length >= 1) {\n                    const ir: IntentRequest = {\n                        ...arg0[0],\n                        intent: narrowedAppIntents[0].intent.name\n                    }\n                    return this.startWithPendingIntent(ir, sc, target)\n                } else {\n                    // app doesn't exist\n                    return errorResponseId(sc, arg0[0].requestUuid, arg0[0].from, ResolveError.TargetAppUnavailable, arg0[0].type)\n                }\n            }\n        }\n\n        // need to use the resolver to choose a running app instance\n\n        if (arg0[0].type == 'raiseIntentResponse') {\n            return successResponseId(sc, arg0[0].requestUuid, arg0[0].from, {\n                appIntent: narrowedAppIntents[0]\n            }, arg0[0].type)\n        } else {\n            // raise intent for context\n            return successResponseId(sc, arg0[0].requestUuid, arg0[0].from, {\n                appIntents: narrowedAppIntents\n            }, arg0[0].type)\n        }\n    }\n\n    oneAppOnly(appIntent: AppIntent): boolean {\n        const apps = appIntent.apps.map(a => a.appId)\n        const uniqueApps = apps.filter((v, i, a) => a.indexOf(v) === i).length\n        return (uniqueApps == 1)\n    }\n\n    async raiseIntentToAnyApp(arg0: IntentRequest[], sc: ServerContext<AppRegistration>): Promise<void> {\n        const connectedApps = await sc.getConnectedApps()\n        const matchingIntents = arg0.flatMap(i => this.directory.retrieveIntents(i.context.type, i.intent, undefined))\n        const uniqueIntentNames = matchingIntents.map(i => i.intentName).filter((v, i, a) => a.indexOf(v) === i)\n\n        const appIntents: AppIntent[] = uniqueIntentNames.map(i => {\n            const directoryAppsWithIntent = matchingIntents.filter(mi => mi.intentName == i).map(mi => mi.appId)\n            const runningApps = connectedApps.filter(ca => directoryAppsWithIntent.includes(ca.appId))\n\n            return {\n                intent: {\n                    name: i,\n                    displayName: i\n                },\n                apps: [\n                    ...runningApps,\n                    ...directoryAppsWithIntent.map(d => { return { appId: d } })\n                ]\n            }\n        })\n\n        const narrowedAppIntents = await this.narrowIntents(arg0[0].from, appIntents, arg0[0].context, sc)\n\n        if (narrowedAppIntents.length == 0) {\n            // nothing can resolve the intent, fail\n            return errorResponseId(sc, arg0[0].requestUuid, arg0[0].from, ResolveError.NoAppsFound, arg0[0].type)\n        }\n\n        if (narrowedAppIntents.length == 1) {\n            const theAppIntent = narrowedAppIntents[0]\n            if (this.oneAppOnly(theAppIntent)) {\n                const instanceCount = theAppIntent.apps.filter(a => a.instanceId).length\n                const ir: IntentRequest = {\n                    ...arg0[0],\n                    intent: narrowedAppIntents[0].intent.name\n                }\n                if (instanceCount == 1) {\n                    // app is running\n                    return forwardRequest(ir, theAppIntent.apps[0], sc, this)\n                } else if (instanceCount == 0) {\n                    return this.startWithPendingIntent(ir, sc, theAppIntent.apps[0])\n                }\n            }\n        }\n\n        if (arg0[0].type == 'raiseIntentResponse') {\n            // raise intent\n            return successResponseId(sc, arg0[0].requestUuid, arg0[0].from, {\n                appIntent: narrowedAppIntents[0]\n            }, arg0[0].type)\n        } else {\n            // raise intent for context\n            return successResponseId(sc, arg0[0].requestUuid, arg0[0].from, { appIntents: narrowedAppIntents }, arg0[0].type)\n        }\n\n    }\n\n    async raiseIntentRequest(arg0: RaiseIntentRequest, sc: ServerContext<AppRegistration>, from: AppIdentifier): Promise<void> {\n        const intentRequest: IntentRequest = {\n            context: arg0.payload.context,\n            from,\n            intent: arg0.payload.intent,\n            requestUuid: arg0.meta.requestUuid,\n            type: 'raiseIntentResponse'\n        }\n\n        const target = arg0.payload.app!!\n        if (target?.instanceId) {\n            return this.raiseIntentRequestToSpecificInstance([intentRequest], sc, target)\n        } else if (target?.appId) {\n            return this.raiseIntentRequestToSpecificAppId([intentRequest], sc, target)\n        } else {\n            return this.raiseIntentToAnyApp([intentRequest], sc)\n        }\n    }\n\n    async raiseIntentForContextRequest(arg0: RaiseIntentForContextRequest, sc: ServerContext<AppRegistration>, from: AppIdentifier): Promise<void> {\n        // dealing with a specific instance of an app\n        const mappedIntents = this.directory.retrieveIntents(arg0.payload.context.type, undefined, undefined)\n        const uniqueIntentNames = mappedIntents.filter((v, i, a) => a.findIndex(v2 => v2.intentName == v.intentName) == i)\n        const possibleIntentRequests: IntentRequest[] = uniqueIntentNames.map(i => {\n            return {\n                context: arg0.payload.context,\n                from,\n                intent: i.intentName,\n                requestUuid: arg0.meta.requestUuid,\n                type: 'raiseIntentForContextResponse'\n            }\n        })\n\n        if (possibleIntentRequests.length == 0) {\n            return errorResponseId(sc, arg0.meta.requestUuid, from, ResolveError.NoAppsFound, 'raiseIntentForContextResponse')\n        }\n\n        const target = arg0.payload.app!!\n        if (target?.instanceId) {\n            return this.raiseIntentRequestToSpecificInstance(possibleIntentRequests, sc, target)\n        } else if (target?.appId) {\n            return this.raiseIntentRequestToSpecificAppId(possibleIntentRequests, sc, target)\n        } else {\n            return this.raiseIntentToAnyApp(possibleIntentRequests, sc)\n        }\n    }\n\n    async findIntentsByContextRequest(r: FindIntentsByContextRequest, sc: ServerContext<AppRegistration>, from: AppIdentifier): Promise<void> {\n\n        // TODO: Add result type\n        const { context } = r.payload\n\n        const apps1 = this.directory.retrieveIntents(context?.type, undefined, undefined)\n\n        // fold apps so same intents aren't duplicated\n        const apps2: AppIntent[] = []\n        apps1.forEach(a1 => {\n            const existing = apps2.find(a2 => a2.intent.name == a1.intentName)\n            if (existing) {\n                existing.apps.push({ appId: a1.appId })\n            } else {\n                apps2.push({\n                    intent: {\n                        name: a1.intentName,\n                        displayName: a1.displayName ?? a1.intentName\n                    },\n                    apps: [\n                        {\n                            appId: a1.appId\n                        }\n                    ]\n                })\n            }\n        })\n\n        successResponse(sc, r, from, {\n            appIntents: apps2\n        }, 'findIntentsByContextResponse')\n    }\n\n\n    async findIntentRequest(r: FindIntentRequest, sc: ServerContext<AppRegistration>, from: AppIdentifier): Promise<void> {\n        const { intent, context, resultType } = r.payload\n\n        // listeners for connected applications\n        const apps2 = (await this.retrieveListeners(intent, sc))\n            .map(lr => {\n                return {\n                    appId: lr.appId,\n                    instanceId: lr.instanceId\n                }\n            }) as AppIdentifier[]\n\n        // directory entries\n        const apps1 = this.directory.retrieveApps(context?.type, intent, resultType)\n            .map(a => {\n                return {\n                    appId: a.appId,\n                }\n            })\n            .filter(i => {\n                // remove any directory entries that are already started\n                const running = apps2.find(i2 => i2.appId == i.appId)\n                return !running\n            }) as AppIdentifier[]\n\n        // just need this for the (deprecated) display name\n        const allMatchingIntents = this.directory.retrieveIntents(context?.type, intent, resultType)\n        const displayName = (allMatchingIntents.length > 0) ? allMatchingIntents[0].displayName : undefined\n\n        successResponse(sc, r, from, {\n            appIntent: {\n                intent: {\n                    name: intent,\n                    displayName\n                },\n                apps: [...apps1, ...apps2]\n            }\n        }, 'findIntentResponse')\n    }\n\n    async retrieveListeners(intentName: string | undefined, sc: ServerContext<AppRegistration>): Promise<ListenerRegistration[]> {\n        const activeApps = await sc.getConnectedApps()\n        const matching = this.regs.filter(r => r.intentName == intentName)\n\n        //console.log(`Matched listeners returned ${matching.length}`)\n        const active = matching.filter(r => activeApps.find(a => a.instanceId == r.instanceId))\n        //console.log(`Active listeners returned ${active.length}`)\n\n        return active\n    }\n\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e6b5c88e67061a0768d2941dd2855c3c2acb744c","contentHash":"436f96e4f5058c1c85fb255a9eb988460f1492bff6ad5b8212f8da8a3ef82146"},"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/OpenHandler.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/OpenHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":51}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":55}},"4":{"start":{"line":6,"column":18},"end":{"line":6,"column":38}},"5":{"start":{"line":8,"column":0},"end":{"line":12,"column":32}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":50}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":70}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"9":{"start":{"line":18,"column":12},"end":{"line":18,"column":28}},"10":{"start":{"line":19,"column":16},"end":{"line":19,"column":25}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":31}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":29}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":21}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":23}},"15":{"start":{"line":25,"column":8},"end":{"line":29,"column":22}},"16":{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},"17":{"start":{"line":27,"column":16},"end":{"line":27,"column":31}},"18":{"start":{"line":32,"column":8},"end":{"line":32,"column":89}},"19":{"start":{"line":33,"column":8},"end":{"line":38,"column":27}},"20":{"start":{"line":41,"column":8},"end":{"line":41,"column":123}},"21":{"start":{"line":44,"column":8},"end":{"line":44,"column":35}},"22":{"start":{"line":45,"column":8},"end":{"line":50,"column":9}},"23":{"start":{"line":46,"column":12},"end":{"line":46,"column":52}},"24":{"start":{"line":49,"column":12},"end":{"line":49,"column":27}},"25":{"start":{"line":53,"column":8},"end":{"line":53,"column":35}},"26":{"start":{"line":54,"column":8},"end":{"line":54,"column":25}},"27":{"start":{"line":59,"column":14},"end":{"line":59,"column":23}},"28":{"start":{"line":62,"column":8},"end":{"line":62,"column":27}},"29":{"start":{"line":63,"column":8},"end":{"line":63,"column":35}},"30":{"start":{"line":68,"column":8},"end":{"line":71,"column":9}},"31":{"start":{"line":69,"column":46},"end":{"line":69,"column":98}},"32":{"start":{"line":70,"column":44},"end":{"line":70,"column":86}},"33":{"start":{"line":72,"column":21},"end":{"line":72,"column":48}},"34":{"start":{"line":73,"column":8},"end":{"line":85,"column":9}},"35":{"start":{"line":74,"column":12},"end":{"line":80,"column":13}},"36":{"start":{"line":75,"column":16},"end":{"line":79,"column":17}},"37":{"start":{"line":76,"column":40},"end":{"line":76,"column":72}},"38":{"start":{"line":77,"column":49},"end":{"line":77,"column":90}},"39":{"start":{"line":78,"column":50},"end":{"line":78,"column":92}},"40":{"start":{"line":83,"column":33},"end":{"line":83,"column":85}},"41":{"start":{"line":84,"column":12},"end":{"line":84,"column":86}},"42":{"start":{"line":91,"column":28},"end":{"line":91,"column":50}},"43":{"start":{"line":92,"column":8},"end":{"line":118,"column":9}},"44":{"start":{"line":93,"column":30},"end":{"line":93,"column":52}},"45":{"start":{"line":94,"column":32},"end":{"line":94,"column":56}},"46":{"start":{"line":95,"column":12},"end":{"line":117,"column":13}},"47":{"start":{"line":96,"column":16},"end":{"line":116,"column":17}},"48":{"start":{"line":98,"column":36},"end":{"line":112,"column":21}},"49":{"start":{"line":113,"column":20},"end":{"line":113,"column":42}},"50":{"start":{"line":114,"column":20},"end":{"line":114,"column":46}},"51":{"start":{"line":115,"column":20},"end":{"line":115,"column":67}},"52":{"start":{"line":121,"column":8},"end":{"line":131,"column":10}},"53":{"start":{"line":134,"column":22},"end":{"line":134,"column":38}},"54":{"start":{"line":135,"column":24},"end":{"line":135,"column":68}},"55":{"start":{"line":136,"column":8},"end":{"line":143,"column":9}},"56":{"start":{"line":137,"column":12},"end":{"line":139,"column":41}},"57":{"start":{"line":142,"column":12},"end":{"line":142,"column":134}},"58":{"start":{"line":146,"column":22},"end":{"line":146,"column":44}},"59":{"start":{"line":147,"column":25},"end":{"line":147,"column":52}},"60":{"start":{"line":148,"column":25},"end":{"line":153,"column":10}},"61":{"start":{"line":148,"column":46},"end":{"line":148,"column":62}},"62":{"start":{"line":149,"column":12},"end":{"line":152,"column":14}},"63":{"start":{"line":154,"column":8},"end":{"line":156,"column":36}},"64":{"start":{"line":159,"column":23},"end":{"line":159,"column":39}},"65":{"start":{"line":160,"column":24},"end":{"line":160,"column":44}},"66":{"start":{"line":161,"column":8},"end":{"line":167,"column":9}},"67":{"start":{"line":162,"column":25},"end":{"line":162,"column":52}},"68":{"start":{"line":163,"column":12},"end":{"line":163,"column":92}},"69":{"start":{"line":166,"column":12},"end":{"line":166,"column":84}},"70":{"start":{"line":170,"column":22},"end":{"line":170,"column":26}},"71":{"start":{"line":171,"column":29},"end":{"line":174,"column":9}},"72":{"start":{"line":176,"column":12},"end":{"line":182,"column":21}},"73":{"start":{"line":185,"column":32},"end":{"line":185,"column":126}},"74":{"start":{"line":186,"column":12},"end":{"line":205,"column":39}},"75":{"start":{"line":207,"column":8},"end":{"line":217,"column":9}},"76":{"start":{"line":209,"column":32},"end":{"line":209,"column":80}},"77":{"start":{"line":210,"column":12},"end":{"line":216,"column":13}},"78":{"start":{"line":213,"column":16},"end":{"line":213,"column":57}},"79":{"start":{"line":214,"column":16},"end":{"line":214,"column":70}},"80":{"start":{"line":215,"column":16},"end":{"line":215,"column":50}},"81":{"start":{"line":219,"column":28},"end":{"line":219,"column":55}},"82":{"start":{"line":220,"column":8},"end":{"line":233,"column":9}},"83":{"start":{"line":221,"column":12},"end":{"line":221,"column":84}},"84":{"start":{"line":222,"column":12},"end":{"line":222,"column":39}},"85":{"start":{"line":224,"column":32},"end":{"line":224,"column":54}},"86":{"start":{"line":225,"column":12},"end":{"line":229,"column":13}},"87":{"start":{"line":226,"column":16},"end":{"line":228,"column":17}},"88":{"start":{"line":227,"column":20},"end":{"line":227,"column":55}},"89":{"start":{"line":232,"column":12},"end":{"line":232,"column":26}},"90":{"start":{"line":236,"column":0},"end":{"line":236,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":1},"end":{"line":8,"column":2}},"loc":{"start":{"line":8,"column":21},"end":{"line":12,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":53},"end":{"line":30,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":19},"end":{"line":25,"column":20}},"loc":{"start":{"line":25,"column":25},"end":{"line":29,"column":9}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":16},"end":{"line":39,"column":5}},"line":31},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":14},"end":{"line":42,"column":5}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":25},"end":{"line":51,"column":5}},"line":43},"6":{"name":"(anonymous_6)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":14},"end":{"line":55,"column":5}},"line":52},"7":{"name":"(anonymous_7)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":30},"end":{"line":64,"column":5}},"line":61},"8":{"name":"(anonymous_8)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":15},"end":{"line":66,"column":5}},"line":65},"9":{"name":"(anonymous_9)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":32},"end":{"line":86,"column":5}},"line":67},"10":{"name":"(anonymous_10)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":45},"end":{"line":119,"column":5}},"line":90},"11":{"name":"(anonymous_11)","decl":{"start":{"line":120,"column":4},"end":{"line":120,"column":5}},"loc":{"start":{"line":120,"column":37},"end":{"line":132,"column":5}},"line":120},"12":{"name":"(anonymous_12)","decl":{"start":{"line":133,"column":4},"end":{"line":133,"column":5}},"loc":{"start":{"line":133,"column":35},"end":{"line":144,"column":5}},"line":133},"13":{"name":"(anonymous_13)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":40},"end":{"line":157,"column":5}},"line":145},"14":{"name":"(anonymous_14)","decl":{"start":{"line":148,"column":41},"end":{"line":148,"column":42}},"loc":{"start":{"line":148,"column":46},"end":{"line":148,"column":62}},"line":148},"15":{"name":"(anonymous_15)","decl":{"start":{"line":148,"column":68},"end":{"line":148,"column":69}},"loc":{"start":{"line":148,"column":73},"end":{"line":153,"column":9}},"line":148},"16":{"name":"(anonymous_16)","decl":{"start":{"line":158,"column":4},"end":{"line":158,"column":5}},"loc":{"start":{"line":158,"column":31},"end":{"line":168,"column":5}},"line":158},"17":{"name":"(anonymous_17)","decl":{"start":{"line":169,"column":4},"end":{"line":169,"column":5}},"loc":{"start":{"line":169,"column":41},"end":{"line":234,"column":5}},"line":169},"18":{"name":"returnError","decl":{"start":{"line":175,"column":17},"end":{"line":175,"column":28}},"loc":{"start":{"line":175,"column":31},"end":{"line":183,"column":9}},"line":175},"19":{"name":"returnSuccess","decl":{"start":{"line":184,"column":17},"end":{"line":184,"column":30}},"loc":{"start":{"line":184,"column":44},"end":{"line":206,"column":9}},"line":184}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":3},"end":{"line":12,"column":30}},"type":"binary-expr","locations":[{"start":{"line":12,"column":3},"end":{"line":12,"column":11}},{"start":{"line":12,"column":16},"end":{"line":12,"column":29}}],"line":12},"1":{"loc":{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},"type":"if","locations":[{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},{"start":{"line":26,"column":12},"end":{"line":28,"column":13}}],"line":26},"2":{"loc":{"start":{"line":45,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":50,"column":9}},{"start":{"line":45,"column":8},"end":{"line":50,"column":9}}],"line":45},"3":{"loc":{"start":{"line":68,"column":8},"end":{"line":71,"column":9}},"type":"switch","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":98}},{"start":{"line":70,"column":12},"end":{"line":70,"column":86}}],"line":68},"4":{"loc":{"start":{"line":74,"column":12},"end":{"line":80,"column":13}},"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":80,"column":13}},{"start":{"line":74,"column":12},"end":{"line":80,"column":13}}],"line":74},"5":{"loc":{"start":{"line":75,"column":16},"end":{"line":79,"column":17}},"type":"switch","locations":[{"start":{"line":76,"column":20},"end":{"line":76,"column":72}},{"start":{"line":77,"column":20},"end":{"line":77,"column":90}},{"start":{"line":78,"column":20},"end":{"line":78,"column":92}}],"line":75},"6":{"loc":{"start":{"line":84,"column":56},"end":{"line":84,"column":70}},"type":"binary-expr","locations":[{"start":{"line":84,"column":56},"end":{"line":84,"column":65}},{"start":{"line":84,"column":69},"end":{"line":84,"column":70}}],"line":84},"7":{"loc":{"start":{"line":92,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":118,"column":9}},{"start":{"line":92,"column":8},"end":{"line":118,"column":9}}],"line":92},"8":{"loc":{"start":{"line":95,"column":12},"end":{"line":117,"column":13}},"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":117,"column":13}},{"start":{"line":95,"column":12},"end":{"line":117,"column":13}}],"line":95},"9":{"loc":{"start":{"line":95,"column":16},"end":{"line":95,"column":90}},"type":"binary-expr","locations":[{"start":{"line":95,"column":17},"end":{"line":95,"column":36}},{"start":{"line":95,"column":42},"end":{"line":95,"column":89}}],"line":95},"10":{"loc":{"start":{"line":96,"column":16},"end":{"line":116,"column":17}},"type":"if","locations":[{"start":{"line":96,"column":16},"end":{"line":116,"column":17}},{"start":{"line":96,"column":16},"end":{"line":116,"column":17}}],"line":96},"11":{"loc":{"start":{"line":96,"column":20},"end":{"line":96,"column":91}},"type":"binary-expr","locations":[{"start":{"line":96,"column":21},"end":{"line":96,"column":60}},{"start":{"line":96,"column":66},"end":{"line":96,"column":90}}],"line":96},"12":{"loc":{"start":{"line":136,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":143,"column":9}},{"start":{"line":136,"column":8},"end":{"line":143,"column":9}}],"line":136},"13":{"loc":{"start":{"line":207,"column":8},"end":{"line":217,"column":9}},"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":217,"column":9}},{"start":{"line":207,"column":8},"end":{"line":217,"column":9}}],"line":207},"14":{"loc":{"start":{"line":210,"column":12},"end":{"line":216,"column":13}},"type":"if","locations":[{"start":{"line":210,"column":12},"end":{"line":216,"column":13}},{"start":{"line":210,"column":12},"end":{"line":216,"column":13}}],"line":210},"15":{"loc":{"start":{"line":220,"column":8},"end":{"line":233,"column":9}},"type":"if","locations":[{"start":{"line":220,"column":8},"end":{"line":233,"column":9}},{"start":{"line":220,"column":8},"end":{"line":233,"column":9}}],"line":220},"16":{"loc":{"start":{"line":225,"column":12},"end":{"line":229,"column":13}},"type":"if","locations":[{"start":{"line":225,"column":12},"end":{"line":229,"column":13}},{"start":{"line":225,"column":12},"end":{"line":229,"column":13}}],"line":225},"17":{"loc":{"start":{"line":226,"column":16},"end":{"line":228,"column":17}},"type":"if","locations":[{"start":{"line":226,"column":16},"end":{"line":228,"column":17}},{"start":{"line":226,"column":16},"end":{"line":228,"column":17}}],"line":226}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":4,"10":4,"11":4,"12":4,"13":4,"14":4,"15":4,"16":4,"17":1,"18":3,"19":3,"20":1,"21":4,"22":4,"23":2,"24":2,"25":3,"26":3,"27":142,"28":142,"29":142,"30":180,"31":16,"32":13,"33":151,"34":151,"35":151,"36":151,"37":5,"38":2,"39":2,"40":0,"41":0,"42":16,"43":16,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":13,"53":2,"54":2,"55":2,"56":1,"57":1,"58":2,"59":2,"60":2,"61":4,"62":2,"63":2,"64":5,"65":5,"66":5,"67":5,"68":4,"69":1,"70":13,"71":13,"72":1,"73":12,"74":12,"75":13,"76":2,"77":2,"78":1,"79":1,"80":1,"81":12,"82":12,"83":11,"84":11,"85":11,"86":11,"87":4,"88":4,"89":1,"90":1},"f":{"0":1,"1":4,"2":4,"3":3,"4":1,"5":4,"6":3,"7":142,"8":2,"9":180,"10":16,"11":13,"12":2,"13":2,"14":4,"15":2,"16":5,"17":13,"18":1,"19":12},"b":{"0":[1,1],"1":[1,3],"2":[2,2],"3":[16,13],"4":[151,0],"5":[5,2,2],"6":[0,0],"7":[1,15],"8":[1,0],"9":[1,1],"10":[1,0],"11":[1,0],"12":[1,1],"13":[2,11],"14":[1,1],"15":[11,1],"16":[4,7],"17":[4,0]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/OpenHandler.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/OpenHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { MessageHandler } from \"../BasicFDC3Server\";\nimport { AppRegistration, InstanceID, ServerContext, State } from \"../ServerContext\";\nimport { Directory, DirectoryApp } from \"../directory/DirectoryInterface\";\nimport { ContextElement } from \"@kite9/fdc3-context\";\nimport {\n    OpenError, ResolveError,\n    AppIdentifier, AppMetadata,\n} from \"@kite9/fdc3-standard\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\";\nimport { errorResponse, successResponse } from './support'\n\n\ntype BroadcastEvent = BrowserTypes.BroadcastEvent\ntype AddContextListenerRequest = BrowserTypes.AddContextListenerRequest\ntype FindInstancesRequest = BrowserTypes.FindInstancesRequest\ntype GetAppMetadataRequest = BrowserTypes.GetAppMetadataRequest\ntype OpenRequest = BrowserTypes.OpenRequest\ntype WebConnectionProtocol4ValidateAppIdentity = BrowserTypes.WebConnectionProtocol4ValidateAppIdentity\ntype WebConnectionProtocol5ValidateAppIdentityFailedResponse = BrowserTypes.WebConnectionProtocol5ValidateAppIdentityFailedResponse\ntype WebConnectionProtocol5ValidateAppIdentitySuccessResponse = BrowserTypes.WebConnectionProtocol5ValidateAppIdentitySuccessResponse\n\nenum AppState { Opening, DeliveringContext, Done }\n\nclass PendingApp {\n\n    private readonly sc: ServerContext<AppRegistration>\n    private readonly msg: OpenRequest\n    readonly context: ContextElement | undefined\n    readonly source: AppMetadata\n    state: AppState = AppState.Opening\n    private openedApp: AppIdentifier | undefined = undefined\n\n    constructor(sc: ServerContext<AppRegistration>, msg: OpenRequest, context: ContextElement | undefined, source: AppIdentifier, timeoutMs: number) {\n        this.context = context\n        this.source = source\n        this.sc = sc\n        this.msg = msg\n\n        setTimeout(() => {\n            if (this.state != AppState.Done) {\n                this.onError()\n            }\n        }, timeoutMs)\n    }\n\n    private onSuccess() {\n        this.sc.setAppState(this.openedApp?.instanceId!!, State.Connected)\n        successResponse(this.sc, this.msg, this.source, {\n            appIdentifier: {\n                appId: this.openedApp!!.appId,\n                instanceId: this.openedApp!!.instanceId\n            }\n        }, 'openResponse')\n    }\n\n    private onError() {\n        errorResponse(this.sc, this.msg, this.source, OpenError.AppTimeout, 'openResponse')\n    }\n\n    setOpened(openedApp: AppIdentifier) {\n        this.openedApp = openedApp\n        if (this.context) {\n            this.state = AppState.DeliveringContext\n        } else {\n            this.setDone()\n        }\n    }\n\n    setDone() {\n        this.state = AppState.Done\n        this.onSuccess()\n    }\n}\n\nexport class OpenHandler implements MessageHandler {\n\n    private readonly directory: Directory\n    readonly pending: Map<InstanceID, PendingApp> = new Map()\n    readonly timeoutMs: number\n\n    constructor(d: Directory, timeoutMs: number) {\n        this.directory = d\n        this.timeoutMs = timeoutMs\n    }\n\n    shutdown(): void {\n    }\n\n    async accept(msg: any, sc: ServerContext<AppRegistration>, uuid: InstanceID): Promise<void> {\n        switch (msg.type as string) {\n            case 'addContextListenerRequest': return this.handleAddContextListener(msg as AddContextListenerRequest, sc, uuid)\n            case 'WCP4ValidateAppIdentity': return this.handleValidate(msg as WebConnectionProtocol4ValidateAppIdentity, sc, uuid)\n        }\n\n        const from = sc.getInstanceDetails(uuid)\n        try {\n            if (from) {\n                switch (msg.type as string) {\n                    case 'openRequest': return this.open(msg as OpenRequest, sc, from)\n                    case 'findInstancesRequest': return this.findInstances(msg as FindInstancesRequest, sc, from)\n                    case 'getAppMetadataRequest': return this.getAppMetadata(msg as GetAppMetadataRequest, sc, from)\n                }\n            }\n        } catch (e: any) {\n            const responseType = msg.type.replace(new RegExp(\"Request$\"), 'Response')\n            errorResponse(sc, msg, from!!, e.message ?? e, responseType)\n        }\n\n    }\n\n    /**\n     * This deals with sending pending context to listeners of newly-opened apps.\n     */\n    handleAddContextListener(arg0: AddContextListenerRequest, sc: ServerContext<AppRegistration>, from: InstanceID): void {\n        const pendingOpen = this.pending.get(from)\n\n        if (pendingOpen) {\n            const channelId = arg0.payload.channelId!!\n            const contextType = arg0.payload.contextType\n\n            if ((pendingOpen.context) && (pendingOpen.state == AppState.DeliveringContext)) {\n                if ((contextType == pendingOpen.context.type) || (contextType == undefined)) {\n                    // ok, we can deliver to this listener\n\n                    const message: BroadcastEvent = {\n                        meta: {\n                            eventUuid: sc.createUUID(),\n                            timestamp: new Date()\n                        },\n                        type: \"broadcastEvent\",\n                        payload: {\n                            channelId,\n                            context: pendingOpen.context,\n                            originatingApp: {\n                                appId: pendingOpen.source.appId,\n                                instanceId: pendingOpen.source.instanceId\n                            }\n                        }\n                    }\n\n                    pendingOpen.setDone()\n                    this.pending.delete(from)\n                    sc.post(message, arg0.meta.source?.instanceId!!)\n                }\n            }\n        }\n    }\n\n    filterPublicDetails(appD: DirectoryApp, appID: AppIdentifier): AppMetadata {\n        return {\n            appId: appD.appId,\n            name: appD.name,\n            version: appD.version,\n            title: appD.title,\n            tooltip: appD.tooltip,\n            description: appD.description,\n            icons: appD.icons,\n            screenshots: appD.screenshots,\n            instanceId: appID.instanceId\n        }\n    }\n\n    getAppMetadata(arg0: GetAppMetadataRequest, sc: ServerContext<AppRegistration>, from: AppIdentifier): void {\n        const appID = arg0.payload.app\n        const details = this.directory.retrieveAppsById(appID.appId)\n        if (details.length > 0) {\n            successResponse(sc, arg0, from, {\n                appMetadata: this.filterPublicDetails(details[0], appID)\n            }, 'getAppMetadataResponse')\n        } else {\n            errorResponse(sc, arg0, from, ResolveError.TargetAppUnavailable, 'getAppMetadataResponse')\n        }\n    }\n\n\n    async findInstances(arg0: FindInstancesRequest, sc: ServerContext<AppRegistration>, from: AppIdentifier): Promise<void> {\n        const appId = arg0.payload.app.appId\n        const openApps = await sc.getConnectedApps()\n        const matching = openApps.filter(a => a.appId == appId).map(a => {\n            return {\n                appId: a.appId,\n                instanceId: a.instanceId\n            }\n        })\n        successResponse(sc, arg0, from, {\n            appIdentifiers: matching\n        }, 'findInstancesResponse')\n    }\n\n    async open(arg0: OpenRequest, sc: ServerContext<AppRegistration>, from: AppIdentifier): Promise<void> {\n\n        const source = arg0.payload.app\n        const context = arg0.payload.context\n\n        try {\n            const uuid = await sc.open(source.appId)\n            this.pending.set(uuid, new PendingApp(sc, arg0, context, from, this.timeoutMs))\n        } catch (e: any) {\n            errorResponse(sc, arg0, from, e.message, 'openResponse')\n        }\n    }\n\n    async handleValidate(arg0: WebConnectionProtocol4ValidateAppIdentity, sc: ServerContext<AppRegistration>, from: InstanceID): Promise<void> {\n        const _this = this\n\n        const responseMeta = {\n            connectionAttemptUuid: arg0.meta.connectionAttemptUuid,\n            timestamp: new Date()\n        }\n\n        function returnError() {\n            sc.post({\n                meta: responseMeta,\n                type: 'WCP5ValidateAppIdentityFailedResponse',\n                payload: {\n                    message: 'App Instance not found'\n                }\n            } as WebConnectionProtocol5ValidateAppIdentityFailedResponse, from)\n        }\n\n        function returnSuccess(appIdentity: AppIdentifier) {\n            const aopMetadata = _this.filterPublicDetails(_this.directory.retrieveAppsById(appIdentity.appId)[0], appIdentity)\n            sc.post({\n                meta: responseMeta,\n                type: 'WCP5ValidateAppIdentityResponse',\n                payload: {\n                    appId: appIdentity.appId,\n                    instanceId: appIdentity.instanceId,\n                    instanceUuid: from,\n                    implementationMetadata: {\n                        provider: sc.provider(),\n                        providerVersion: sc.providerVersion(),\n                        fdc3Version: sc.fdc3Version(),\n                        optionalFeatures: {\n                            DesktopAgentBridging: false,\n                            OriginatingAppMetadata: true,\n                            UserChannelMembershipAPIs: true\n                        },\n                        appMetadata: aopMetadata\n                    }\n                }\n            } as WebConnectionProtocol5ValidateAppIdentitySuccessResponse, appIdentity.instanceId!!)\n        }\n\n        if (arg0.payload.instanceUuid) {\n            // existing app reconnecting\n            const appIdentity = sc.getInstanceDetails(arg0.payload.instanceUuid)\n\n            if (appIdentity) {\n                // in this case, the app is reconnecting, so let's just re-assign the \n                // identity\n                sc.setInstanceDetails(from, appIdentity)\n                sc.setAppState(from, State.Connected)\n                return returnSuccess(appIdentity)\n            }\n        }\n\n        // we need to assign an identity to this app\n        const appIdentity = sc.getInstanceDetails(from)\n        if (appIdentity) {\n            sc.setAppState(appIdentity.instanceId, State.Connected)\n            returnSuccess(appIdentity)\n\n            // make sure if the opener is listening for this app to open gets informed\n            const pendingOpen = this.pending.get(from)\n            if (pendingOpen) {\n                if (pendingOpen.state == AppState.Opening) {\n                    pendingOpen.setOpened(appIdentity)\n                }\n            }\n        } else {\n            returnError()\n        }\n\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"efb1e1eb560ca983bcae26e34759b2866517822b","contentHash":"44ff560f72fb594f4f467dd08fa70f32c616071240a51e5f6bd21e76e176eb68"},"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/HeartbeatHandler.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/HeartbeatHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":51}},"3":{"start":{"line":6,"column":4},"end":{"line":20,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":25}},"5":{"start":{"line":10,"column":8},"end":{"line":19,"column":9}},"6":{"start":{"line":12,"column":16},"end":{"line":12,"column":33}},"7":{"start":{"line":14,"column":16},"end":{"line":14,"column":35}},"8":{"start":{"line":16,"column":16},"end":{"line":16,"column":40}},"9":{"start":{"line":18,"column":16},"end":{"line":18,"column":36}},"10":{"start":{"line":26,"column":15},"end":{"line":26,"column":17}},"11":{"start":{"line":27,"column":21},"end":{"line":27,"column":30}},"12":{"start":{"line":30,"column":8},"end":{"line":66,"column":25}},"13":{"start":{"line":31,"column":12},"end":{"line":31,"column":102}},"14":{"start":{"line":32,"column":12},"end":{"line":65,"column":15}},"15":{"start":{"line":33,"column":29},"end":{"line":33,"column":50}},"16":{"start":{"line":34,"column":16},"end":{"line":64,"column":19}},"17":{"start":{"line":35,"column":35},"end":{"line":35,"column":135}},"18":{"start":{"line":37,"column":32},"end":{"line":37,"column":52}},"19":{"start":{"line":38,"column":20},"end":{"line":38,"column":48}},"20":{"start":{"line":40,"column":42},"end":{"line":40,"column":81}},"21":{"start":{"line":41,"column":41},"end":{"line":41,"column":50}},"22":{"start":{"line":42,"column":20},"end":{"line":63,"column":21}},"23":{"start":{"line":43,"column":55},"end":{"line":43,"column":74}},"24":{"start":{"line":44,"column":24},"end":{"line":58,"column":25}},"25":{"start":{"line":45,"column":28},"end":{"line":45,"column":140}},"26":{"start":{"line":46,"column":28},"end":{"line":46,"column":92}},"27":{"start":{"line":48,"column":29},"end":{"line":58,"column":25}},"28":{"start":{"line":49,"column":28},"end":{"line":49,"column":148}},"29":{"start":{"line":50,"column":28},"end":{"line":50,"column":96}},"30":{"start":{"line":52,"column":29},"end":{"line":58,"column":25}},"31":{"start":{"line":53,"column":28},"end":{"line":53,"column":144}},"32":{"start":{"line":54,"column":28},"end":{"line":54,"column":93}},"33":{"start":{"line":62,"column":24},"end":{"line":62,"column":69}},"34":{"start":{"line":69,"column":20},"end":{"line":69,"column":40}},"35":{"start":{"line":70,"column":8},"end":{"line":74,"column":48}},"36":{"start":{"line":71,"column":12},"end":{"line":73,"column":14}},"37":{"start":{"line":72,"column":97},"end":{"line":72,"column":124}},"38":{"start":{"line":72,"column":143},"end":{"line":72,"column":149}},"39":{"start":{"line":74,"column":23},"end":{"line":74,"column":46}},"40":{"start":{"line":77,"column":8},"end":{"line":77,"column":42}},"41":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"42":{"start":{"line":81,"column":12},"end":{"line":81,"column":35}},"43":{"start":{"line":83,"column":8},"end":{"line":88,"column":9}},"44":{"start":{"line":84,"column":24},"end":{"line":84,"column":51}},"45":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"46":{"start":{"line":86,"column":16},"end":{"line":86,"column":78}},"47":{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},"48":{"start":{"line":90,"column":24},"end":{"line":90,"column":51}},"49":{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},"50":{"start":{"line":92,"column":16},"end":{"line":92,"column":71}},"51":{"start":{"line":97,"column":8},"end":{"line":106,"column":27}},"52":{"start":{"line":109,"column":0},"end":{"line":109,"column":44}}},"fnMap":{"0":{"name":"convertToText","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":22}},"loc":{"start":{"line":5,"column":26},"end":{"line":21,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":82},"end":{"line":67,"column":5}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":41},"end":{"line":30,"column":42}},"loc":{"start":{"line":30,"column":47},"end":{"line":66,"column":9}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":34},"end":{"line":32,"column":35}},"loc":{"start":{"line":32,"column":48},"end":{"line":65,"column":13}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":28},"end":{"line":35,"column":29}},"loc":{"start":{"line":35,"column":35},"end":{"line":35,"column":135}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":36,"column":29},"end":{"line":36,"column":30}},"loc":{"start":{"line":36,"column":36},"end":{"line":64,"column":17}},"line":36},"6":{"name":"(anonymous_6)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":21},"end":{"line":75,"column":5}},"line":68},"7":{"name":"(anonymous_7)","decl":{"start":{"line":70,"column":51},"end":{"line":70,"column":52}},"loc":{"start":{"line":70,"column":56},"end":{"line":74,"column":9}},"line":70},"8":{"name":"(anonymous_8)","decl":{"start":{"line":72,"column":91},"end":{"line":72,"column":92}},"loc":{"start":{"line":72,"column":97},"end":{"line":72,"column":124}},"line":72},"9":{"name":"(anonymous_9)","decl":{"start":{"line":72,"column":133},"end":{"line":72,"column":134}},"loc":{"start":{"line":72,"column":143},"end":{"line":72,"column":149}},"line":72},"10":{"name":"(anonymous_10)","decl":{"start":{"line":74,"column":18},"end":{"line":74,"column":19}},"loc":{"start":{"line":74,"column":23},"end":{"line":74,"column":46}},"line":74},"11":{"name":"(anonymous_11)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":15},"end":{"line":78,"column":5}},"line":76},"12":{"name":"(anonymous_12)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":26},"end":{"line":95,"column":5}},"line":79},"13":{"name":"(anonymous_13)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":33},"end":{"line":107,"column":5}},"line":96}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":20,"column":5}},{"start":{"line":6,"column":4},"end":{"line":20,"column":5}}],"line":6},"1":{"loc":{"start":{"line":10,"column":8},"end":{"line":19,"column":9}},"type":"switch","locations":[{"start":{"line":11,"column":12},"end":{"line":12,"column":33}},{"start":{"line":13,"column":12},"end":{"line":14,"column":35}},{"start":{"line":15,"column":12},"end":{"line":16,"column":40}},{"start":{"line":17,"column":12},"end":{"line":18,"column":36}}],"line":10},"2":{"loc":{"start":{"line":29,"column":16},"end":{"line":29,"column":35}},"type":"default-arg","locations":[{"start":{"line":29,"column":31},"end":{"line":29,"column":35}}],"line":29},"3":{"loc":{"start":{"line":29,"column":37},"end":{"line":29,"column":61}},"type":"default-arg","locations":[{"start":{"line":29,"column":57},"end":{"line":29,"column":61}}],"line":29},"4":{"loc":{"start":{"line":29,"column":63},"end":{"line":29,"column":80}},"type":"default-arg","locations":[{"start":{"line":29,"column":75},"end":{"line":29,"column":80}}],"line":29},"5":{"loc":{"start":{"line":35,"column":35},"end":{"line":35,"column":135}},"type":"binary-expr","locations":[{"start":{"line":35,"column":36},"end":{"line":35,"column":80}},{"start":{"line":35,"column":86},"end":{"line":35,"column":134}}],"line":35},"6":{"loc":{"start":{"line":42,"column":20},"end":{"line":63,"column":21}},"type":"if","locations":[{"start":{"line":42,"column":20},"end":{"line":63,"column":21}},{"start":{"line":42,"column":20},"end":{"line":63,"column":21}}],"line":42},"7":{"loc":{"start":{"line":44,"column":24},"end":{"line":58,"column":25}},"type":"if","locations":[{"start":{"line":44,"column":24},"end":{"line":58,"column":25}},{"start":{"line":44,"column":24},"end":{"line":58,"column":25}}],"line":44},"8":{"loc":{"start":{"line":44,"column":28},"end":{"line":44,"column":125}},"type":"binary-expr","locations":[{"start":{"line":44,"column":29},"end":{"line":44,"column":71}},{"start":{"line":44,"column":77},"end":{"line":44,"column":124}}],"line":44},"9":{"loc":{"start":{"line":48,"column":29},"end":{"line":58,"column":25}},"type":"if","locations":[{"start":{"line":48,"column":29},"end":{"line":58,"column":25}},{"start":{"line":48,"column":29},"end":{"line":58,"column":25}}],"line":48},"10":{"loc":{"start":{"line":48,"column":33},"end":{"line":48,"column":130}},"type":"binary-expr","locations":[{"start":{"line":48,"column":34},"end":{"line":48,"column":76}},{"start":{"line":48,"column":82},"end":{"line":48,"column":129}}],"line":48},"11":{"loc":{"start":{"line":52,"column":29},"end":{"line":58,"column":25}},"type":"if","locations":[{"start":{"line":52,"column":29},"end":{"line":58,"column":25}},{"start":{"line":52,"column":29},"end":{"line":58,"column":25}}],"line":52},"12":{"loc":{"start":{"line":52,"column":33},"end":{"line":52,"column":126}},"type":"binary-expr","locations":[{"start":{"line":52,"column":34},"end":{"line":52,"column":68}},{"start":{"line":52,"column":74},"end":{"line":52,"column":125}}],"line":52},"13":{"loc":{"start":{"line":72,"column":143},"end":{"line":72,"column":149}},"type":"binary-expr","locations":[{"start":{"line":72,"column":143},"end":{"line":72,"column":144}},{"start":{"line":72,"column":148},"end":{"line":72,"column":149}}],"line":72},"14":{"loc":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},{"start":{"line":80,"column":8},"end":{"line":82,"column":9}}],"line":80},"15":{"loc":{"start":{"line":83,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":88,"column":9}},{"start":{"line":83,"column":8},"end":{"line":88,"column":9}}],"line":83},"16":{"loc":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},{"start":{"line":85,"column":12},"end":{"line":87,"column":13}}],"line":85},"17":{"loc":{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},{"start":{"line":89,"column":8},"end":{"line":94,"column":9}}],"line":89},"18":{"loc":{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},{"start":{"line":91,"column":12},"end":{"line":93,"column":13}}],"line":91}},"s":{"0":1,"1":1,"2":1,"3":28,"4":0,"5":28,"6":0,"7":19,"8":5,"9":4,"10":2,"11":2,"12":2,"13":28,"14":28,"15":28,"16":28,"17":28,"18":25,"19":25,"20":25,"21":25,"22":25,"23":23,"24":23,"25":0,"26":0,"27":23,"28":1,"29":1,"30":22,"31":1,"32":1,"33":2,"34":30,"35":30,"36":28,"37":28,"38":0,"39":28,"40":2,"41":7,"42":2,"43":7,"44":5,"45":5,"46":5,"47":7,"48":0,"49":0,"50":0,"51":25,"52":1},"f":{"0":28,"1":2,"2":28,"3":28,"4":28,"5":25,"6":30,"7":28,"8":28,"9":0,"10":28,"11":2,"12":7,"13":25},"b":{"0":[0,28],"1":[0,19,5,4],"2":[0],"3":[0],"4":[0],"5":[28,8],"6":[23,2],"7":[0,23],"8":[23,17],"9":[1,22],"10":[23,6],"11":[1,21],"12":[22,1],"13":[0,0],"14":[2,5],"15":[5,2],"16":[5,0],"17":[0,7],"18":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/HeartbeatHandler.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/handlers/HeartbeatHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { AppIdentifier } from \"@kite9/fdc3-standard\";\nimport { MessageHandler } from \"../BasicFDC3Server\";\nimport { AppRegistration, InstanceID, ServerContext, State } from \"../ServerContext\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\";\n\ntype HeartbeatDetails = {\n    instanceId: string,\n    time: number,\n    state: string\n}\n\nfunction convertToText(s?: State): string {\n    if (s == undefined) {\n        return \"Unknown\"\n    } else {\n        switch (s) {\n            case State.Pending:\n                return \"Pending\"\n            case State.Connected:\n                return \"Connected\"\n            case State.NotResponding:\n                return \"Not Responding\"\n            case State.Terminated:\n                return \"Terminated\"\n        }\n    }\n}\n\n/*\n * Handles heartbeat pings and responses\n */\nexport class HeartbeatHandler implements MessageHandler {\n\n    private readonly contexts: ServerContext<AppRegistration>[] = []\n    private readonly lastHeartbeats: Map<InstanceID, number> = new Map()\n    private readonly timerFunction: NodeJS.Timeout\n\n    constructor(pingInterval: number = 1000, disconnectedAfter: number = 5000, deadAfter: number = 20000) {\n\n        this.timerFunction = setInterval(() => {\n            console.log(`Contexts: ${this.contexts.length} Last Heartbeats: `, this.heartbeatTimes())\n\n            this.contexts.forEach(async (sc) => {\n                const apps = await sc.getAllApps()\n                apps\n                    .filter(app => (app.state == State.Connected) || (app.state == State.NotResponding))\n                    .forEach(app => {\n                        const now = new Date().getTime()\n                        this.sendHeartbeat(sc, app)\n\n                        // check when the last heartbeat happened\n                        const lastHeartbeat = this.lastHeartbeats.get(app.instanceId!!)\n                        const currentState = app.state\n\n                        if (lastHeartbeat != undefined) {\n                            const timeSinceLastHeartbeat = now - lastHeartbeat\n\n                            if ((timeSinceLastHeartbeat < disconnectedAfter) && (currentState != State.Connected)) {\n                                console.error(`Heartbeat from ${app.instanceId} for ${timeSinceLastHeartbeat}ms. App is considered connected.`)\n                                sc.setAppState(app.instanceId!!, State.Connected)\n                            } else if ((timeSinceLastHeartbeat > disconnectedAfter) && (currentState == State.Connected)) {\n                                console.error(`No heartbeat from ${app.instanceId} for ${timeSinceLastHeartbeat}ms. App is considered not responding.`)\n                                sc.setAppState(app.instanceId!!, State.NotResponding)\n                            } else if ((timeSinceLastHeartbeat > deadAfter) && (currentState == State.NotResponding)) {\n                                console.error(`No heartbeat from ${app.instanceId} for ${timeSinceLastHeartbeat}ms. App is considered terminated.`)\n                                sc.setAppState(app.instanceId!!, State.Terminated)\n                            } else {\n                                // no action\n                            }\n\n                        } else {\n                            // start the clock\n                            this.lastHeartbeats.set(app.instanceId!!, now)\n                        }\n                    })\n            })\n        }, pingInterval)\n    }\n\n    heartbeatTimes(): HeartbeatDetails[] {\n        const now = new Date().getTime()\n        return Array.from(this.lastHeartbeats).map(e => {\n            return {\n                instanceId: e[0], time: now - e[1], state: convertToText(this.contexts.map(sc => sc.getInstanceDetails(e[0])).reduce((a, b) => a || b)?.state)\n            } as HeartbeatDetails\n        }).filter(e => e.state != \"Terminated\")\n    }\n\n    shutdown(): void {\n        clearInterval(this.timerFunction)\n    }\n\n    accept(msg: any, sc: ServerContext<AppRegistration>, from: InstanceID): void {\n        if (!this.contexts.includes(sc)) {\n            this.contexts.push(sc)\n        }\n\n        if (msg.type == 'heartbeatAcknowledgementRequest') {\n            const app = sc.getInstanceDetails(from)\n            if (app) {\n                this.lastHeartbeats.set(app.instanceId!!, new Date().getTime())\n            }\n        }\n\n        if (msg.type == 'WCP5Shutdown') {\n            const app = sc.getInstanceDetails(from)\n            if (app) {\n                sc.setAppState(from, State.Terminated)\n            }\n        }\n    }\n\n\n    async sendHeartbeat(sc: ServerContext<AppRegistration>, app: AppIdentifier): Promise<void> {\n        sc.post({\n            type: 'heartbeatEvent',\n            meta: {\n                timestamp: new Date(),\n                eventUuid: sc.createUUID(),\n            },\n            payload: {\n                timestamp: new Date()\n            }\n        } as BrowserTypes.HeartbeatEvent, app.instanceId!!)\n    }\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8f968288cfed56b7aadfb9846a910c51c8d6c4b8","contentHash":"ebd09d62be516c792b8930886fccdd57984811fb46b648f35868953e743a967f"},"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/directory/BasicDirectory.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/directory/BasicDirectory.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":54}},"3":{"start":{"line":6,"column":4},"end":{"line":20,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":20}},"5":{"start":{"line":9,"column":9},"end":{"line":20,"column":5}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":20}},"7":{"start":{"line":12,"column":9},"end":{"line":20,"column":5}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":21}},"9":{"start":{"line":15,"column":9},"end":{"line":20,"column":5}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":20}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":21}},"12":{"start":{"line":28,"column":8},"end":{"line":28,"column":28}},"13":{"start":{"line":31,"column":20},"end":{"line":33,"column":61}},"14":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"15":{"start":{"line":38,"column":19},"end":{"line":38,"column":55}},"16":{"start":{"line":39,"column":20},"end":{"line":39,"column":38}},"17":{"start":{"line":40,"column":28},"end":{"line":46,"column":10}},"18":{"start":{"line":41,"column":12},"end":{"line":45,"column":14}},"19":{"start":{"line":47,"column":8},"end":{"line":47,"column":27}},"20":{"start":{"line":50,"column":27},"end":{"line":51,"column":56}},"21":{"start":{"line":51,"column":26},"end":{"line":51,"column":55}},"22":{"start":{"line":52,"column":8},"end":{"line":52,"column":26}},"23":{"start":{"line":55,"column":32},"end":{"line":56,"column":84}},"24":{"start":{"line":56,"column":25},"end":{"line":56,"column":83}},"25":{"start":{"line":57,"column":8},"end":{"line":57,"column":31}},"26":{"start":{"line":60,"column":8},"end":{"line":63,"column":25}},"27":{"start":{"line":61,"column":25},"end":{"line":63,"column":23}},"28":{"start":{"line":62,"column":25},"end":{"line":62,"column":83}},"29":{"start":{"line":66,"column":8},"end":{"line":66,"column":68}},"30":{"start":{"line":66,"column":50},"end":{"line":66,"column":66}},"31":{"start":{"line":69,"column":8},"end":{"line":69,"column":28}},"32":{"start":{"line":72,"column":0},"end":{"line":72,"column":40}}},"fnMap":{"0":{"name":"genericResultTypeSame","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":30}},"loc":{"start":{"line":5,"column":47},"end":{"line":21,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":22},"end":{"line":29,"column":5}},"line":27},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":58},"end":{"line":36,"column":5}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":29},"end":{"line":48,"column":5}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":36},"end":{"line":40,"column":37}},"loc":{"start":{"line":40,"column":54},"end":{"line":46,"column":9}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":25},"end":{"line":53,"column":5}},"line":49},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":21},"end":{"line":51,"column":22}},"loc":{"start":{"line":51,"column":26},"end":{"line":51,"column":55}},"line":51},"7":{"name":"(anonymous_7)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":57},"end":{"line":58,"column":5}},"line":54},"8":{"name":"(anonymous_8)","decl":{"start":{"line":56,"column":20},"end":{"line":56,"column":21}},"loc":{"start":{"line":56,"column":25},"end":{"line":56,"column":83}},"line":56},"9":{"name":"(anonymous_9)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":54},"end":{"line":64,"column":5}},"line":59},"10":{"name":"(anonymous_10)","decl":{"start":{"line":61,"column":20},"end":{"line":61,"column":21}},"loc":{"start":{"line":61,"column":25},"end":{"line":63,"column":23}},"line":61},"11":{"name":"(anonymous_11)","decl":{"start":{"line":62,"column":20},"end":{"line":62,"column":21}},"loc":{"start":{"line":62,"column":25},"end":{"line":62,"column":83}},"line":62},"12":{"name":"(anonymous_12)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":28},"end":{"line":67,"column":5}},"line":65},"13":{"name":"(anonymous_13)","decl":{"start":{"line":66,"column":45},"end":{"line":66,"column":46}},"loc":{"start":{"line":66,"column":50},"end":{"line":66,"column":66}},"line":66},"14":{"name":"(anonymous_14)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":22},"end":{"line":70,"column":5}},"line":68}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":20,"column":5}},{"start":{"line":6,"column":4},"end":{"line":20,"column":5}}],"line":6},"1":{"loc":{"start":{"line":9,"column":9},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":9},"end":{"line":20,"column":5}},{"start":{"line":9,"column":9},"end":{"line":20,"column":5}}],"line":9},"2":{"loc":{"start":{"line":12,"column":9},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":12,"column":9},"end":{"line":20,"column":5}},{"start":{"line":12,"column":9},"end":{"line":20,"column":5}}],"line":12},"3":{"loc":{"start":{"line":15,"column":9},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":9},"end":{"line":20,"column":5}},{"start":{"line":15,"column":9},"end":{"line":20,"column":5}}],"line":15},"4":{"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":65}},"type":"binary-expr","locations":[{"start":{"line":15,"column":13},"end":{"line":15,"column":40}},{"start":{"line":15,"column":44},"end":{"line":15,"column":65}}],"line":15},"5":{"loc":{"start":{"line":31,"column":20},"end":{"line":33,"column":61}},"type":"binary-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":45}},{"start":{"line":31,"column":51},"end":{"line":31,"column":77}},{"start":{"line":32,"column":14},"end":{"line":32,"column":38}},{"start":{"line":32,"column":44},"end":{"line":32,"column":84}},{"start":{"line":33,"column":13},"end":{"line":33,"column":60}}],"line":31},"6":{"loc":{"start":{"line":32,"column":45},"end":{"line":32,"column":61}},"type":"binary-expr","locations":[{"start":{"line":32,"column":45},"end":{"line":32,"column":55}},{"start":{"line":32,"column":59},"end":{"line":32,"column":61}}],"line":32},"7":{"loc":{"start":{"line":38,"column":19},"end":{"line":38,"column":55}},"type":"binary-expr","locations":[{"start":{"line":38,"column":19},"end":{"line":38,"column":49}},{"start":{"line":38,"column":53},"end":{"line":38,"column":55}}],"line":38}},"s":{"0":1,"1":1,"2":1,"3":41,"4":33,"5":8,"6":2,"7":6,"8":0,"9":6,"10":2,"11":4,"12":142,"13":120,"14":120,"15":54,"16":54,"17":54,"18":120,"19":54,"20":22,"21":45,"22":22,"23":22,"24":84,"25":22,"26":9,"27":9,"28":36,"29":22,"30":55,"31":53,"32":1},"f":{"0":41,"1":142,"2":120,"3":54,"4":120,"5":22,"6":45,"7":22,"8":84,"9":9,"10":9,"11":36,"12":22,"13":55,"14":53},"b":{"0":[33,8],"1":[2,6],"2":[0,6],"3":[2,4],"4":[6,2],"5":[120,88,56,48,41],"6":[48,0],"7":[54,0]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/directory/BasicDirectory.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/toolbox/fdc3-for-web/fdc3-web-impl/src/directory/BasicDirectory.ts"],"names":[],"mappings":";;;AAEA,sDAYC;AAZD,SAAgB,qBAAqB,CAAC,IAAwB,EAAE,QAA4B;IACxF,IAAI,QAAQ,IAAI,SAAS,EAAE,CAAC;QACxB,OAAO,IAAI,CAAA;IACf,CAAC;SAAM,IAAI,IAAI,IAAI,QAAQ,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAA;IACf,CAAC;SAAM,IAAI,IAAI,IAAI,SAAS,EAAE,CAAC;QAC3B,OAAO,KAAK,CAAA,CAAI,qDAAqD;IACzE,CAAC;SAAM,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,QAAQ,IAAI,SAAS,EAAE,CAAC;QAC9D,OAAO,IAAI,CAAA;IACf,CAAC;SAAM,CAAC;QACJ,OAAO,KAAK,CAAA;IAChB,CAAC;AACL,CAAC;AAED;;GAEG;AACH,MAAa,cAAc;IAEvB,OAAO,CAAgB;IAEvB,YAAY,IAAoB;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;IACvB,CAAC;IAEO,aAAa,CAAC,CAAkB,EAAE,WAA+B,EAAE,UAA8B,EAAE,UAA8B;QACrI,MAAM,GAAG,GAAG,CAAC,CAAC,UAAU,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,IAAI,UAAU,CAAC,CAAC;YACnE,CAAC,CAAC,WAAW,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;YAC1E,CAAC,qBAAqB,CAAC,CAAC,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAA;QACrD,+DAA+D;QAC/D,OAAO,GAAG,CAAA;IACd,CAAC;IAEO,qBAAqB,CAAC,CAAe;QACzC,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,IAAI,EAAE,CAAA;QAC/C,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QAC9B,MAAM,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YACzC,OAAO;gBACH,UAAU,EAAE,GAAG;gBACf,GAAI,KAAa;gBACjB,KAAK,EAAE,CAAC,CAAC,KAAK;aACjB,CAAA;QACL,CAAC,CAAC,CAAA;QACF,OAAO,WAAgC,CAAA;IAC3C,CAAC;IAED,kBAAkB;QACd,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE;aACpC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAA;QAEhD,OAAO,UAAU,CAAA;IACrB,CAAC;IAED,eAAe,CAAC,WAA+B,EAAE,UAA8B,EAAE,UAA8B;QAC3G,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE;aAC5C,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAA;QAC5E,OAAO,eAAe,CAAA;IAC1B,CAAC;IAED,YAAY,CAAC,WAA+B,EAAE,UAA8B,EAAE,UAA8B;QACxG,OAAO,IAAI,CAAC,eAAe,EAAE;aACxB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;aACrC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;aACvE,MAAM,GAAG,CAAC,CAAC,CAAA;IACxB,CAAC;IAGD,gBAAgB,CAAC,KAAa;QAC1B,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAA;IAC/D,CAAC;IAED,eAAe;QACX,OAAO,IAAI,CAAC,OAAO,CAAA;IACvB,CAAC;CACJ;AAzDD,wCAyDC","sourcesContent":["import { Directory, DirectoryApp, DirectoryIntent } from \"./DirectoryInterface\"\n\nexport function genericResultTypeSame(real: string | undefined, required: string | undefined) {\n    if (required == undefined) {\n        return true\n    } else if (real == required) {\n        return true\n    } else if (real == undefined) {\n        return false    // required is not undefined, so asking for something\n    } else if (real.startsWith(\"channel<\") && required == \"channel\") {\n        return true\n    } else {\n        return false\n    }\n}\n\n/**\n * Basic directory implementation that allows queries over a set of apps.\n */\nexport class BasicDirectory implements Directory {\n\n    allApps: DirectoryApp[]\n\n    constructor(apps: DirectoryApp[]) {\n        this.allApps = apps\n    }\n\n    private intentMatches(i: DirectoryIntent, contextType: string | undefined, intentName: string | undefined, resultType: string | undefined): boolean {\n        const out = ((intentName == undefined) || (i.intentName == intentName)) &&\n            ((contextType == undefined) || ((i.contexts ?? []).includes(contextType))) &&\n            (genericResultTypeSame(i.resultType, resultType))\n        //console.log(`Intent ${JSON.stringify(i)} matches ? ${out}}\"`)\n        return out\n    }\n\n    private retrieveIntentsForApp(a: DirectoryApp): DirectoryIntent[] {\n        const lf = a.interop?.intents?.listensFor ?? {}\n        const lfa = Object.entries(lf)\n        const lfAugmented = lfa.map(([key, value]) => {\n            return {\n                intentName: key,\n                ...(value as any),\n                appId: a.appId\n            }\n        })\n        return lfAugmented as DirectoryIntent[]\n    }\n\n    retrieveAllIntents(): DirectoryIntent[] {\n        const allIntents = this.retrieveAllApps()\n            .flatMap(a => this.retrieveIntentsForApp(a))\n\n        return allIntents\n    }\n\n    retrieveIntents(contextType: string | undefined, intentName: string | undefined, resultType: string | undefined): DirectoryIntent[] {\n        const matchingIntents = this.retrieveAllIntents()\n            .filter(i => this.intentMatches(i, contextType, intentName, resultType))\n        return matchingIntents\n    }\n\n    retrieveApps(contextType: string | undefined, intentName: string | undefined, resultType: string | undefined): DirectoryApp[] {\n        return this.retrieveAllApps()\n            .filter(a => this.retrieveIntentsForApp(a)\n                .filter(i => this.intentMatches(i, contextType, intentName, resultType))\n                .length > 0)\n    }\n\n\n    retrieveAppsById(appId: string): DirectoryApp[] {\n        return this.retrieveAllApps().filter(a => a.appId == appId)\n    }\n\n    retrieveAllApps(): DirectoryApp[] {\n        return this.allApps\n    }\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a443dc20af3b5b55edeee6a507d3cda0ae5d692b","contentHash":"b02187fbf70b2e3cc7ce42146817d61c19051ddff7b4a8a6290187cc4c44dbdb"}}