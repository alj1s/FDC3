{"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/messaging/AbstractMessaging.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/messaging/AbstractMessaging.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":8,"column":12},"end":{"line":8,"column":16}},"3":{"start":{"line":9,"column":29},"end":{"line":9,"column":33}},"4":{"start":{"line":11,"column":8},"end":{"line":11,"column":31}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":59}},"6":{"start":{"line":13,"column":8},"end":{"line":13,"column":31}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":26}},"8":{"start":{"line":19,"column":19},"end":{"line":19,"column":36}},"9":{"start":{"line":20,"column":8},"end":{"line":41,"column":11}},"10":{"start":{"line":21,"column":23},"end":{"line":21,"column":28}},"11":{"start":{"line":22,"column":22},"end":{"line":30,"column":13}},"12":{"start":{"line":26,"column":20},"end":{"line":26,"column":32}},"13":{"start":{"line":27,"column":20},"end":{"line":27,"column":40}},"14":{"start":{"line":28,"column":20},"end":{"line":28,"column":31}},"15":{"start":{"line":31,"column":12},"end":{"line":31,"column":29}},"16":{"start":{"line":32,"column":12},"end":{"line":40,"column":13}},"17":{"start":{"line":33,"column":16},"end":{"line":39,"column":33}},"18":{"start":{"line":34,"column":20},"end":{"line":34,"column":40}},"19":{"start":{"line":35,"column":20},"end":{"line":38,"column":21}},"20":{"start":{"line":36,"column":24},"end":{"line":36,"column":103}},"21":{"start":{"line":37,"column":24},"end":{"line":37,"column":63}},"22":{"start":{"line":44,"column":29},"end":{"line":44,"column":138}},"23":{"start":{"line":45,"column":21},"end":{"line":46,"column":78}},"24":{"start":{"line":45,"column":39},"end":{"line":46,"column":63}},"25":{"start":{"line":47,"column":8},"end":{"line":47,"column":27}},"26":{"start":{"line":48,"column":20},"end":{"line":48,"column":30}},"27":{"start":{"line":49,"column":8},"end":{"line":54,"column":9}},"28":{"start":{"line":50,"column":12},"end":{"line":50,"column":47}},"29":{"start":{"line":53,"column":12},"end":{"line":53,"column":23}},"30":{"start":{"line":60,"column":35},"end":{"line":60,"column":130}},"31":{"start":{"line":61,"column":8},"end":{"line":64,"column":10}},"32":{"start":{"line":65,"column":8},"end":{"line":65,"column":88}},"33":{"start":{"line":66,"column":8},"end":{"line":66,"column":51}},"34":{"start":{"line":69,"column":8},"end":{"line":69,"column":26}},"35":{"start":{"line":70,"column":8},"end":{"line":70,"column":43}},"36":{"start":{"line":73,"column":8},"end":{"line":73,"column":60}},"37":{"start":{"line":76,"column":21},"end":{"line":76,"column":95}},"38":{"start":{"line":76,"column":40},"end":{"line":76,"column":93}},"39":{"start":{"line":77,"column":8},"end":{"line":77,"column":27}},"40":{"start":{"line":78,"column":20},"end":{"line":78,"column":30}},"41":{"start":{"line":79,"column":8},"end":{"line":84,"column":9}},"42":{"start":{"line":80,"column":12},"end":{"line":80,"column":49}},"43":{"start":{"line":83,"column":12},"end":{"line":83,"column":23}},"44":{"start":{"line":90,"column":27},"end":{"line":90,"column":54}},"45":{"start":{"line":91,"column":31},"end":{"line":101,"column":9}},"46":{"start":{"line":102,"column":8},"end":{"line":102,"column":30}},"47":{"start":{"line":105,"column":0},"end":{"line":105,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":65},"end":{"line":14,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":16},"end":{"line":17,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":41},"end":{"line":42,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":27},"end":{"line":20,"column":28}},"loc":{"start":{"line":20,"column":48},"end":{"line":41,"column":9}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":24},"end":{"line":25,"column":25}},"loc":{"start":{"line":25,"column":31},"end":{"line":29,"column":17}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":27},"end":{"line":33,"column":28}},"loc":{"start":{"line":33,"column":33},"end":{"line":39,"column":17}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":67},"end":{"line":55,"column":5}},"line":43},"7":{"name":"(anonymous_7)","decl":{"start":{"line":45,"column":34},"end":{"line":45,"column":35}},"loc":{"start":{"line":45,"column":39},"end":{"line":46,"column":63}},"line":45},"8":{"name":"(anonymous_8)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":20},"end":{"line":67,"column":5}},"line":59},"9":{"name":"(anonymous_9)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":23},"end":{"line":71,"column":5}},"line":68},"10":{"name":"(anonymous_10)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":32},"end":{"line":74,"column":5}},"line":72},"11":{"name":"(anonymous_11)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":67},"end":{"line":85,"column":5}},"line":75},"12":{"name":"(anonymous_12)","decl":{"start":{"line":76,"column":34},"end":{"line":76,"column":35}},"loc":{"start":{"line":76,"column":40},"end":{"line":76,"column":93}},"line":76},"13":{"name":"(anonymous_13)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":30},"end":{"line":103,"column":5}},"line":89}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":48},"end":{"line":10,"column":63}},"type":"default-arg","locations":[{"start":{"line":10,"column":58},"end":{"line":10,"column":63}}],"line":10},"1":{"loc":{"start":{"line":32,"column":12},"end":{"line":40,"column":13}},"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":40,"column":13}},{"start":{"line":32,"column":12},"end":{"line":40,"column":13}}],"line":32},"2":{"loc":{"start":{"line":35,"column":20},"end":{"line":38,"column":21}},"type":"if","locations":[{"start":{"line":35,"column":20},"end":{"line":38,"column":21}},{"start":{"line":35,"column":20},"end":{"line":38,"column":21}}],"line":35},"3":{"loc":{"start":{"line":44,"column":29},"end":{"line":44,"column":138}},"type":"binary-expr","locations":[{"start":{"line":44,"column":29},"end":{"line":44,"column":48}},{"start":{"line":44,"column":52},"end":{"line":44,"column":138}}],"line":44},"4":{"loc":{"start":{"line":45,"column":39},"end":{"line":46,"column":63}},"type":"binary-expr","locations":[{"start":{"line":45,"column":40},"end":{"line":45,"column":66}},{"start":{"line":46,"column":16},"end":{"line":46,"column":62}}],"line":45},"5":{"loc":{"start":{"line":49,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":54,"column":9}},{"start":{"line":49,"column":8},"end":{"line":54,"column":9}}],"line":49},"6":{"loc":{"start":{"line":79,"column":8},"end":{"line":84,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":84,"column":9}},{"start":{"line":79,"column":8},"end":{"line":84,"column":9}}],"line":79}},"s":{"0":1,"1":1,"2":75,"3":75,"4":75,"5":75,"6":75,"7":208,"8":228,"9":228,"10":228,"11":228,"12":216,"13":216,"14":216,"15":228,"16":228,"17":137,"18":137,"19":137,"20":1,"21":1,"22":137,"23":137,"24":138,"25":137,"26":137,"27":136,"28":3,"29":133,"30":75,"31":75,"32":75,"33":75,"34":2,"35":2,"36":1,"37":75,"38":75,"39":75,"40":75,"41":75,"42":0,"43":75,"44":75,"45":75,"46":75,"47":1},"f":{"0":75,"1":208,"2":228,"3":228,"4":216,"5":137,"6":137,"7":138,"8":75,"9":2,"10":1,"11":75,"12":75,"13":75},"b":{"0":[0],"1":[137,91],"2":[1,136],"3":[137,118],"4":[138,136],"5":[3,133],"6":[0,75]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/messaging/AbstractMessaging.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/messaging/AbstractMessaging.ts"],"names":[],"mappings":"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","sourcesContent":["import { AppIdentifier, ImplementationMetadata, GetAgentParams } from \"@kite9/fdc3-standard\";\nimport { Messaging } from \"../Messaging\";\nimport { RegisterableListener } from \"../listeners/RegisterableListener\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\";\n\n\ntype WebConnectionProtocol4ValidateAppIdentity = BrowserTypes.WebConnectionProtocol4ValidateAppIdentity\ntype WebConnectionProtocol5ValidateAppIdentitySuccessResponse = BrowserTypes.WebConnectionProtocol5ValidateAppIdentitySuccessResponse\n\nexport abstract class AbstractMessaging implements Messaging {\n\n    private readonly options: GetAgentParams\n    private readonly connectionAttemptUuid: string\n    private readonly timeout: number\n    private appId: AppIdentifier | null = null\n    private implementationMetadata: ImplementationMetadata | null = null\n\n    abstract createUUID(): string\n    abstract post(message: object): Promise<void>\n\n    abstract register(l: RegisterableListener): void\n    abstract unregister(id: string): void\n\n    abstract createMeta(): object\n\n    constructor(options: GetAgentParams, connectionAttemptUuid: string, timeout: number = 10000) {\n        this.options = options\n        this.connectionAttemptUuid = connectionAttemptUuid\n        this.timeout = timeout\n    }\n\n    getSource(): AppIdentifier {\n        return this.appId!!\n    }\n\n    waitFor<X>(filter: (m: any) => boolean, timeoutErrorMessage?: string): Promise<X> {\n        const id = this.createUUID()\n        return new Promise<X>((resolve, reject) => {\n            var done = false;\n            const l: RegisterableListener = {\n                id,\n                filter: filter,\n                action: (m) => {\n                    done = true\n                    this.unregister(id)\n                    resolve(m)\n                }\n            } as RegisterableListener\n\n\n            this.register(l);\n\n            if (timeoutErrorMessage) {\n                setTimeout(() => {\n                    this.unregister(id)\n                    if (!done) {\n                        console.error(`Rejecting after ${this.timeout}ms with ${timeoutErrorMessage}`)\n                        reject(new Error(timeoutErrorMessage))\n                    }\n                }, this.timeout);\n            }\n\n        })\n    }\n\n\n    async exchange<X>(message: any, expectedTypeName: string, timeoutErrorMessage?: string): Promise<X> {\n        const errorMessage = timeoutErrorMessage ?? `Timeout waiting for ${expectedTypeName} with requestUuid ${message.meta.requestUuid}`\n        const prom = this.waitFor(m =>\n            (m.type == expectedTypeName)\n            && (m.meta.requestUuid == message.meta.requestUuid), errorMessage)\n        this.post(message)\n        const out: any = await prom\n        if (out?.payload?.error) {\n            throw new Error(out.payload.error)\n        } else {\n            return out\n        }\n    }\n\n    /**\n     * This handles the verify exchange with the da-server,\n     */\n    async connect(): Promise<void> {\n        const validationResponse = await this.exchangeValidationWithId<WebConnectionProtocol5ValidateAppIdentitySuccessResponse>(\n            this.createValidationMessage(),\n            this.connectionAttemptUuid\n        )\n\n        this.appId = {\n            appId: validationResponse.payload.appId,\n            instanceId: validationResponse.payload.instanceId\n        }\n\n        this.implementationMetadata = validationResponse.payload.implementationMetadata\n\n        this.storeInstanceUuid(validationResponse)\n    }\n\n    async disconnect(): Promise<void> {\n        this.appId = null;\n        this.implementationMetadata = null;\n    }\n\n    getImplementationMetadata(): Promise<ImplementationMetadata> {\n        return Promise.resolve(this.implementationMetadata!!)\n    }\n\n    private async exchangeValidationWithId<X>(message: any, connectionAttemptUuid: string): Promise<X> {\n        const prom = this.waitFor(m =>\n            (m.meta.connectionAttemptUuid == connectionAttemptUuid))\n        this.post(message)\n        const out: any = await prom\n        if (out?.payload?.message) {\n            throw new Error(out.payload.message)\n        } else {\n            return out\n        }\n    }\n\n    /**\n     * Sends the validate message through the nmessage port\n     */\n    private createValidationMessage(): WebConnectionProtocol4ValidateAppIdentity {\n        var instanceUuid = this.retrieveInstanceUuid()\n\n        const requestMessage: WebConnectionProtocol4ValidateAppIdentity = {\n            type: 'WCP4ValidateAppIdentity',\n            meta: {\n                connectionAttemptUuid: this.connectionAttemptUuid,\n                timestamp: new Date()\n            },\n            payload: {\n                identityUrl: this.options.identityUrl!!,\n                instanceUuid\n            } as any /* ISSUE: 1301 */\n        }\n\n        return requestMessage\n    }\n\n    /**\n     * Used for restoring session details in case of reload\n     */\n    abstract retrieveInstanceUuid(): string | undefined\n\n    /** \n     * Used for caching session details in case of reload\n     */\n    abstract storeInstanceUuid(validationResponse: WebConnectionProtocol5ValidateAppIdentitySuccessResponse): void\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d3c772b6d4cc118402e8286ca508c575b138355a","contentHash":"77dd892ce1a44ccd5663ba6d9f6293be81ac2edf4932f04f6b36eb4a86993e9e"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/index.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":213}},"2":{"start":{"line":4,"column":28},"end":{"line":4,"column":58}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":142}},"4":{"start":{"line":5,"column":91},"end":{"line":5,"column":136}},"5":{"start":{"line":6,"column":28},"end":{"line":6,"column":68}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":142}},"7":{"start":{"line":7,"column":91},"end":{"line":7,"column":136}},"8":{"start":{"line":8,"column":25},"end":{"line":8,"column":61}},"9":{"start":{"line":9,"column":0},"end":{"line":9,"column":133}},"10":{"start":{"line":9,"column":88},"end":{"line":9,"column":127}},"11":{"start":{"line":10,"column":31},"end":{"line":10,"column":72}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":151}},"13":{"start":{"line":11,"column":94},"end":{"line":11,"column":145}},"14":{"start":{"line":12,"column":32},"end":{"line":12,"column":75}},"15":{"start":{"line":13,"column":0},"end":{"line":13,"column":154}},"16":{"start":{"line":13,"column":95},"end":{"line":13,"column":148}},"17":{"start":{"line":14,"column":28},"end":{"line":14,"column":63}},"18":{"start":{"line":15,"column":0},"end":{"line":15,"column":142}},"19":{"start":{"line":15,"column":91},"end":{"line":15,"column":136}},"20":{"start":{"line":16,"column":34},"end":{"line":16,"column":80}},"21":{"start":{"line":17,"column":0},"end":{"line":17,"column":160}},"22":{"start":{"line":17,"column":97},"end":{"line":17,"column":154}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":77},"end":{"line":5,"column":78}},"loc":{"start":{"line":5,"column":89},"end":{"line":5,"column":138}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":77},"end":{"line":7,"column":78}},"loc":{"start":{"line":7,"column":89},"end":{"line":7,"column":138}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":74},"end":{"line":9,"column":75}},"loc":{"start":{"line":9,"column":86},"end":{"line":9,"column":129}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":11,"column":80},"end":{"line":11,"column":81}},"loc":{"start":{"line":11,"column":92},"end":{"line":11,"column":147}},"line":11},"4":{"name":"(anonymous_4)","decl":{"start":{"line":13,"column":81},"end":{"line":13,"column":82}},"loc":{"start":{"line":13,"column":93},"end":{"line":13,"column":150}},"line":13},"5":{"name":"(anonymous_5)","decl":{"start":{"line":15,"column":77},"end":{"line":15,"column":78}},"loc":{"start":{"line":15,"column":89},"end":{"line":15,"column":138}},"line":15},"6":{"name":"(anonymous_6)","decl":{"start":{"line":17,"column":83},"end":{"line":17,"column":84}},"loc":{"start":{"line":17,"column":95},"end":{"line":17,"column":156}},"line":17}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":75,"5":1,"6":1,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":75,"14":1,"15":1,"16":75,"17":1,"18":1,"19":75,"20":1,"21":1,"22":75},"f":{"0":75,"1":0,"2":0,"3":75,"4":75,"5":75,"6":75},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/index.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/index.ts"],"names":[],"mappings":";;;AAAA,2DAAwD;AAuBpD,kGAvBK,qCAAiB,OAuBL;AArBrB,qEAAkE;AAoB9D,kGApBK,qCAAiB,OAoBL;AAlBrB,8DAA2D;AAoBvD,+FApBK,+BAAc,OAoBL;AAjBlB,yEAAsE;AAuBlE,qGAvBK,2CAAoB,OAuBL;AAtBxB,4EAAyE;AAqBrE,sGArBK,6CAAqB,OAqBL;AAjBzB,gEAA6D;AAgBzD,kGAhBK,qCAAiB,OAgBL;AAZrB,iFAA8E;AAgB1E,wGAhBK,iDAAuB,OAgBL","sourcesContent":["import { BasicDesktopAgent } from \"./BasicDesktopAgent\";\nimport { Messaging } from \"./Messaging\";\nimport { AbstractMessaging } from \"./messaging/AbstractMessaging\";\n\nimport { DefaultChannel } from \"./channels/DefaultChannel\";\nimport { ChannelSupport } from \"./channels/ChannelSupport\";\n\nimport { DefaultIntentSupport } from \"./intents/DefaultIntentSupport\";\nimport { DefaultChannelSupport } from \"./channels/DefaultChannelSupport\";\nimport { IntentSupport } from \"./intents/IntentSupport\";\nimport { RegisterableListener } from \"./listeners/RegisterableListener\";\n\nimport { DefaultAppSupport } from \"./apps/DefaultAppSupport\";\nimport { AppSupport } from \"./apps/AppSupport\";\n\nimport { HandshakeSupport } from \"./handshake/HandshakeSupport\";\nimport { DefaultHandshakeSupport } from \"./handshake/DefaultHandshakeSupport\";\n\nimport { Connectable } from \"@kite9/fdc3-standard\";\n\nexport {\n    type Messaging,\n    AbstractMessaging,\n    BasicDesktopAgent,\n    DefaultChannel,\n    type AppSupport,\n    type IntentSupport,\n    type ChannelSupport,\n    DefaultAppSupport,\n    DefaultChannelSupport,\n    DefaultIntentSupport,\n    type HandshakeSupport,\n    DefaultHandshakeSupport,\n    RegisterableListener,\n    Connectable,\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c6025a79c1745dbf25ed5fdde56790be86bd2053","contentHash":"e786cf86532a46c1a44327d6669d649605ecfe4576f3f655b5dfa30f8ddb7ff8"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/BasicDesktopAgent.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/BasicDesktopAgent.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":15,"column":8},"end":{"line":15,"column":35}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":31}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":33}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":25}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":41}},"7":{"start":{"line":22,"column":8},"end":{"line":26,"column":9}},"8":{"start":{"line":23,"column":39},"end":{"line":23,"column":99}},"9":{"start":{"line":25,"column":16},"end":{"line":25,"column":52}},"10":{"start":{"line":29,"column":8},"end":{"line":29,"column":58}},"11":{"start":{"line":32,"column":24},"end":{"line":32,"column":60}},"12":{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},"13":{"start":{"line":34,"column":12},"end":{"line":34,"column":46}},"14":{"start":{"line":37,"column":12},"end":{"line":37,"column":37}},"15":{"start":{"line":41,"column":27},"end":{"line":41,"column":54}},"16":{"start":{"line":42,"column":31},"end":{"line":42,"column":66}},"17":{"start":{"line":43,"column":8},"end":{"line":43,"column":76}},"18":{"start":{"line":46,"column":8},"end":{"line":46,"column":47}},"19":{"start":{"line":49,"column":8},"end":{"line":49,"column":47}},"20":{"start":{"line":52,"column":8},"end":{"line":52,"column":52}},"21":{"start":{"line":55,"column":8},"end":{"line":55,"column":52}},"22":{"start":{"line":58,"column":8},"end":{"line":58,"column":48}},"23":{"start":{"line":61,"column":8},"end":{"line":61,"column":56}},"24":{"start":{"line":64,"column":8},"end":{"line":64,"column":56}},"25":{"start":{"line":67,"column":8},"end":{"line":67,"column":46}},"26":{"start":{"line":70,"column":8},"end":{"line":70,"column":68}},"27":{"start":{"line":73,"column":8},"end":{"line":73,"column":58}},"28":{"start":{"line":76,"column":8},"end":{"line":86,"column":9}},"29":{"start":{"line":77,"column":12},"end":{"line":79,"column":14}},"30":{"start":{"line":81,"column":13},"end":{"line":86,"column":9}},"31":{"start":{"line":82,"column":12},"end":{"line":82,"column":23}},"32":{"start":{"line":85,"column":12},"end":{"line":85,"column":29}},"33":{"start":{"line":89,"column":8},"end":{"line":89,"column":80}},"34":{"start":{"line":92,"column":8},"end":{"line":92,"column":63}},"35":{"start":{"line":95,"column":8},"end":{"line":95,"column":82}},"36":{"start":{"line":98,"column":8},"end":{"line":98,"column":62}},"37":{"start":{"line":101,"column":8},"end":{"line":101,"column":44}},"38":{"start":{"line":104,"column":8},"end":{"line":104,"column":45}},"39":{"start":{"line":107,"column":8},"end":{"line":107,"column":70}},"40":{"start":{"line":107,"column":53},"end":{"line":107,"column":67}},"41":{"start":{"line":110,"column":8},"end":{"line":110,"column":67}},"42":{"start":{"line":110,"column":53},"end":{"line":110,"column":64}},"43":{"start":{"line":113,"column":0},"end":{"line":113,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":66},"end":{"line":20,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":42},"end":{"line":27,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":20},"end":{"line":30,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":29},"end":{"line":39,"column":5}},"line":31},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":47},"end":{"line":44,"column":5}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":22},"end":{"line":47,"column":5}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":24},"end":{"line":50,"column":5}},"line":48},"7":{"name":"(anonymous_7)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":34},"end":{"line":53,"column":5}},"line":51},"8":{"name":"(anonymous_8)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":27},"end":{"line":56,"column":5}},"line":54},"9":{"name":"(anonymous_9)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":26},"end":{"line":59,"column":5}},"line":57},"10":{"name":"(anonymous_10)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":31},"end":{"line":62,"column":5}},"line":60},"11":{"name":"(anonymous_11)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":27},"end":{"line":65,"column":5}},"line":63},"12":{"name":"(anonymous_12)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":24},"end":{"line":68,"column":5}},"line":66},"13":{"name":"(anonymous_13)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":44},"end":{"line":71,"column":5}},"line":69},"14":{"name":"(anonymous_14)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":34},"end":{"line":74,"column":5}},"line":72},"15":{"name":"(anonymous_15)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":21},"end":{"line":87,"column":5}},"line":75},"16":{"name":"(anonymous_16)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":38},"end":{"line":90,"column":5}},"line":88},"17":{"name":"(anonymous_17)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":39},"end":{"line":93,"column":5}},"line":91},"18":{"name":"(anonymous_18)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":40},"end":{"line":96,"column":5}},"line":94},"19":{"name":"(anonymous_19)","decl":{"start":{"line":97,"column":4},"end":{"line":97,"column":5}},"loc":{"start":{"line":97,"column":23},"end":{"line":99,"column":5}},"line":97},"20":{"name":"(anonymous_20)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":23},"end":{"line":102,"column":5}},"line":100},"21":{"name":"(anonymous_21)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":24},"end":{"line":105,"column":5}},"line":103},"22":{"name":"(anonymous_22)","decl":{"start":{"line":106,"column":4},"end":{"line":106,"column":5}},"loc":{"start":{"line":106,"column":23},"end":{"line":108,"column":5}},"line":106},"23":{"name":"(anonymous_23)","decl":{"start":{"line":107,"column":48},"end":{"line":107,"column":49}},"loc":{"start":{"line":107,"column":53},"end":{"line":107,"column":67}},"line":107},"24":{"name":"(anonymous_24)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":20},"end":{"line":111,"column":5}},"line":109},"25":{"name":"(anonymous_25)","decl":{"start":{"line":110,"column":48},"end":{"line":110,"column":49}},"loc":{"start":{"line":110,"column":53},"end":{"line":110,"column":64}},"line":110}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":8},"end":{"line":26,"column":9}},"type":"switch","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":99}},{"start":{"line":24,"column":12},"end":{"line":25,"column":52}}],"line":22},"1":{"loc":{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},{"start":{"line":33,"column":8},"end":{"line":38,"column":9}}],"line":33},"2":{"loc":{"start":{"line":41,"column":27},"end":{"line":41,"column":54}},"type":"cond-expr","locations":[{"start":{"line":41,"column":37},"end":{"line":41,"column":44}},{"start":{"line":41,"column":47},"end":{"line":41,"column":54}}],"line":41},"3":{"loc":{"start":{"line":42,"column":31},"end":{"line":42,"column":66}},"type":"cond-expr","locations":[{"start":{"line":42,"column":52},"end":{"line":42,"column":59}},{"start":{"line":42,"column":62},"end":{"line":42,"column":66}}],"line":42},"4":{"loc":{"start":{"line":42,"column":31},"end":{"line":42,"column":49}},"type":"binary-expr","locations":[{"start":{"line":42,"column":31},"end":{"line":42,"column":38}},{"start":{"line":42,"column":42},"end":{"line":42,"column":49}}],"line":42},"5":{"loc":{"start":{"line":76,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":86,"column":9}},{"start":{"line":76,"column":8},"end":{"line":86,"column":9}}],"line":76},"6":{"loc":{"start":{"line":81,"column":13},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":13},"end":{"line":86,"column":9}},{"start":{"line":81,"column":13},"end":{"line":86,"column":9}}],"line":81}},"s":{"0":1,"1":1,"2":75,"3":75,"4":75,"5":75,"6":75,"7":2,"8":1,"9":1,"10":1,"11":3,"12":3,"13":2,"14":1,"15":8,"16":8,"17":8,"18":1,"19":1,"20":5,"21":16,"22":1,"23":12,"24":1,"25":7,"26":4,"27":2,"28":17,"29":2,"30":15,"31":3,"32":12,"33":11,"34":4,"35":3,"36":3,"37":1,"38":1,"39":2,"40":2,"41":75,"42":75,"43":1},"f":{"0":75,"1":2,"2":1,"3":3,"4":8,"5":1,"6":1,"7":5,"8":16,"9":1,"10":12,"11":1,"12":7,"13":4,"14":2,"15":17,"16":11,"17":4,"18":3,"19":3,"20":1,"21":1,"22":2,"23":2,"24":75,"25":75},"b":{"0":[1,1],"1":[2,1],"2":[7,1],"3":[6,2],"4":[8,7],"5":[2,15],"6":[3,12]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/BasicDesktopAgent.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/BasicDesktopAgent.ts"],"names":[],"mappings":"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","sourcesContent":["import { AppIdentifier, AppMetadata, ContextHandler, DesktopAgent, EventHandler, FDC3EventTypes, ImplementationMetadata, IntentHandler, IntentResolution, Listener } from \"@kite9/fdc3-standard\";\nimport { ChannelSupport } from \"./channels/ChannelSupport\";\nimport { AppSupport } from \"./apps/AppSupport\";\nimport { IntentSupport } from \"./intents/IntentSupport\";\nimport { HandshakeSupport } from \"./handshake/HandshakeSupport\";\nimport { Connectable } from \"@kite9/fdc3-standard\";\nimport { Context } from \"@kite9/fdc3-context\";\n\n/**\n * This splits out the functionality of the desktop agent into \n * app, channels and intents concerns.\n */\nexport class BasicDesktopAgent implements DesktopAgent, Connectable {\n\n    readonly handshake: HandshakeSupport\n    readonly channels: ChannelSupport\n    readonly intents: IntentSupport\n    readonly apps: AppSupport\n    readonly connectables: Connectable[]\n\n    constructor(handshake: HandshakeSupport, channels: ChannelSupport, intents: IntentSupport, apps: AppSupport, connectables: Connectable[]) {\n        this.handshake = handshake\n        this.intents = intents\n        this.channels = channels\n        this.apps = apps\n        this.connectables = connectables\n    }\n\n    async addEventListener(type: FDC3EventTypes | null, handler: EventHandler): Promise<Listener> {\n        switch (type) {\n            case \"userChannelChanged\": return this.channels.addChannelChangedEventHandler(handler);\n            default:\n                throw new Error(\"UnknownEventType\")\n        }\n    }\n\n    async getInfo(): Promise<ImplementationMetadata> {\n        return this.handshake.getImplementationMetadata()\n    }\n\n    async broadcast(context: Context): Promise<void> {\n        const channel = await this.channels.getUserChannel()\n        if (channel) {\n            return channel.broadcast(context)\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    async addContextListener(context: ContextHandler | string | null, handler?: ContextHandler): Promise<Listener> {\n        const theHandler: ContextHandler = handler ? handler : (context as ContextHandler)\n        const theContextType: string | null = context && handler ? (context as string) : null\n        return this.channels.addContextListener(theHandler, theContextType)\n    }\n\n    getUserChannels() {\n        return this.channels.getUserChannels()\n    }\n\n    getSystemChannels() {\n        return this.channels.getUserChannels()\n    }\n\n    getOrCreateChannel(channelId: string) {\n        return this.channels.getOrCreate(channelId)\n    }\n\n    createPrivateChannel() {\n        return this.channels.createPrivateChannel()\n    }\n\n    leaveCurrentChannel() {\n        return this.channels.leaveUserChannel()\n    }\n\n    joinUserChannel(channelId: string) {\n        return this.channels.joinUserChannel(channelId)\n    }\n\n    joinChannel(channelId: string) {\n        return this.channels.joinUserChannel(channelId)\n    }\n\n    getCurrentChannel() {\n        return this.channels.getUserChannel();\n    }\n\n    findIntent(intent: string, context: Context, resultType: string | undefined) {\n        return this.intents.findIntent(intent, context, resultType)\n    }\n\n    findIntentsByContext(context: Context) {\n        return this.intents.findIntentsByContext(context)\n    }\n\n    private ensureAppId(app?: any): AppIdentifier | undefined {\n        if (typeof app === \"string\") {\n            return {\n                appId: app\n            }\n        } else if (app?.appId) {\n            return app as AppIdentifier\n        } else {\n            return undefined;\n        }\n    }\n\n    raiseIntent(intent: string, context: Context, app?: any) {\n        return this.intents.raiseIntent(intent, context, this.ensureAppId(app))\n    }\n\n    addIntentListener(intent: string, handler: IntentHandler) {\n        return this.intents.addIntentListener(intent, handler)\n    }\n\n    raiseIntentForContext(context: Context, app?: any): Promise<IntentResolution> {\n        return this.intents.raiseIntentForContext(context, this.ensureAppId(app))\n    }\n\n    open(app: any, context?: Context | undefined) {\n        return this.apps.open(this.ensureAppId(app)!, context)\n    }\n\n    findInstances(app: AppIdentifier) {\n        return this.apps.findInstances(app)\n    }\n\n    getAppMetadata(app: AppIdentifier): Promise<AppMetadata> {\n        return this.apps.getAppMetadata(app);\n    }\n\n    async disconnect(): Promise<void> {\n        await Promise.all(this.connectables.map(c => c.disconnect()))\n    }\n\n    async connect(): Promise<void> {\n        await Promise.all(this.connectables.map(c => c.connect()))\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9c3e76c0025cbd99fcd35ab3f997faead28a3b2e","contentHash":"1ac3e8060c22e9c7a0366ce5340bcff8fcc3897bce58941045f4687b6382a2c2"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/channels/DefaultChannel.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/channels/DefaultChannel.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":33},"end":{"line":4,"column":79}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":35}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":21}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":25}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":47}},"7":{"start":{"line":17,"column":21},"end":{"line":24,"column":31}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":44}},"9":{"start":{"line":29,"column":25},"end":{"line":36,"column":39}},"10":{"start":{"line":37,"column":8},"end":{"line":37,"column":48}},"11":{"start":{"line":42,"column":8},"end":{"line":54,"column":9}},"12":{"start":{"line":43,"column":12},"end":{"line":43,"column":34}},"13":{"start":{"line":44,"column":12},"end":{"line":44,"column":33}},"14":{"start":{"line":46,"column":13},"end":{"line":54,"column":9}},"15":{"start":{"line":47,"column":12},"end":{"line":47,"column":41}},"16":{"start":{"line":48,"column":12},"end":{"line":48,"column":33}},"17":{"start":{"line":52,"column":12},"end":{"line":52,"column":34}},"18":{"start":{"line":53,"column":12},"end":{"line":53,"column":37}},"19":{"start":{"line":55,"column":8},"end":{"line":55,"column":78}},"20":{"start":{"line":58,"column":25},"end":{"line":58,"column":126}},"21":{"start":{"line":59,"column":8},"end":{"line":59,"column":34}},"22":{"start":{"line":60,"column":8},"end":{"line":60,"column":24}},"23":{"start":{"line":63,"column":0},"end":{"line":63,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":54},"end":{"line":15,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":29},"end":{"line":26,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":41},"end":{"line":38,"column":5}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":51},"end":{"line":56,"column":5}},"line":39},"4":{"name":"(anonymous_4)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":59},"end":{"line":61,"column":5}},"line":57}},"branchMap":{"0":{"loc":{"start":{"line":33,"column":29},"end":{"line":33,"column":48}},"type":"binary-expr","locations":[{"start":{"line":33,"column":29},"end":{"line":33,"column":40}},{"start":{"line":33,"column":44},"end":{"line":33,"column":48}}],"line":33},"1":{"loc":{"start":{"line":37,"column":15},"end":{"line":37,"column":47}},"type":"binary-expr","locations":[{"start":{"line":37,"column":15},"end":{"line":37,"column":39}},{"start":{"line":37,"column":43},"end":{"line":37,"column":47}}],"line":37},"2":{"loc":{"start":{"line":42,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":54,"column":9}},{"start":{"line":42,"column":8},"end":{"line":54,"column":9}}],"line":42},"3":{"loc":{"start":{"line":46,"column":13},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":13},"end":{"line":54,"column":9}},{"start":{"line":46,"column":13},"end":{"line":54,"column":9}}],"line":46}},"s":{"0":1,"1":1,"2":1,"3":45,"4":45,"5":45,"6":45,"7":4,"8":4,"9":6,"10":6,"11":7,"12":1,"13":1,"14":6,"15":5,"16":5,"17":1,"18":1,"19":7,"20":5,"21":5,"22":5,"23":1},"f":{"0":45,"1":4,"2":6,"3":7,"4":5},"b":{"0":[6,1],"1":[6,3],"2":[1,6],"3":[5,1]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/channels/DefaultChannel.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/channels/DefaultChannel.ts"],"names":[],"mappings":";;;AAIA,gFAA4E;AAQ5E,MAAa,cAAc;IAEd,SAAS,CAAW;IACpB,EAAE,CAAQ;IACV,IAAI,CAA4B;IAChC,eAAe,CAA+B;IAEvD,YAAY,SAAoB,EAAE,EAAU,EAAE,IAAgC,EAAE,eAAiC;QAC7G,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;QAC1B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAA;QACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAA;IAC1C,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,OAAgB;QAC5B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAoB;YAC1D,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YACjC,OAAO,EAAE;gBACL,SAAS,EAAE,IAAI,CAAC,EAAE;gBAClB,OAAO;aACV;YACD,IAAI,EAAE,kBAAkB;SACP,EAAE,mBAAmB,CAAC,CAAA;QAC3C,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAA;IACvC,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,WAAgC;QACpD,4CAA4C;QAC5C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAA4B;YACtE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YACjC,OAAO,EAAE;gBACL,SAAS,EAAE,IAAI,CAAC,EAAE;gBAClB,WAAW,EAAE,WAAW,IAAI,IAAI;aACnC;YACD,IAAI,EAAE,0BAA0B;SACP,EAAE,2BAA2B,CAAC,CAAA;QAE3D,OAAO,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAA;IAC3C,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,WAAgB,EAAE,OAAwB;QAC/D,IAAI,cAA6B,CAAA;QACjC,IAAI,UAA0B,CAAA;QAE9B,IAAI,WAAW,IAAI,IAAI,EAAE,CAAC;YACtB,cAAc,GAAG,IAAI,CAAC;YACtB,UAAU,GAAG,OAAyB,CAAC;QAC3C,CAAC;aAAM,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE,CAAC;YACzC,cAAc,GAAG,WAAW,CAAA;YAC5B,UAAU,GAAG,OAAyB,CAAC;QAC3C,CAAC;aAAM,CAAC;YACJ,6BAA6B;YAC7B,cAAc,GAAG,IAAI,CAAC;YACtB,UAAU,GAAG,WAA6B,CAAC;QAC/C,CAAC;QAED,OAAO,MAAM,IAAI,CAAC,uBAAuB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;IAC1E,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,WAA0B,EAAE,UAA0B;QAChF,MAAM,QAAQ,GAAG,IAAI,+CAAsB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;QAC9F,MAAM,QAAQ,CAAC,QAAQ,EAAE,CAAA;QACzB,OAAO,QAAQ,CAAA;IACnB,CAAC;CACJ;AAhED,wCAgEC","sourcesContent":["import { ContextHandler, DisplayMetadata, Listener, Channel } from \"@kite9/fdc3-standard\"\nimport { Context } from \"@kite9/fdc3-context\";\n\nimport { Messaging } from \"../Messaging\"\nimport { DefaultContextListener } from \"../listeners/DefaultContextListener\"\nimport { BrowserTypes } from \"@kite9/fdc3-schema\"\n\ntype BroadcastRequest = BrowserTypes.BroadcastRequest\ntype BroadcastResponse = BrowserTypes.BroadcastResponse\ntype GetCurrentContextResponse = BrowserTypes.GetCurrentContextResponse\ntype GetCurrentContextRequest = BrowserTypes.GetCurrentContextRequest\n\nexport class DefaultChannel implements Channel {\n\n    readonly messaging: Messaging\n    readonly id: string\n    readonly type: \"user\" | \"app\" | \"private\"\n    readonly displayMetadata?: DisplayMetadata | undefined;\n\n    constructor(messaging: Messaging, id: string, type: \"user\" | \"app\" | \"private\", displayMetadata?: DisplayMetadata) {\n        this.messaging = messaging\n        this.id = id\n        this.type = type\n        this.displayMetadata = displayMetadata\n    }\n\n    async broadcast(context: Context): Promise<void> {\n        const done = await this.messaging.exchange<BroadcastResponse>({\n            meta: this.messaging.createMeta(),\n            payload: {\n                channelId: this.id,\n                context\n            },\n            type: \"broadcastRequest\"\n        } as BroadcastRequest, 'broadcastResponse')\n        console.log(\"broadcast done\", done)\n    }\n\n    async getCurrentContext(contextType?: string | undefined): Promise<Context | null> {\n        // first, ensure channel state is up-to-date\n        const response = await this.messaging.exchange<GetCurrentContextResponse>({\n            meta: this.messaging.createMeta(),\n            payload: {\n                channelId: this.id,\n                contextType: contextType ?? null\n            },\n            type: \"getCurrentContextRequest\"\n        } as GetCurrentContextRequest, 'getCurrentContextResponse')\n\n        return response.payload.context ?? null\n    }\n\n    async addContextListener(contextType: any, handler?: ContextHandler): Promise<Listener> {\n        let theContextType: string | null\n        let theHandler: ContextHandler\n\n        if (contextType == null) {\n            theContextType = null;\n            theHandler = handler as ContextHandler;\n        } else if (typeof contextType === 'string') {\n            theContextType = contextType\n            theHandler = handler as ContextHandler;\n        } else {\n            // deprecated one-arg version\n            theContextType = null;\n            theHandler = contextType as ContextHandler;\n        }\n\n        return await this.addContextListenerInner(theContextType, theHandler);\n    }\n\n    async addContextListenerInner(contextType: string | null, theHandler: ContextHandler): Promise<Listener> {\n        const listener = new DefaultContextListener(this.messaging, this.id, contextType, theHandler);\n        await listener.register()\n        return listener\n    }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b17ee416f095a4269c9ddfa68138d5d51bef5a6a","contentHash":"c811bd80ddc7946b4a4ecde0523da44164b065e59e371bd5754c359b6daece67"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/DefaultContextListener.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/DefaultContextListener.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":27},"end":{"line":4,"column":56}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":94}},"4":{"start":{"line":11,"column":8},"end":{"line":11,"column":35}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":39}},"6":{"start":{"line":13,"column":8},"end":{"line":13,"column":39}},"7":{"start":{"line":16,"column":8},"end":{"line":26,"column":9}},"8":{"start":{"line":17,"column":12},"end":{"line":17,"column":34}},"9":{"start":{"line":18,"column":12},"end":{"line":18,"column":19}},"10":{"start":{"line":21,"column":12},"end":{"line":21,"column":40}},"11":{"start":{"line":22,"column":28},"end":{"line":22,"column":90}},"12":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"13":{"start":{"line":24,"column":16},"end":{"line":24,"column":38}},"14":{"start":{"line":29,"column":8},"end":{"line":31,"column":93}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":40}},"16":{"start":{"line":37,"column":0},"end":{"line":37,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":178},"end":{"line":14,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":33},"end":{"line":27,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":14},"end":{"line":32,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":14},"end":{"line":35,"column":5}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":60},"end":{"line":9,"column":90}},"type":"default-arg","locations":[{"start":{"line":9,"column":74},"end":{"line":9,"column":90}}],"line":9},"1":{"loc":{"start":{"line":9,"column":92},"end":{"line":9,"column":128}},"type":"default-arg","locations":[{"start":{"line":9,"column":108},"end":{"line":9,"column":128}}],"line":9},"2":{"loc":{"start":{"line":9,"column":130},"end":{"line":9,"column":176}},"type":"default-arg","locations":[{"start":{"line":9,"column":148},"end":{"line":9,"column":176}}],"line":9},"3":{"loc":{"start":{"line":16,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":26,"column":9}},{"start":{"line":16,"column":8},"end":{"line":26,"column":9}}],"line":16},"4":{"loc":{"start":{"line":22,"column":60},"end":{"line":22,"column":89}},"type":"binary-expr","locations":[{"start":{"line":22,"column":60},"end":{"line":22,"column":76}},{"start":{"line":22,"column":80},"end":{"line":22,"column":89}}],"line":22},"5":{"loc":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},{"start":{"line":23,"column":12},"end":{"line":25,"column":13}}],"line":23},"6":{"loc":{"start":{"line":29,"column":15},"end":{"line":31,"column":92}},"type":"binary-expr","locations":[{"start":{"line":29,"column":16},"end":{"line":29,"column":42}},{"start":{"line":30,"column":16},"end":{"line":30,"column":53}},{"start":{"line":31,"column":17},"end":{"line":31,"column":60}},{"start":{"line":31,"column":66},"end":{"line":31,"column":90}}],"line":29}},"s":{"0":1,"1":1,"2":1,"3":15,"4":15,"5":15,"6":15,"7":3,"8":1,"9":1,"10":2,"11":2,"12":2,"13":1,"14":23,"15":11,"16":1},"f":{"0":15,"1":3,"2":23,"3":11},"b":{"0":[15],"1":[15],"2":[15],"3":[1,2],"4":[2,0],"5":[1,1],"6":[23,13,11,6]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/DefaultContextListener.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/DefaultContextListener.ts"],"names":[],"mappings":";;;AAEA,yDAAsD;AAMtD,MAAa,sBAAuB,SAAQ,mCAAgC;IAEhE,SAAS,CAAe;IACf,WAAW,CAAQ;IACnB,WAAW,CAAe;IAE3C,YAAY,SAAoB,EAC5B,SAAwB,EACxB,WAA0B,EAC1B,OAAuB,EACvB,cAAsB,gBAAgB,EACtC,gBAAwB,oBAAoB,EAC5C,kBAA0B,4BAA4B;QACtD,KAAK,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE,eAAe,CAAC,CAAA;QACrF,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;QAC1B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAA;QAC9B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAA;IAClC,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,OAAuB;QACvC,IAAI,OAAO,IAAI,IAAI,EAAE,CAAC;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;YACrB,OAAM;QACV,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,EAAE,CAAA;YAC3B,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,IAAI,SAAS,CAAC,CAAA;YAC9E,IAAI,OAAO,EAAE,CAAC;gBACV,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;YACzB,CAAC;QACL,CAAC;IACL,CAAC;IAED,MAAM,CAAC,CAAiB;QACpB,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC;eAC5B,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;eACvC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;IACzF,CAAC;IAED,MAAM,CAAC,CAAM;QACT,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;IACnC,CAAC;CACJ;AAzCD,wDAyCC","sourcesContent":["import { ContextHandler, Channel } from \"@kite9/fdc3-standard\";\nimport { Messaging } from \"../Messaging\";\nimport { AbstractListener } from \"./AbstractListener\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\";\nimport { FollowingContextListener } from \"./FollowingContextListener\";\n\ntype BroadcastEvent = BrowserTypes.BroadcastEvent\n\nexport class DefaultContextListener extends AbstractListener<ContextHandler> implements FollowingContextListener {\n\n    private channelId: string | null\n    private readonly messageType: string\n    private readonly contextType: string | null\n\n    constructor(messaging: Messaging,\n        channelId: string | null,\n        contextType: string | null,\n        handler: ContextHandler,\n        messageType: string = \"broadcastEvent\",\n        subscribeType: string = \"addContextListener\",\n        unsubscribeType: string = \"contextListenerUnsubscribe\") {\n        super(messaging, { channelId, contextType }, handler, subscribeType, unsubscribeType)\n        this.channelId = channelId\n        this.messageType = messageType\n        this.contextType = contextType\n    }\n\n    async changeChannel(channel: Channel | null): Promise<void> {\n        if (channel == null) {\n            this.channelId = null\n            return\n        } else {\n            this.channelId = channel.id\n            const context = await channel.getCurrentContext(this.contextType ?? undefined)\n            if (context) {\n                this.handler(context)\n            }\n        }\n    }\n\n    filter(m: BroadcastEvent): boolean {\n        return (m.type == this.messageType)\n            && (m.payload.channelId == this.channelId)\n            && ((m.payload.context?.type == this.contextType) || (this.contextType == null));\n    }\n\n    action(m: any): void {\n        this.handler(m.payload.context)\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"92950bb8e868b66bbed519cfd3105fa78e0a7c4d","contentHash":"fec3659d1491bc344016a5a4361319956eacbd17ac606ad80d58ce89524f29c4"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/AbstractListener.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/AbstractListener.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":13,"column":9},"end":{"line":13,"column":13}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":35}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":45}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":43}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":47}},"8":{"start":{"line":23,"column":28},"end":{"line":23,"column":44}},"9":{"start":{"line":24,"column":29},"end":{"line":24,"column":46}},"10":{"start":{"line":26,"column":8},"end":{"line":44,"column":9}},"11":{"start":{"line":27,"column":12},"end":{"line":33,"column":14}},"12":{"start":{"line":37,"column":12},"end":{"line":43,"column":14}},"13":{"start":{"line":45,"column":25},"end":{"line":45,"column":89}},"14":{"start":{"line":46,"column":8},"end":{"line":46,"column":55}},"15":{"start":{"line":49,"column":8},"end":{"line":49,"column":43}},"16":{"start":{"line":50,"column":8},"end":{"line":50,"column":62}},"17":{"start":{"line":53,"column":19},"end":{"line":53,"column":70}},"18":{"start":{"line":54,"column":8},"end":{"line":54,"column":21}},"19":{"start":{"line":55,"column":8},"end":{"line":55,"column":38}},"20":{"start":{"line":58,"column":0},"end":{"line":58,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":84},"end":{"line":21,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":37},"end":{"line":47,"column":5}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":24},"end":{"line":51,"column":5}},"line":48},"3":{"name":"(anonymous_3)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":21},"end":{"line":56,"column":5}},"line":52}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":44,"column":9}},{"start":{"line":26,"column":8},"end":{"line":44,"column":9}}],"line":26},"1":{"loc":{"start":{"line":46,"column":15},"end":{"line":46,"column":54}},"type":"binary-expr","locations":[{"start":{"line":46,"column":15},"end":{"line":46,"column":46}},{"start":{"line":46,"column":50},"end":{"line":46,"column":54}}],"line":46}},"s":{"0":1,"1":1,"2":31,"3":31,"4":31,"5":31,"6":31,"7":31,"8":40,"9":40,"10":40,"11":9,"12":31,"13":40,"14":40,"15":9,"16":9,"17":31,"18":31,"19":31,"20":1},"f":{"0":31,"1":40,"2":9,"3":31},"b":{"0":[9,31],"1":[40,9]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/AbstractListener.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/AbstractListener.ts"],"names":[],"mappings":";;;AAGA;;;GAGG;AACH,MAAsB,gBAAgB;IAEzB,SAAS,CAAW;IACZ,aAAa,CAAQ;IACrB,eAAe,CAAQ;IACvB,cAAc,CAA+B;IAC9D,EAAE,GAAkB,IAAI,CAAA;IACf,OAAO,CAAG;IAEnB,YAAY,SAAoB,EAAE,cAA6C,EAAE,OAAU,EAAE,aAAqB,EAAE,eAAuB;QACvI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;QAC1B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAA;QACpC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAA;QAClC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAA;IAC1C,CAAC;IAMD,KAAK,CAAC,oBAAoB,CAAC,IAAY;QACnC,MAAM,WAAW,GAAG,IAAI,GAAG,SAAS,CAAA;QACpC,MAAM,YAAY,GAAG,IAAI,GAAG,UAAU,CAAA;QACtC,IAAI,mBAAwB,CAAA;QAC5B,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;YACV,mBAAmB,GAAG;gBAClB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;gBACjC,OAAO,EAAE;oBACL,YAAY,EAAE,IAAI,CAAC,EAAE;iBACxB;gBACD,IAAI,EAAE,WAAW;aACpB,CAAA;QACL,CAAC;aAAM,CAAC;YACJ,iCAAiC;YACjC,mBAAmB,GAAG;gBAClB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;gBACjC,OAAO,EAAE;oBACL,GAAG,IAAI,CAAC,cAAc;iBACzB;gBACD,IAAI,EAAE,WAAW;aACpB,CAAA;QACL,CAAC;QAED,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAM,mBAAmB,EAAE,YAAc,CAAC,CAAA;QACxF,OAAO,QAAQ,EAAE,OAAO,EAAE,YAAY,IAAI,IAAI,CAAA;IAElD,CAAC;IAED,KAAK,CAAC,WAAW;QACb,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,EAAI,CAAC,CAAA;QACpC,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;IACzD,CAAC;IAED,KAAK,CAAC,QAAQ;QACV,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,CAAG,CAAA;QAChE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAA;QACZ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IACjC,CAAC;CACJ;AA3DD,4CA2DC","sourcesContent":["import { Messaging } from \"../Messaging\"\nimport { RegisterableListener } from \"./RegisterableListener\"\n\n/**\n * Common to all listeners - they need to be registered and unregistered with messaging and also\n * send notification messsages when connected and disconnected\n */\nexport abstract class AbstractListener<X> implements RegisterableListener {\n\n    readonly messaging: Messaging\n    private readonly subscribeType: string\n    private readonly unsubscribeType: string\n    private readonly payloadDetails: Record<string, string | null>\n    id: string | null = null\n    readonly handler: X\n\n    constructor(messaging: Messaging, payloadDetails: Record<string, string | null>, handler: X, subscribeType: string, unsubscribeType: string) {\n        this.messaging = messaging\n        this.handler = handler\n        this.payloadDetails = payloadDetails\n        this.subscribeType = subscribeType\n        this.unsubscribeType = unsubscribeType\n    }\n\n    abstract filter(m: any): boolean\n\n    abstract action(m: any): void\n\n    async listenerNotification(type: string): Promise<string | null> {\n        const requestType = type + \"Request\"\n        const responseType = type + \"Response\"\n        var notificationMessage: any\n        if (this.id) {\n            notificationMessage = {\n                meta: this.messaging.createMeta(),\n                payload: {\n                    listenerUUID: this.id\n                },\n                type: requestType\n            }\n        } else {\n            // send subscription notification\n            notificationMessage = {\n                meta: this.messaging.createMeta(),\n                payload: {\n                    ...this.payloadDetails\n                },\n                type: requestType\n            }\n        }\n\n        const response = await this.messaging.exchange<any>(notificationMessage, responseType!!)\n        return response?.payload?.listenerUUID ?? null\n\n    }\n\n    async unsubscribe(): Promise<void> {\n        this.messaging.unregister(this.id!!)\n        await this.listenerNotification(this.unsubscribeType)\n    }\n\n    async register() {\n        const id = await this.listenerNotification(this.subscribeType)!!\n        this.id = id\n        this.messaging.register(this)\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f82c987163d030fcd70ffa8f4554d2ed66b38170","contentHash":"fe023b360edc5c4492c5f3176b2296def10b5f863b903dd0f806f6d14ed35a43"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/intents/DefaultIntentSupport.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/intents/DefaultIntentSupport.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":34},"end":{"line":5,"column":70}},"4":{"start":{"line":6,"column":32},"end":{"line":6,"column":77}},"5":{"start":{"line":7,"column":25},"end":{"line":7,"column":62}},"6":{"start":{"line":8,"column":32},"end":{"line":8,"column":76}},"7":{"start":{"line":10,"column":19},"end":{"line":10,"column":41}},"8":{"start":{"line":11,"column":4},"end":{"line":29,"column":5}},"9":{"start":{"line":12,"column":18},"end":{"line":12,"column":32}},"10":{"start":{"line":13,"column":8},"end":{"line":20,"column":9}},"11":{"start":{"line":15,"column":16},"end":{"line":15,"column":125}},"12":{"start":{"line":15,"column":48},"end":{"line":15,"column":123}},"13":{"start":{"line":19,"column":16},"end":{"line":19,"column":138}},"14":{"start":{"line":19,"column":48},"end":{"line":19,"column":136}},"15":{"start":{"line":22,"column":9},"end":{"line":29,"column":5}},"16":{"start":{"line":23,"column":8},"end":{"line":25,"column":11}},"17":{"start":{"line":24,"column":12},"end":{"line":24,"column":36}},"18":{"start":{"line":28,"column":8},"end":{"line":28,"column":53}},"19":{"start":{"line":28,"column":41},"end":{"line":28,"column":50}},"20":{"start":{"line":35,"column":8},"end":{"line":35,"column":35}},"21":{"start":{"line":36,"column":8},"end":{"line":36,"column":45}},"22":{"start":{"line":39,"column":27},"end":{"line":47,"column":9}},"23":{"start":{"line":48,"column":23},"end":{"line":48,"column":86}},"24":{"start":{"line":49,"column":26},"end":{"line":49,"column":50}},"25":{"start":{"line":50,"column":8},"end":{"line":58,"column":9}},"26":{"start":{"line":51,"column":12},"end":{"line":51,"column":70}},"27":{"start":{"line":54,"column":12},"end":{"line":57,"column":14}},"28":{"start":{"line":61,"column":27},"end":{"line":67,"column":9}},"29":{"start":{"line":68,"column":23},"end":{"line":68,"column":96}},"30":{"start":{"line":69,"column":27},"end":{"line":69,"column":52}},"31":{"start":{"line":70,"column":8},"end":{"line":75,"column":9}},"32":{"start":{"line":71,"column":12},"end":{"line":71,"column":70}},"33":{"start":{"line":74,"column":12},"end":{"line":74,"column":30}},"34":{"start":{"line":78,"column":19},"end":{"line":79,"column":65}},"35":{"start":{"line":78,"column":54},"end":{"line":79,"column":63}},"36":{"start":{"line":80,"column":19},"end":{"line":80,"column":64}},"37":{"start":{"line":81,"column":8},"end":{"line":81,"column":18}},"38":{"start":{"line":84,"column":21},"end":{"line":84,"column":48}},"39":{"start":{"line":85,"column":27},"end":{"line":93,"column":9}},"40":{"start":{"line":94,"column":28},"end":{"line":94,"column":64}},"41":{"start":{"line":95,"column":23},"end":{"line":95,"column":138}},"42":{"start":{"line":96,"column":8},"end":{"line":110,"column":9}},"43":{"start":{"line":98,"column":27},"end":{"line":98,"column":104}},"44":{"start":{"line":99,"column":12},"end":{"line":104,"column":13}},"45":{"start":{"line":100,"column":16},"end":{"line":100,"column":71}},"46":{"start":{"line":103,"column":16},"end":{"line":103,"column":76}},"47":{"start":{"line":108,"column":28},"end":{"line":108,"column":61}},"48":{"start":{"line":109,"column":12},"end":{"line":109,"column":136}},"49":{"start":{"line":113,"column":27},"end":{"line":120,"column":9}},"50":{"start":{"line":121,"column":30},"end":{"line":121,"column":66}},"51":{"start":{"line":122,"column":25},"end":{"line":122,"column":150}},"52":{"start":{"line":123,"column":8},"end":{"line":136,"column":9}},"53":{"start":{"line":125,"column":27},"end":{"line":125,"column":103}},"54":{"start":{"line":126,"column":12},"end":{"line":131,"column":13}},"55":{"start":{"line":127,"column":16},"end":{"line":127,"column":78}},"56":{"start":{"line":130,"column":16},"end":{"line":130,"column":76}},"57":{"start":{"line":134,"column":28},"end":{"line":134,"column":61}},"58":{"start":{"line":135,"column":12},"end":{"line":135,"column":136}},"59":{"start":{"line":139,"column":20},"end":{"line":139,"column":102}},"60":{"start":{"line":140,"column":8},"end":{"line":140,"column":29}},"61":{"start":{"line":141,"column":8},"end":{"line":141,"column":19}},"62":{"start":{"line":144,"column":0},"end":{"line":144,"column":52}}},"fnMap":{"0":{"name":"convertIntentResult","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":28}},"loc":{"start":{"line":9,"column":43},"end":{"line":30,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":35},"end":{"line":15,"column":36}},"loc":{"start":{"line":15,"column":48},"end":{"line":15,"column":123}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":35},"end":{"line":19,"column":36}},"loc":{"start":{"line":19,"column":48},"end":{"line":19,"column":136}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":27},"end":{"line":23,"column":28}},"loc":{"start":{"line":23,"column":40},"end":{"line":25,"column":9}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":27},"end":{"line":28,"column":28}},"loc":{"start":{"line":28,"column":41},"end":{"line":28,"column":50}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":43},"end":{"line":37,"column":5}},"line":34},"6":{"name":"(anonymous_6)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":50},"end":{"line":59,"column":5}},"line":38},"7":{"name":"(anonymous_7)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":40},"end":{"line":76,"column":5}},"line":60},"8":{"name":"(anonymous_8)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":42},"end":{"line":82,"column":5}},"line":77},"9":{"name":"(anonymous_9)","decl":{"start":{"line":78,"column":48},"end":{"line":78,"column":49}},"loc":{"start":{"line":78,"column":54},"end":{"line":79,"column":63}},"line":78},"10":{"name":"(anonymous_10)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":44},"end":{"line":111,"column":5}},"line":83},"11":{"name":"(anonymous_11)","decl":{"start":{"line":112,"column":4},"end":{"line":112,"column":5}},"loc":{"start":{"line":112,"column":46},"end":{"line":137,"column":5}},"line":112},"12":{"name":"(anonymous_12)","decl":{"start":{"line":138,"column":4},"end":{"line":138,"column":5}},"loc":{"start":{"line":138,"column":45},"end":{"line":142,"column":5}},"line":138}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":29,"column":5}},{"start":{"line":11,"column":4},"end":{"line":29,"column":5}}],"line":11},"1":{"loc":{"start":{"line":13,"column":8},"end":{"line":20,"column":9}},"type":"switch","locations":[{"start":{"line":14,"column":12},"end":{"line":15,"column":125}},{"start":{"line":16,"column":12},"end":{"line":16,"column":23}},{"start":{"line":17,"column":12},"end":{"line":17,"column":24}},{"start":{"line":18,"column":12},"end":{"line":19,"column":138}}],"line":13},"2":{"loc":{"start":{"line":22,"column":9},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":9},"end":{"line":29,"column":5}},{"start":{"line":22,"column":9},"end":{"line":29,"column":5}}],"line":22},"3":{"loc":{"start":{"line":50,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":58,"column":9}},{"start":{"line":50,"column":8},"end":{"line":58,"column":9}}],"line":50},"4":{"loc":{"start":{"line":70,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":75,"column":9}},{"start":{"line":70,"column":8},"end":{"line":75,"column":9}}],"line":70},"5":{"loc":{"start":{"line":78,"column":54},"end":{"line":79,"column":63}},"type":"binary-expr","locations":[{"start":{"line":78,"column":55},"end":{"line":78,"column":92}},{"start":{"line":79,"column":13},"end":{"line":79,"column":62}}],"line":78},"6":{"loc":{"start":{"line":96,"column":8},"end":{"line":110,"column":9}},"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":110,"column":9}},{"start":{"line":96,"column":8},"end":{"line":110,"column":9}}],"line":96},"7":{"loc":{"start":{"line":99,"column":12},"end":{"line":104,"column":13}},"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":104,"column":13}},{"start":{"line":99,"column":12},"end":{"line":104,"column":13}}],"line":99},"8":{"loc":{"start":{"line":123,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":136,"column":9}},{"start":{"line":123,"column":8},"end":{"line":136,"column":9}}],"line":123},"9":{"loc":{"start":{"line":126,"column":12},"end":{"line":131,"column":13}},"type":"if","locations":[{"start":{"line":126,"column":12},"end":{"line":131,"column":13}},{"start":{"line":126,"column":12},"end":{"line":131,"column":13}}],"line":126}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":5,"8":5,"9":3,"10":3,"11":1,"12":1,"13":2,"14":2,"15":2,"16":1,"17":1,"18":1,"19":1,"20":75,"21":75,"22":4,"23":4,"24":4,"25":4,"26":1,"27":3,"28":2,"29":2,"30":2,"31":2,"32":1,"33":1,"34":16,"35":22,"36":5,"37":5,"38":13,"39":13,"40":13,"41":13,"42":11,"43":2,"44":2,"45":1,"46":1,"47":9,"48":9,"49":3,"50":3,"51":3,"52":3,"53":2,"54":2,"55":1,"56":1,"57":1,"58":1,"59":4,"60":4,"61":4,"62":1},"f":{"0":5,"1":1,"2":2,"3":1,"4":1,"5":75,"6":4,"7":2,"8":16,"9":22,"10":13,"11":3,"12":4},"b":{"0":[3,2],"1":[1,1,2,2],"2":[1,1],"3":[1,3],"4":[1,1],"5":[22,5],"6":[2,9],"7":[1,1],"8":[2,1],"9":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/intents/DefaultIntentSupport.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/intents/DefaultIntentSupport.ts"],"names":[],"mappings":"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","sourcesContent":["import { AppIntent, AppIdentifier, IntentResolution, IntentHandler, Listener, ResolveError, IntentResult, IntentResolver, IntentResolutionChoice } from \"@kite9/fdc3-standard\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\";\nimport { IntentSupport } from \"./IntentSupport\";\nimport { Messaging } from \"../Messaging\";\nimport { DefaultIntentResolution } from \"./DefaultIntentResolution\";\nimport { DefaultIntentListener } from \"../listeners/DefaultIntentListener\";\nimport { DefaultChannel } from \"../channels/DefaultChannel\";\nimport { DefaultPrivateChannel } from \"../channels/DefaultPrivateChannel\";\nimport { Context } from \"@kite9/fdc3-context\";\n\ntype RaiseIntentForContextRequest = BrowserTypes.RaiseIntentForContextRequest\ntype RaiseIntentForContextResponse = BrowserTypes.RaiseIntentForContextResponse\ntype FindIntentResponse = BrowserTypes.FindIntentResponse\ntype AddContextListenerRequestMeta = BrowserTypes.AddContextListenerRequestMeta\ntype FindIntentsByContextRequest = BrowserTypes.FindIntentsByContextRequest\ntype FindIntentsByContextResponse = BrowserTypes.FindIntentsByContextResponse\ntype RaiseIntentRequest = BrowserTypes.RaiseIntentRequest\ntype RaiseIntentResultResponse = BrowserTypes.RaiseIntentResultResponse\ntype RaiseIntentResponse = BrowserTypes.RaiseIntentResponse\ntype FindIntentRequest = BrowserTypes.FindIntentRequest\n\nfunction convertIntentResult(m: RaiseIntentResultResponse, messaging: Messaging): Promise<IntentResult> {\n    const result = m.payload.intentResult!!\n    if (result.channel) {\n        const c = result.channel!!;\n        switch (c.type) {\n            case 'private':\n                return new Promise((resolve) => resolve(new DefaultPrivateChannel(messaging, c.id)))\n            case 'app':\n            case 'user':\n            default:\n                return new Promise((resolve) => resolve(new DefaultChannel(messaging, c.id, c.type, c.displayMetadata)))\n        }\n    } else if (result.context) {\n        return new Promise((resolve) => {\n            resolve(result.context)\n        })\n    } else {\n        return new Promise((resolve) => (resolve()))\n    }\n}\n\nexport class DefaultIntentSupport implements IntentSupport {\n\n    readonly messaging: Messaging\n    readonly intentResolver: IntentResolver\n\n    constructor(messaging: Messaging, intentResolver: IntentResolver) {\n        this.messaging = messaging\n        this.intentResolver = intentResolver\n    }\n\n    async findIntent(intent: string, context: Context, resultType: string | undefined): Promise<AppIntent> {\n        const messageOut: FindIntentRequest = {\n            type: \"findIntentRequest\",\n            payload: {\n                intent,\n                context,\n                resultType\n            },\n            meta: this.messaging.createMeta() as any /* ISSUE: #1275 */\n        }\n\n        const result = await this.messaging.exchange(messageOut, \"findIntentResponse\") as FindIntentResponse\n        const appIntent = result.payload.appIntent!!\n        if (appIntent.apps.length == 0) {\n            throw new Error(ResolveError.NoAppsFound)\n        } else {\n            return {\n                intent: appIntent.intent as any /* ISSUE: 1295 */,\n                apps: appIntent.apps\n            }\n        }\n    }\n\n    async findIntentsByContext(context: Context): Promise<AppIntent[]> {\n        const messageOut: FindIntentsByContextRequest = {\n            type: \"findIntentsByContextRequest\",\n            payload: {\n                context\n            },\n            meta: this.messaging.createMeta() as AddContextListenerRequestMeta /* ISSUE: #1275 */\n        }\n\n        const result = await this.messaging.exchange(messageOut, \"findIntentsByContextResponse\") as FindIntentsByContextResponse\n        const appIntents = result.payload.appIntents!!\n        if (appIntents.length == 0) {\n            throw new Error(ResolveError.NoAppsFound)\n        } else {\n            return appIntents\n        }\n\n    }\n\n    private async createResultPromise(messageOut: RaiseIntentRequest | RaiseIntentForContextRequest): Promise<IntentResult> {\n        const rp = await this.messaging.waitFor<RaiseIntentResultResponse>(m => (\n            (m.type == 'raiseIntentResultResponse') &&\n            (m.meta.requestUuid == messageOut.meta.requestUuid)))\n\n\n        const ir = await convertIntentResult(rp, this.messaging)\n        return ir\n    }\n\n    async raiseIntent(intent: string, context: Context, app: AppIdentifier): Promise<IntentResolution> {\n        const meta = this.messaging.createMeta()\n        const messageOut: RaiseIntentRequest = {\n            type: \"raiseIntentRequest\",\n            payload: {\n                intent,\n                context,\n                app: app\n            },\n            meta: meta as any /* ISSUE: #1275 */\n        }\n\n        var resultPromise = this.createResultPromise(messageOut)\n        var response = await this.messaging.exchange(messageOut, \"raiseIntentResponse\", ResolveError.IntentDeliveryFailed) as RaiseIntentResponse\n\n        if (response.payload.appIntent) {\n            // we need to invoke the resolver\n            const result: IntentResolutionChoice | void = await this.intentResolver.chooseIntent([response.payload.appIntent as any], context)\n            if (result) {\n                return this.raiseIntent(intent, context, result.appId)\n            } else {\n                throw new Error(ResolveError.UserCancelled)\n            }\n        } else {\n            // single intent\n            const details = response.payload.intentResolution!!\n            return new DefaultIntentResolution(\n                this.messaging,\n                resultPromise,\n                details.source,\n                details.intent\n            )\n        } \n    }\n\n    async raiseIntentForContext(context: Context, app?: AppIdentifier | undefined): Promise<IntentResolution> {\n        const messageOut: RaiseIntentForContextRequest = {\n            type: \"raiseIntentForContextRequest\",\n            payload: {\n                context,\n                app: app\n            },\n            meta: this.messaging.createMeta() as any /* ISSUE: #1275 */\n        }\n\n        const resultPromise = this.createResultPromise(messageOut)\n        const response = await this.messaging.exchange(messageOut, \"raiseIntentForContextResponse\", ResolveError.IntentDeliveryFailed) as RaiseIntentForContextResponse\n        if (response.payload.appIntents) {\n            // we need to invoke the resolver\n            const result: IntentResolutionChoice | void = await this.intentResolver.chooseIntent(response.payload.appIntents as any[], context)\n            if (result) {\n                return this.raiseIntent(result.intent, context, result.appId)\n            } else {\n                throw new Error(ResolveError.UserCancelled)\n            }\n        } else {\n            const details = response.payload.intentResolution!!\n            return new DefaultIntentResolution(\n                this.messaging,\n                resultPromise,\n                details.source,\n                details.intent\n            )\n        }\n    }\n\n    async addIntentListener(intent: string, handler: IntentHandler): Promise<Listener> {\n        const out = new DefaultIntentListener(this.messaging, intent, handler);\n        await out.register()\n        return out\n    }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"66a69df6ab614f1472bbf612dacd415b93887a6f","contentHash":"331a62060a583e9d98afc2ced0b2c95edff7433b7cdf1aa284f4e2eeed095e49"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/intents/DefaultIntentResolution.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/intents/DefaultIntentResolution.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":35}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":29}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":29}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":27}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":51},"end":{"line":14,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":16},"end":{"line":17,"column":5}},"line":15}},"branchMap":{},"s":{"0":1,"1":1,"2":10,"3":10,"4":10,"5":10,"6":5,"7":1},"f":{"0":10,"1":5},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/intents/DefaultIntentResolution.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/intents/DefaultIntentResolution.ts"],"names":[],"mappings":";;;AAGA,MAAa,uBAAuB;IAEvB,SAAS,CAAW;IACpB,MAAM,CAAgB;IACtB,MAAM,CAAS;IACf,MAAM,CAAuB;IAEtC,YAAY,SAAoB,EAAE,MAA6B,EAAE,MAAqB,EAAE,MAAc;QAClG,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;QAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACxB,CAAC;IAED,SAAS;QACL,OAAO,IAAI,CAAC,MAAM,CAAA;IACtB,CAAC;CACJ;AAjBD,0DAiBC","sourcesContent":["import { AppIdentifier, IntentResolution, IntentResult } from \"@kite9/fdc3-standard\";\nimport { Messaging } from \"../Messaging\";\n\nexport class DefaultIntentResolution implements IntentResolution {\n\n    readonly messaging: Messaging\n    readonly source: AppIdentifier;\n    readonly intent: string;\n    readonly result: Promise<IntentResult>\n\n    constructor(messaging: Messaging, result: Promise<IntentResult>, source: AppIdentifier, intent: string) {\n        this.messaging = messaging\n        this.result = result\n        this.source = source\n        this.intent = intent\n    }\n\n    getResult(): Promise<IntentResult> {\n        return this.result\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"854e4bd8351571c0ec20d90798d6f3ff8a4f2485","contentHash":"42c3d29724efde97d6d8214fa076bb35db15bcb7ea34c62557f1d36caf807a10"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/DefaultIntentListener.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/DefaultIntentListener.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":27},"end":{"line":4,"column":56}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":95}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":29}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":78}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":37}},"7":{"start":{"line":16,"column":21},"end":{"line":18,"column":10}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":41}},"9":{"start":{"line":22,"column":20},"end":{"line":35,"column":9}},"10":{"start":{"line":36,"column":8},"end":{"line":36,"column":33}},"11":{"start":{"line":39,"column":20},"end":{"line":50,"column":9}},"12":{"start":{"line":51,"column":8},"end":{"line":51,"column":19}},"13":{"start":{"line":54,"column":8},"end":{"line":63,"column":9}},"14":{"start":{"line":56,"column":12},"end":{"line":56,"column":114}},"15":{"start":{"line":60,"column":12},"end":{"line":62,"column":15}},"16":{"start":{"line":61,"column":16},"end":{"line":61,"column":111}},"17":{"start":{"line":66,"column":0},"end":{"line":66,"column":54}},"18":{"start":{"line":68,"column":4},"end":{"line":72,"column":5}},"19":{"start":{"line":69,"column":8},"end":{"line":71,"column":10}},"20":{"start":{"line":73,"column":4},"end":{"line":90,"column":5}},"21":{"start":{"line":78,"column":12},"end":{"line":84,"column":14}},"22":{"start":{"line":87,"column":12},"end":{"line":89,"column":14}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":43},"end":{"line":10,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":14},"end":{"line":13,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":14},"end":{"line":20,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":28},"end":{"line":37,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":38},"end":{"line":52,"column":5}},"line":38},"5":{"name":"(anonymous_5)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":32},"end":{"line":64,"column":5}},"line":53},"6":{"name":"(anonymous_6)","decl":{"start":{"line":60,"column":29},"end":{"line":60,"column":30}},"loc":{"start":{"line":60,"column":35},"end":{"line":62,"column":13}},"line":60},"7":{"name":"convertIntentResult","decl":{"start":{"line":67,"column":9},"end":{"line":67,"column":28}},"loc":{"start":{"line":67,"column":43},"end":{"line":91,"column":1}},"line":67}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":15},"end":{"line":12,"column":77}},"type":"binary-expr","locations":[{"start":{"line":12,"column":16},"end":{"line":12,"column":39}},{"start":{"line":12,"column":45},"end":{"line":12,"column":76}}],"line":12},"1":{"loc":{"start":{"line":54,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":63,"column":9}},{"start":{"line":54,"column":8},"end":{"line":63,"column":9}}],"line":54},"2":{"loc":{"start":{"line":68,"column":4},"end":{"line":72,"column":5}},"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":72,"column":5}},{"start":{"line":68,"column":4},"end":{"line":72,"column":5}}],"line":68},"3":{"loc":{"start":{"line":73,"column":4},"end":{"line":90,"column":5}},"type":"switch","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":20}},{"start":{"line":75,"column":8},"end":{"line":75,"column":19}},{"start":{"line":76,"column":8},"end":{"line":84,"column":14}},{"start":{"line":85,"column":8},"end":{"line":89,"column":14}}],"line":73}},"s":{"0":1,"1":1,"2":1,"3":4,"4":4,"5":8,"6":4,"7":4,"8":4,"9":4,"10":4,"11":4,"12":4,"13":4,"14":1,"15":3,"16":3,"17":1,"18":4,"19":2,"20":2,"21":1,"22":1},"f":{"0":4,"1":8,"2":4,"3":4,"4":4,"5":4,"6":3,"7":4},"b":{"0":[8,4],"1":[1,3],"2":[2,2],"3":[0,0,1,1]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/DefaultIntentListener.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/DefaultIntentListener.ts"],"names":[],"mappings":"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","sourcesContent":["import { IntentHandler, IntentResult, AppIdentifier } from \"@kite9/fdc3-standard\";\nimport { Context } from \"@kite9/fdc3-context\";\nimport { Messaging } from \"../Messaging\";\nimport { AbstractListener } from \"./AbstractListener\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\";\n\ntype RaiseIntentResponse = BrowserTypes.RaiseIntentResponse\ntype IntentResultResponse = BrowserTypes.IntentResultResponse\ntype BridgeIntentResult = BrowserTypes.IntentResult\ntype IntentEvent = BrowserTypes.IntentEvent\ntype IntentResultRequest = BrowserTypes.IntentResultRequest\n\nexport class DefaultIntentListener extends AbstractListener<IntentHandler> {\n\n    readonly intent: string\n\n    constructor(messaging: Messaging, intent: string, action: IntentHandler) {\n        super(messaging,\n            { intent },\n            action,\n            \"addIntentListener\",\n            \"intentListenerUnsubscribe\")\n\n        this.intent = intent\n    }\n\n    filter(m: IntentEvent): boolean {\n        return (m.type == 'intentEvent') && (m.payload.intent == this.intent)\n    }\n\n    action(m: IntentEvent): void {\n        this.handleIntentResponse(m)\n\n        const done = this.handler(m.payload.context, {\n            source: m.payload.originatingApp as AppIdentifier\n        })\n\n        this.handleIntentResult(done, m);\n    }\n\n    private handleIntentResponse(m: IntentEvent) {\n        const out: RaiseIntentResponse = {\n            type: \"raiseIntentResponse\",\n            meta: {\n                responseUuid: this.messaging.createUUID(),\n                requestUuid: m.meta.eventUuid,\n                timestamp: new Date()\n            },\n            payload: {\n                intentResolution: {\n                    intent: m.payload.intent,\n                    source: this.messaging.getSource()\n                }\n            }\n        };\n        this.messaging.post(out);\n    }\n\n    private intentResultRequestMessage(ir: IntentResult, m: IntentEvent): IntentResultRequest {\n        const out: IntentResultRequest = {\n            type: \"intentResultRequest\",\n            meta: {\n                requestUuid: m.meta.eventUuid,\n                timestamp: new Date()\n            },\n            payload: {\n                intentResult: convertIntentResult(ir),\n                intentEventUuid: m.meta.eventUuid,\n                raiseIntentRequestUuid: m.payload.raiseIntentRequestUuid\n            }\n        };\n\n        return out\n    }\n\n    private handleIntentResult(done: Promise<IntentResult> | void, m: IntentEvent) {\n        if (done == null) {\n            // send an empty intent result response\n            return this.messaging.exchange<IntentResultResponse>(this.intentResultRequestMessage(undefined, m), \"intentResultResponse\");\n        } else {\n            // respond after promise completes\n            return done.then(ir => {\n                return this.messaging.exchange<IntentResultResponse>(this.intentResultRequestMessage(ir, m), \"intentResultResponse\");\n            });\n        }\n    }\n}\n\nfunction convertIntentResult(intentResult: IntentResult): BridgeIntentResult {\n    if (intentResult == null) {\n        return {\n            // empty result\n        }\n    }\n    switch (intentResult.type) {\n        case 'user':\n        case 'app':\n        case 'private':\n            // it's a channel\n            return {\n                channel: {\n                    type: intentResult.type,\n                    id: intentResult.id as string,\n                    displayMetadata: intentResult.displayMetadata\n                }\n            }\n        default:\n            // it's a context\n            return {\n                context: intentResult as Context\n            }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f601a358fe8dda9b21407d8861b1d43207299a9c","contentHash":"9c465059c501188b73adf769db32310fa4123393d98d79841c37ce8b1ea6bbc1"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/channels/DefaultPrivateChannel.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/channels/DefaultPrivateChannel.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":38},"end":{"line":5,"column":89}},"4":{"start":{"line":6,"column":33},"end":{"line":6,"column":79}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":40}},"6":{"start":{"line":13,"column":12},"end":{"line":18,"column":14}},"7":{"start":{"line":14,"column":16},"end":{"line":17,"column":19}},"8":{"start":{"line":21,"column":12},"end":{"line":25,"column":14}},"9":{"start":{"line":22,"column":16},"end":{"line":24,"column":19}},"10":{"start":{"line":27,"column":8},"end":{"line":42,"column":9}},"11":{"start":{"line":28,"column":12},"end":{"line":41,"column":13}},"12":{"start":{"line":30,"column":30},"end":{"line":30,"column":170}},"13":{"start":{"line":31,"column":20},"end":{"line":31,"column":39}},"14":{"start":{"line":32,"column":20},"end":{"line":32,"column":29}},"15":{"start":{"line":34,"column":30},"end":{"line":34,"column":163}},"16":{"start":{"line":35,"column":20},"end":{"line":35,"column":39}},"17":{"start":{"line":36,"column":20},"end":{"line":36,"column":29}},"18":{"start":{"line":38,"column":30},"end":{"line":38,"column":144}},"19":{"start":{"line":39,"column":20},"end":{"line":39,"column":39}},"20":{"start":{"line":40,"column":20},"end":{"line":40,"column":29}},"21":{"start":{"line":43,"column":8},"end":{"line":43,"column":59}},"22":{"start":{"line":46,"column":18},"end":{"line":46,"column":141}},"23":{"start":{"line":47,"column":8},"end":{"line":47,"column":21}},"24":{"start":{"line":48,"column":8},"end":{"line":48,"column":17}},"25":{"start":{"line":51,"column":18},"end":{"line":51,"column":134}},"26":{"start":{"line":52,"column":8},"end":{"line":52,"column":21}},"27":{"start":{"line":53,"column":8},"end":{"line":53,"column":17}},"28":{"start":{"line":56,"column":18},"end":{"line":56,"column":117}},"29":{"start":{"line":57,"column":8},"end":{"line":57,"column":21}},"30":{"start":{"line":58,"column":8},"end":{"line":58,"column":17}},"31":{"start":{"line":61,"column":8},"end":{"line":67,"column":47}},"32":{"start":{"line":70,"column":25},"end":{"line":70,"column":126}},"33":{"start":{"line":71,"column":8},"end":{"line":71,"column":34}},"34":{"start":{"line":72,"column":8},"end":{"line":72,"column":24}},"35":{"start":{"line":75,"column":0},"end":{"line":75,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":31},"end":{"line":10,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":42},"end":{"line":44,"column":5}},"line":11},"2":{"name":"wrapEventHandlerString","decl":{"start":{"line":12,"column":17},"end":{"line":12,"column":39}},"loc":{"start":{"line":12,"column":42},"end":{"line":19,"column":9}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":19},"end":{"line":13,"column":20}},"loc":{"start":{"line":13,"column":26},"end":{"line":18,"column":13}},"line":13},"4":{"name":"wrapEventHandlerVoid","decl":{"start":{"line":20,"column":17},"end":{"line":20,"column":37}},"loc":{"start":{"line":20,"column":40},"end":{"line":26,"column":9}},"line":20},"5":{"name":"(anonymous_5)","decl":{"start":{"line":21,"column":19},"end":{"line":21,"column":20}},"loc":{"start":{"line":21,"column":25},"end":{"line":25,"column":13}},"line":21},"6":{"name":"(anonymous_6)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":34},"end":{"line":49,"column":5}},"line":45},"7":{"name":"(anonymous_7)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":27},"end":{"line":54,"column":5}},"line":50},"8":{"name":"(anonymous_8)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":26},"end":{"line":59,"column":5}},"line":55},"9":{"name":"(anonymous_9)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":23},"end":{"line":68,"column":5}},"line":60},"10":{"name":"(anonymous_10)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":59},"end":{"line":73,"column":5}},"line":69}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":42,"column":9}},{"start":{"line":27,"column":8},"end":{"line":42,"column":9}}],"line":27},"1":{"loc":{"start":{"line":28,"column":12},"end":{"line":41,"column":13}},"type":"switch","locations":[{"start":{"line":29,"column":16},"end":{"line":32,"column":29}},{"start":{"line":33,"column":16},"end":{"line":36,"column":29}},{"start":{"line":37,"column":16},"end":{"line":40,"column":29}}],"line":28}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":17,"6":4,"7":2,"8":2,"9":1,"10":6,"11":6,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":0,"22":2,"23":2,"24":2,"25":2,"26":2,"27":2,"28":2,"29":2,"30":2,"31":1,"32":2,"33":2,"34":2,"35":1},"f":{"0":17,"1":6,"2":4,"3":2,"4":2,"5":1,"6":2,"7":2,"8":2,"9":1,"10":2},"b":{"0":[6,0],"1":[2,2,2]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/channels/DefaultPrivateChannel.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/channels/DefaultPrivateChannel.ts"],"names":[],"mappings":"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","sourcesContent":["import { ApiEvent, ContextHandler, EventHandler, Listener, PrivateChannel, PrivateChannelEventTypes } from \"@kite9/fdc3-standard\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\";\nimport { DefaultChannel } from \"./DefaultChannel\";\nimport { Messaging } from \"../Messaging\";\nimport { PrivateChannelEventListenerType, PrivateChannelEventListenerVoid } from \"../listeners/PrivateChannelEventListener\";\nimport { DefaultContextListener } from \"../listeners/DefaultContextListener\";\n\ntype PrivateChannelDisconnectRequest = BrowserTypes.PrivateChannelDisconnectRequest\ntype PrivateChannelDisconnectResponse = BrowserTypes.PrivateChannelDisconnectResponse\n\nexport class DefaultPrivateChannel extends DefaultChannel implements PrivateChannel {\n\n    constructor(messaging: Messaging, id: string) {\n        super(messaging, id, \"private\")\n    }\n\n    async addEventListener(type: PrivateChannelEventTypes | null, handler: EventHandler): Promise<Listener> {\n\n        function wrapEventHandlerString(): (m: string) => void {\n            return (m: string) => {\n                handler({\n                    type,\n                    details: m\n                } as ApiEvent)\n            }\n        }\n\n        function wrapEventHandlerVoid(): () => void {\n            return () => {\n                handler({\n                    type\n                } as ApiEvent)\n            }\n        }\n\n        if (type) {\n            switch (type) {\n                case \"addContextListener\":\n                    const a = new PrivateChannelEventListenerType(this.messaging, this.id, \"onAddContextListener\", wrapEventHandlerString());\n                    await a.register()\n                    return a;\n                case \"unsubscribe\":\n                    const u = new PrivateChannelEventListenerType(this.messaging, this.id, \"onUnsubscribe\", wrapEventHandlerString());\n                    await u.register()\n                    return u;\n                case \"disconnect\":\n                    const d = new PrivateChannelEventListenerVoid(this.messaging, this.id, wrapEventHandlerVoid());\n                    await d.register()\n                    return d;\n            }\n        }\n\n        throw new Error(\"Unsupported event type: \" + type)\n    }\n\n    onAddContextListener(handler: (contextType?: string | undefined) => void): Listener {\n        const l = new PrivateChannelEventListenerType(this.messaging, this.id, \"onAddContextListener\", handler);\n        l.register()\n        return l;\n    }\n\n    onUnsubscribe(handler: (contextType?: string | undefined) => void): Listener {\n        const l = new PrivateChannelEventListenerType(this.messaging, this.id, \"onUnsubscribe\", handler);\n        l.register()\n        return l;\n    }\n\n    onDisconnect(handler: () => void): Listener {\n        const l = new PrivateChannelEventListenerVoid(this.messaging, this.id, handler);\n        l.register()\n        return l;\n    }\n\n    async disconnect(): Promise<void> {\n        await this.messaging.exchange<PrivateChannelDisconnectResponse>({\n            meta: this.messaging.createMeta(),\n            payload: {\n                channelId: this.id,\n            },\n            type: \"privateChannelDisconnectRequest\"\n        } as PrivateChannelDisconnectRequest, 'privateChannelDisconnectResponse')\n    }\n\n    async addContextListenerInner(contextType: string | null, theHandler: ContextHandler): Promise<Listener> {\n        const listener = new DefaultContextListener(this.messaging, this.id, contextType, theHandler);\n        await listener.register()\n        return listener\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"615459540b02d2dd7bfa4570c52c9b7794110a1f","contentHash":"ed33b5ea57d6ff6f47bea7f66081d2c68ccf9ff9c04984ba90fa4a37461f2cda"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/PrivateChannelEventListener.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/PrivateChannelEventListener.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":91}},"2":{"start":{"line":4,"column":27},"end":{"line":4,"column":56}},"3":{"start":{"line":5,"column":20},"end":{"line":9,"column":1}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":146}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":49}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":41}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":116}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":61}},"9":{"start":{"line":27,"column":8},"end":{"line":27,"column":23}},"10":{"start":{"line":30,"column":0},"end":{"line":30,"column":74}},"11":{"start":{"line":33,"column":8},"end":{"line":33,"column":59}},"12":{"start":{"line":36,"column":8},"end":{"line":36,"column":44}},"13":{"start":{"line":39,"column":0},"end":{"line":39,"column":74}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":68},"end":{"line":17,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":14},"end":{"line":20,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":47},"end":{"line":25,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":15},"end":{"line":28,"column":5}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":61},"end":{"line":34,"column":5}},"line":32},"5":{"name":"(anonymous_5)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":14},"end":{"line":37,"column":5}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":15},"end":{"line":19,"column":115}},"type":"binary-expr","locations":[{"start":{"line":19,"column":16},"end":{"line":19,"column":56}},{"start":{"line":19,"column":62},"end":{"line":19,"column":114}}],"line":19}},"s":{"0":1,"1":1,"2":1,"3":1,"4":12,"5":12,"6":12,"7":6,"8":4,"9":2,"10":1,"11":8,"12":4,"13":1},"f":{"0":12,"1":6,"2":4,"3":2,"4":8,"5":4},"b":{"0":[6,6]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/PrivateChannelEventListener.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/PrivateChannelEventListener.ts"],"names":[],"mappings":";;;AACA,yDAAqD;AAQrD,MAAM,WAAW,GAA4B;IACzC,oBAAoB,EAAE,yCAAyC;IAC/D,YAAY,EAAE,iCAAiC;IAC/C,aAAa,EAAE,kCAAkC;CACpD,CAAA;AAED,MAAe,mCAAuC,SAAQ,mCAAmB;IAEpE,gBAAgB,CAAQ;IACxB,YAAY,CAAQ;IAE7B,YACI,SAAoB,EACpB,gBAAwB,EACxB,YAAoB,EACpB,OAAU;QACV,KAAK,CAAC,SAAS,EAAE,EAAE,gBAAgB,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,gCAAgC,EAAE,wCAAwC,CAAC,CAAA;QACzI,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAA;IACpC,CAAC;IAED,MAAM,CAAC,CAAiB;QACpB,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAK,CAAC,CAAC,OAAe,EAAE,gBAAgB,CAAC,CAAC,CAAC,iBAAiB;IAC3I,CAAC;CAGJ;AAED,MAAa,+BAAgC,SAAQ,mCAA+C;IAEhG,YACI,SAAoB,EACpB,SAAiB,EACjB,OAAmB;QACnB,KAAK,CAAC,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,OAAO,CAAC,CAAA;IACxD,CAAC;IAED,MAAM,CAAC,EAAO;QACV,IAAI,CAAC,OAAO,EAAE,CAAA;IAClB,CAAC;CAEJ;AAbD,0EAaC;AAED,MAAa,+BAAgC,SAAQ,mCAAwD;IAEzG,YACI,SAAoB,EACpB,SAAiB,EACjB,YAA2C,EAC3C,OAA4B;QAC5B,KAAK,CAAC,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,CAAC,CAAA;IACtD,CAAC;IAED,MAAM,CAAC,CAAM;QACT,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;IACvC,CAAC;CAEJ;AAdD,0EAcC","sourcesContent":["import { Messaging } from \"../Messaging\"\nimport { AbstractListener } from \"./AbstractListener\"\nimport { BrowserTypes } from \"@kite9/fdc3-schema\"\n\ntype BroadcastEvent = BrowserTypes.BroadcastEvent\n\ntype EVENT_TYPES_WITH_TYPE_HANDLER = \"onAddContextListener\" | \"onUnsubscribe\"\nexport type EVENT_TYPES = EVENT_TYPES_WITH_TYPE_HANDLER | \"onDisconnect\"\n\nconst EVENT_NAMES: { [k: string]: string } = {\n    onAddContextListener: \"privateChannelOnAddContextListenerEvent\",\n    onDisconnect: \"privateChannelOnDisconnectEvent\",\n    onUnsubscribe: \"privateChannelOnUnsubscribeEvent\"\n}\n\nabstract class AbstractPrivateChannelEventListener<X> extends AbstractListener<X> {\n\n    readonly privateChannelId: string\n    readonly listenerType: string\n\n    constructor(\n        messaging: Messaging,\n        privateChannelId: string,\n        listenerType: string,\n        handler: X) {\n        super(messaging, { privateChannelId, listenerType }, handler, \"privateChannelAddEventListener\", \"privateChannelUnsubscribeEventListener\")\n        this.privateChannelId = privateChannelId;\n        this.listenerType = listenerType\n    }\n\n    filter(m: BroadcastEvent) {\n        return (m.type == EVENT_NAMES[this.listenerType]) && (this.privateChannelId == (m.payload as any)?.privateChannelId); /* ISSUE: 1293 */\n    }\n\n    abstract action(m: any): void\n}\n\nexport class PrivateChannelEventListenerVoid extends AbstractPrivateChannelEventListener<() => void> {\n\n    constructor(\n        messaging: Messaging,\n        channelId: string,\n        handler: () => void) {\n        super(messaging, channelId, \"onDisconnect\", handler)\n    }\n\n    action(_m: any): void {\n        this.handler()\n    }\n\n}\n\nexport class PrivateChannelEventListenerType extends AbstractPrivateChannelEventListener<(m: string) => void> {\n\n    constructor(\n        messaging: Messaging,\n        channelId: string,\n        listenerType: EVENT_TYPES_WITH_TYPE_HANDLER,\n        handler: (s: string) => void) {\n        super(messaging, channelId, listenerType, handler)\n    }\n\n    action(m: any): void {\n        this.handler(m.payload.contextType)\n    }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"91264c1e981d180d4d4a915315fc0a24e35af5ed","contentHash":"31d8f4c07700e941d5bc8db08a68f493c0a5014c781dfe196f452f3bc2fbb1ac"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/channels/DefaultChannelSupport.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/channels/DefaultChannelSupport.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":32},"end":{"line":4,"column":66}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":52}},"4":{"start":{"line":6,"column":33},"end":{"line":6,"column":79}},"5":{"start":{"line":7,"column":24},"end":{"line":7,"column":61}},"6":{"start":{"line":11,"column":19},"end":{"line":11,"column":23}},"7":{"start":{"line":12,"column":25},"end":{"line":12,"column":27}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":35}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":47}},"10":{"start":{"line":16,"column":8},"end":{"line":23,"column":11}},"11":{"start":{"line":17,"column":12},"end":{"line":22,"column":13}},"12":{"start":{"line":18,"column":16},"end":{"line":18,"column":40}},"13":{"start":{"line":21,"column":16},"end":{"line":21,"column":48}},"14":{"start":{"line":24,"column":8},"end":{"line":26,"column":11}},"15":{"start":{"line":25,"column":12},"end":{"line":25,"column":96}},"16":{"start":{"line":29,"column":25},"end":{"line":29,"column":106}},"17":{"start":{"line":30,"column":8},"end":{"line":30,"column":34}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":24}},"19":{"start":{"line":34,"column":25},"end":{"line":38,"column":39}},"20":{"start":{"line":39,"column":8},"end":{"line":44,"column":9}},"21":{"start":{"line":40,"column":12},"end":{"line":40,"column":150}},"22":{"start":{"line":43,"column":12},"end":{"line":43,"column":24}},"23":{"start":{"line":47,"column":8},"end":{"line":55,"column":9}},"24":{"start":{"line":48,"column":29},"end":{"line":52,"column":41}},"25":{"start":{"line":53,"column":29},"end":{"line":53,"column":64}},"26":{"start":{"line":54,"column":12},"end":{"line":54,"column":136}},"27":{"start":{"line":54,"column":50},"end":{"line":54,"column":134}},"28":{"start":{"line":56,"column":8},"end":{"line":56,"column":33}},"29":{"start":{"line":59,"column":25},"end":{"line":65,"column":40}},"30":{"start":{"line":66,"column":20},"end":{"line":66,"column":125}},"31":{"start":{"line":67,"column":8},"end":{"line":67,"column":19}},"32":{"start":{"line":70,"column":25},"end":{"line":74,"column":42}},"33":{"start":{"line":75,"column":8},"end":{"line":75,"column":119}},"34":{"start":{"line":78,"column":8},"end":{"line":82,"column":42}},"35":{"start":{"line":83,"column":8},"end":{"line":83,"column":74}},"36":{"start":{"line":84,"column":8},"end":{"line":84,"column":68}},"37":{"start":{"line":84,"column":45},"end":{"line":84,"column":66}},"38":{"start":{"line":87,"column":8},"end":{"line":93,"column":38}},"39":{"start":{"line":94,"column":8},"end":{"line":94,"column":72}},"40":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"41":{"start":{"line":96,"column":12},"end":{"line":96,"column":99}},"42":{"start":{"line":100,"column":27},"end":{"line":100,"column":31}},"43":{"start":{"line":103,"column":16},"end":{"line":103,"column":36}},"44":{"start":{"line":104,"column":16},"end":{"line":104,"column":101}},"45":{"start":{"line":104,"column":90},"end":{"line":104,"column":99}},"46":{"start":{"line":107,"column":33},"end":{"line":107,"column":74}},"47":{"start":{"line":108,"column":25},"end":{"line":108,"column":113}},"48":{"start":{"line":109,"column":8},"end":{"line":109,"column":47}},"49":{"start":{"line":110,"column":8},"end":{"line":110,"column":34}},"50":{"start":{"line":111,"column":8},"end":{"line":111,"column":24}},"51":{"start":{"line":114,"column":0},"end":{"line":114,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":44},"end":{"line":27,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":54},"end":{"line":16,"column":55}},"loc":{"start":{"line":16,"column":69},"end":{"line":23,"column":9}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":43},"end":{"line":24,"column":44}},"loc":{"start":{"line":24,"column":50},"end":{"line":26,"column":9}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":49},"end":{"line":32,"column":5}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":27},"end":{"line":45,"column":5}},"line":33},"5":{"name":"(anonymous_5)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":28},"end":{"line":57,"column":5}},"line":46},"6":{"name":"(anonymous_6)","decl":{"start":{"line":54,"column":45},"end":{"line":54,"column":46}},"loc":{"start":{"line":54,"column":50},"end":{"line":54,"column":134}},"line":54},"7":{"name":"(anonymous_7)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":26},"end":{"line":68,"column":5}},"line":58},"8":{"name":"(anonymous_8)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":33},"end":{"line":76,"column":5}},"line":69},"9":{"name":"(anonymous_9)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":29},"end":{"line":85,"column":5}},"line":77},"10":{"name":"(anonymous_10)","decl":{"start":{"line":84,"column":40},"end":{"line":84,"column":41}},"loc":{"start":{"line":84,"column":45},"end":{"line":84,"column":66}},"line":84},"11":{"name":"(anonymous_11)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":30},"end":{"line":98,"column":5}},"line":86},"12":{"name":"(anonymous_12)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":44},"end":{"line":112,"column":5}},"line":99},"13":{"name":"(anonymous_13)","decl":{"start":{"line":102,"column":12},"end":{"line":102,"column":13}},"loc":{"start":{"line":102,"column":32},"end":{"line":105,"column":13}},"line":102},"14":{"name":"(anonymous_14)","decl":{"start":{"line":104,"column":85},"end":{"line":104,"column":86}},"loc":{"start":{"line":104,"column":90},"end":{"line":104,"column":99}},"line":104}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":12},"end":{"line":22,"column":13}},"type":"if","locations":[{"start":{"line":17,"column":12},"end":{"line":22,"column":13}},{"start":{"line":17,"column":12},"end":{"line":22,"column":13}}],"line":17},"1":{"loc":{"start":{"line":25,"column":71},"end":{"line":25,"column":94}},"type":"binary-expr","locations":[{"start":{"line":25,"column":71},"end":{"line":25,"column":88}},{"start":{"line":25,"column":92},"end":{"line":25,"column":94}}],"line":25},"2":{"loc":{"start":{"line":39,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":44,"column":9}},{"start":{"line":39,"column":8},"end":{"line":44,"column":9}}],"line":39},"3":{"loc":{"start":{"line":47,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":55,"column":9}},{"start":{"line":47,"column":8},"end":{"line":55,"column":9}}],"line":47},"4":{"loc":{"start":{"line":53,"column":29},"end":{"line":53,"column":64}},"type":"binary-expr","locations":[{"start":{"line":53,"column":29},"end":{"line":53,"column":58}},{"start":{"line":53,"column":62},"end":{"line":53,"column":64}}],"line":53},"5":{"loc":{"start":{"line":83,"column":49},"end":{"line":83,"column":72}},"type":"binary-expr","locations":[{"start":{"line":83,"column":49},"end":{"line":83,"column":66}},{"start":{"line":83,"column":70},"end":{"line":83,"column":72}}],"line":83},"6":{"loc":{"start":{"line":94,"column":47},"end":{"line":94,"column":70}},"type":"binary-expr","locations":[{"start":{"line":94,"column":47},"end":{"line":94,"column":64}},{"start":{"line":94,"column":68},"end":{"line":94,"column":70}}],"line":94},"7":{"loc":{"start":{"line":107,"column":33},"end":{"line":107,"column":74}},"type":"binary-expr","locations":[{"start":{"line":107,"column":33},"end":{"line":107,"column":66}},{"start":{"line":107,"column":70},"end":{"line":107,"column":74}}],"line":107}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":75,"7":75,"8":75,"9":75,"10":75,"11":0,"12":0,"13":0,"14":75,"15":3,"16":76,"17":76,"18":76,"19":18,"20":18,"21":13,"22":5,"23":2,"24":2,"25":2,"26":2,"27":6,"28":2,"29":5,"30":5,"31":5,"32":16,"33":16,"34":1,"35":1,"36":1,"37":1,"38":13,"39":12,"40":12,"41":2,"42":8,"43":1,"44":1,"45":1,"46":8,"47":8,"48":8,"49":8,"50":8,"51":1},"f":{"0":75,"1":0,"2":3,"3":76,"4":18,"5":2,"6":6,"7":5,"8":16,"9":1,"10":1,"11":13,"12":8,"13":1,"14":1},"b":{"0":[0,0],"1":[3,3],"2":[13,5],"3":[2,0],"4":[2,0],"5":[1,1],"6":[12,12],"7":[8,3]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/channels/DefaultChannelSupport.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/channels/DefaultChannelSupport.ts"],"names":[],"mappings":"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","sourcesContent":["import { Channel, ContextHandler, Listener, PrivateChannel, ChannelSelector, EventHandler } from \"@kite9/fdc3-standard\";\nimport { Messaging } from \"../Messaging\";\nimport { ChannelSupport } from \"./ChannelSupport\";\nimport { DefaultPrivateChannel } from \"./DefaultPrivateChannel\";\nimport { DefaultChannel } from \"./DefaultChannel\";\nimport { DefaultContextListener } from \"../listeners/DefaultContextListener\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\";\nimport { FollowingContextListener } from \"../listeners/FollowingContextListener\";\nimport { EventListener } from \"../listeners/EventListener\";\n\ntype ChannelDetail = BrowserTypes.Channel\ntype GetUserChannelsRequest = BrowserTypes.GetUserChannelsRequest\ntype GetUserChannelsResponse = BrowserTypes.GetUserChannelsResponse\ntype GetOrCreateChannelResponse = BrowserTypes.GetOrCreateChannelResponse\ntype GetOrCreateChannelRequest = BrowserTypes.GetOrCreateChannelRequest\ntype CreatePrivateChannelRequest = BrowserTypes.CreatePrivateChannelRequest\ntype CreatePrivateChannelResponse = BrowserTypes.CreatePrivateChannelResponse\ntype JoinUserChannelResponse = BrowserTypes.JoinUserChannelResponse\ntype JoinUserChannelRequest = BrowserTypes.JoinUserChannelRequest\ntype GetCurrentChannelResponse = BrowserTypes.GetCurrentChannelResponse\ntype GetCurrentChannelRequest = BrowserTypes.GetCurrentChannelRequest\ntype LeaveCurrentChannelRequest = BrowserTypes.LeaveCurrentChannelRequest\ntype LeaveCurrentChannelResponse = BrowserTypes.LeaveCurrentChannelResponse\n\nexport class DefaultChannelSupport implements ChannelSupport {\n\n    readonly messaging: Messaging\n    readonly channelSelector: ChannelSelector\n    protected userChannels: Channel[] | null = null\n    private followingListeners: FollowingContextListener[] = []\n\n    constructor(messaging: Messaging, channelSelector: ChannelSelector) {\n        this.messaging = messaging;\n        this.channelSelector = channelSelector\n        this.channelSelector.setChannelChangeCallback((channelId: string | null) => {\n            if (channelId == null) {\n                this.leaveUserChannel()\n            } else {\n                this.joinUserChannel(channelId)\n            }\n        })\n\n        this.addChannelChangedEventHandler((e) => {\n            this.channelSelector.updateChannel(e.details.newChannelId, this.userChannels ?? [])\n        })\n    }\n\n    async addChannelChangedEventHandler(handler: EventHandler): Promise<Listener> {\n        const listener = new EventListener(this.messaging, \"channelChangedEvent\", handler)\n        await listener.register()\n        return listener\n    }\n\n    async getUserChannel(): Promise<Channel | null> {\n        const response = await this.messaging.exchange<GetCurrentChannelResponse>({\n            meta: this.messaging.createMeta(),\n            type: 'getCurrentChannelRequest',\n            payload: {}\n        } as GetCurrentChannelRequest, 'getCurrentChannelResponse')\n\n        if (response.payload?.channel?.id) {\n            return new DefaultChannel(this.messaging, response.payload.channel.id, \"user\", response.payload.channel.displayMetadata)\n        } else {\n            return null\n        }\n    }\n\n    async getUserChannels(): Promise<Channel[]> {\n        if (!this.userChannels) {\n            const response = await this.messaging.exchange<GetUserChannelsResponse>({\n                meta: this.messaging.createMeta(),\n                type: 'getUserChannelsRequest',\n                payload: {}\n            } as GetUserChannelsRequest, 'getUserChannelsResponse')\n\n            const channels: ChannelDetail[] = response.payload.userChannels ?? []\n            this.userChannels = channels.map(c => new DefaultChannel(this.messaging, c.id, \"user\", c.displayMetadata));\n        }\n        return this.userChannels\n    }\n\n    async getOrCreate(id: string): Promise<Channel> {\n        const response = await this.messaging.exchange<GetOrCreateChannelResponse>({\n            meta: this.messaging.createMeta(),\n            type: 'getOrCreateChannelRequest',\n            payload: {\n                channelId: id\n            }\n        } as GetOrCreateChannelRequest,\n            'getOrCreateChannelResponse')\n\n        const out = new DefaultChannel(this.messaging, id, \"app\", response.payload.channel?.displayMetadata!!)\n        return out\n    }\n\n    async createPrivateChannel(): Promise<PrivateChannel> {\n        const response = await this.messaging.exchange<CreatePrivateChannelResponse>({\n            meta: this.messaging.createMeta(),\n            type: 'createPrivateChannelRequest',\n            payload: {}\n        } as CreatePrivateChannelRequest,\n            'createPrivateChannelResponse')\n\n        return new DefaultPrivateChannel(this.messaging, response.payload?.privateChannel?.id!!)\n    }\n\n    async leaveUserChannel(): Promise<void> {\n        await this.messaging.exchange<LeaveCurrentChannelResponse>({\n            meta: this.messaging.createMeta(),\n            type: 'leaveCurrentChannelRequest',\n            payload: {}\n        } as LeaveCurrentChannelRequest,\n            'leaveCurrentChannelResponse')\n\n        this.channelSelector.updateChannel(null, this.userChannels ?? [])\n        this.followingListeners.forEach(l => l.changeChannel(null))\n    }\n\n    async joinUserChannel(id: string) {\n        await this.messaging.exchange<JoinUserChannelResponse>({\n            meta: this.messaging.createMeta(),\n            type: 'joinUserChannelRequest',\n            payload: {\n                channelId: id\n            }\n        } as JoinUserChannelRequest,\n            'joinUserChannelResponse')\n\n        this.channelSelector.updateChannel(id, this.userChannels ?? [])\n\n        for (const l of this.followingListeners) {\n            await l.changeChannel(new DefaultChannel(this.messaging, id, \"user\"))\n        }\n    }\n\n    async addContextListener(handler: ContextHandler, type: string | null): Promise<Listener> {\n        const _container = this\n\n        class UnsubscribingDefaultContextListener extends DefaultContextListener {\n            async unsubscribe(): Promise<void> {\n                super.unsubscribe()\n                _container.followingListeners = _container.followingListeners.filter(l => l != this)\n            }\n        }\n\n        const currentChannelId = (await this.getUserChannel())?.id ?? null\n        const listener = new UnsubscribingDefaultContextListener(this.messaging, currentChannelId, type, handler)\n        this.followingListeners.push(listener)\n        await listener.register()\n        return listener\n    }\n\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"99f3bf1a84af5b95f8c6f36fdcccccac2217931c","contentHash":"6c5fb981c40ecfed5520e2fb624515e0afd4f64069b8a4983f629fad35e1eb64"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/EventListener.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/EventListener.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":54}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":35}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":25}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":31}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":36}},"7":{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},"8":{"start":{"line":20,"column":12},"end":{"line":23,"column":15}},"9":{"start":{"line":27,"column":8},"end":{"line":27,"column":38}},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":43}},"11":{"start":{"line":33,"column":0},"end":{"line":33,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":42},"end":{"line":14,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":14},"end":{"line":17,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":14},"end":{"line":25,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":21},"end":{"line":28,"column":5}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":24},"end":{"line":31,"column":5}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},{"start":{"line":19,"column":8},"end":{"line":24,"column":9}}],"line":19}},"s":{"0":1,"1":1,"2":76,"3":76,"4":76,"5":76,"6":247,"7":5,"8":5,"9":76,"10":0,"11":1},"f":{"0":76,"1":247,"2":5,"3":76,"4":0},"b":{"0":[5,0]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/EventListener.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/EventListener.ts"],"names":[],"mappings":";;;AAIA,MAAa,aAAa;IAEb,EAAE,CAAQ;IACV,SAAS,CAAW;IACpB,IAAI,CAAQ;IACZ,OAAO,CAAc;IAE9B,YAAY,SAAoB,EAAE,IAAY,EAAE,OAAqB;QACjE,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,SAAS,CAAC,UAAU,EAAE,CAAA;QAC7C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;IAC1B,CAAC;IAED,MAAM,CAAC,CAAM;QACT,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAA;IAC/B,CAAC;IAED,MAAM,CAAC,CAAM;QACT,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC;gBACT,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,OAAO,EAAE,CAAC,CAAC,OAAO;aACT,CAAC,CAAA;QAClB,CAAC;IACL,CAAC;IAED,KAAK,CAAC,QAAQ;QACV,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IACjC,CAAC;IAED,KAAK,CAAC,WAAW;QACb,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IACtC,CAAC;CAEJ;AAnCD,sCAmCC","sourcesContent":["import { ApiEvent, EventHandler } from \"@kite9/fdc3-standard\";\nimport { Messaging } from \"../Messaging\";\nimport { RegisterableListener } from \"./RegisterableListener\";\n\nexport class EventListener implements RegisterableListener {\n\n    readonly id: string\n    readonly messaging: Messaging\n    readonly type: string\n    readonly handler: EventHandler\n\n    constructor(messaging: Messaging, type: string, handler: EventHandler) {\n        this.id = type + \"-\" + messaging.createUUID()\n        this.messaging = messaging\n        this.type = type\n        this.handler = handler\n    }\n\n    filter(m: any): boolean {\n        return m.type === this.type\n    }\n\n    action(m: any): void {\n        if (m.type === this.type) {\n            this.handler({\n                type: this.type,\n                details: m.payload\n            } as ApiEvent)\n        }\n    }\n\n    async register(): Promise<void> {\n        this.messaging.register(this)\n    }\n\n    async unsubscribe(): Promise<void> {\n        this.messaging.unregister(this.id)\n    }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"80c012aae780146c12d518296eda354b7d26538f","contentHash":"f037b341ddc932857237ec97c57c117ff7734398f63ed14c992ae52f212327f2"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/apps/DefaultAppSupport.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/apps/DefaultAppSupport.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":55}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":35}},"4":{"start":{"line":11,"column":24},"end":{"line":17,"column":9}},"5":{"start":{"line":18,"column":8},"end":{"line":20,"column":11}},"6":{"start":{"line":19,"column":12},"end":{"line":19,"column":44}},"7":{"start":{"line":23,"column":24},"end":{"line":29,"column":9}},"8":{"start":{"line":30,"column":8},"end":{"line":32,"column":11}},"9":{"start":{"line":31,"column":12},"end":{"line":31,"column":41}},"10":{"start":{"line":35,"column":24},"end":{"line":45,"column":9}},"11":{"start":{"line":46,"column":20},"end":{"line":46,"column":112}},"12":{"start":{"line":47,"column":8},"end":{"line":47,"column":41}},"13":{"start":{"line":50,"column":0},"end":{"line":50,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":27},"end":{"line":9,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":23},"end":{"line":21,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":78},"end":{"line":18,"column":79}},"loc":{"start":{"line":18,"column":83},"end":{"line":20,"column":9}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":24},"end":{"line":33,"column":5}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":79},"end":{"line":30,"column":80}},"loc":{"start":{"line":30,"column":84},"end":{"line":32,"column":9}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":29},"end":{"line":48,"column":5}},"line":34}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":75,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":3,"12":2,"13":1},"f":{"0":75,"1":1,"2":1,"3":1,"4":1,"5":3},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/apps/DefaultAppSupport.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/apps/DefaultAppSupport.ts"],"names":[],"mappings":";;;AAAA,wDAA6E;AAY7E,MAAa,iBAAiB;IAEjB,SAAS,CAAW;IAE7B,YAAY,SAAoB;QAC5B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;IAC9B,CAAC;IAED,aAAa,CAAC,GAAkB;QAC5B,MAAM,OAAO,GAAyB;YAClC,IAAI,EAAE,sBAAsB;YAC5B,OAAO,EAAE;gBACL,GAAG;aACN;YACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAS;SAC3C,CAAA;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAwB,OAAO,EAAE,uBAAuB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;YAC7F,OAAO,CAAC,CAAC,OAAO,CAAC,cAAgB,CAAA;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc,CAAC,GAAkB;QAC7B,MAAM,OAAO,GAA0B;YACnC,IAAI,EAAE,uBAAuB;YAC7B,OAAO,EAAE;gBACL,GAAG,EAAE,GAAoB;aAC5B;YACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAS;SAC3C,CAAA;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAyB,OAAO,EAAE,wBAAwB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;YAC/F,OAAO,CAAC,CAAC,OAAO,CAAC,WAAa,CAAA;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,GAAkB,EAAE,OAA6B;QACxD,MAAM,OAAO,GAAG;YACZ,IAAI,EAAE,aAAa;YACnB,OAAO,EAAE;gBACL,GAAG,EAAE;oBACD,KAAK,EAAE,GAAG,CAAC,KAAK;oBAChB,UAAU,EAAE,GAAG,CAAC,UAAU;iBAC7B;gBACD,OAAO;aACV;YACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAS;SAC5B,CAAA;QAEhB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAM,OAAO,EAAE,cAAc,EAAE,yBAAS,CAAC,UAAU,CAAC,CAAA;QAC7F,OAAO,GAAG,CAAC,OAAO,CAAC,aAAa,CAAA;IACpC,CAAC;CAEJ;AArDD,8CAqDC","sourcesContent":["import { AppIdentifier, AppMetadata, OpenError } from \"@kite9/fdc3-standard\";\nimport { Context } from \"@kite9/fdc3-context\";\nimport { AppSupport } from \"./AppSupport\";\nimport { Messaging } from \"../Messaging\";\nimport { BrowserTypes } from \"@kite9/fdc3-schema\"\n\ntype FindInstancesRequest = BrowserTypes.FindInstancesRequest\ntype GetAppMetadataResponse = BrowserTypes.GetAppMetadataResponse\ntype FindInstancesResponse = BrowserTypes.FindInstancesResponse\ntype GetAppMetadataRequest = BrowserTypes.GetAppMetadataRequest\ntype OpenRequest = BrowserTypes.OpenRequest\n\nexport class DefaultAppSupport implements AppSupport {\n\n    readonly messaging: Messaging\n\n    constructor(messaging: Messaging) {\n        this.messaging = messaging\n    }\n\n    findInstances(app: AppIdentifier): Promise<AppIdentifier[]> {\n        const request: FindInstancesRequest = {\n            type: \"findInstancesRequest\",\n            payload: {\n                app\n            },\n            meta: this.messaging.createMeta() as any\n        }\n\n        return this.messaging.exchange<FindInstancesResponse>(request, \"findInstancesResponse\").then(d => {\n            return d.payload.appIdentifiers!!\n        });\n    }\n\n    getAppMetadata(app: AppIdentifier): Promise<AppMetadata> {\n        const request: GetAppMetadataRequest = {\n            type: \"getAppMetadataRequest\",\n            payload: {\n                app: app as AppIdentifier\n            },\n            meta: this.messaging.createMeta() as any\n        }\n\n        return this.messaging.exchange<GetAppMetadataResponse>(request, \"getAppMetadataResponse\").then(d => {\n            return d.payload.appMetadata!!\n        });\n    }\n\n    async open(app: AppIdentifier, context?: Context | undefined): Promise<AppIdentifier> {\n        const request = {\n            type: \"openRequest\",\n            payload: {\n                app: {\n                    appId: app.appId,\n                    instanceId: app.instanceId,\n                },\n                context\n            },\n            meta: this.messaging.createMeta() as any\n        } as OpenRequest\n\n        const out = await this.messaging.exchange<any>(request, \"openResponse\", OpenError.AppTimeout)\n        return out.payload.appIdentifier\n    }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"682278b4bb397313ad496d9dc902400592c71e9b","contentHash":"fb766b378261183794e0b8d946e8abb4f06d89d3f82cfefcf00b3dff171480ce"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/handshake/DefaultHandshakeSupport.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/handshake/DefaultHandshakeSupport.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":28},"end":{"line":4,"column":69}},"3":{"start":{"line":11,"column":24},"end":{"line":11,"column":28}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":35}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":39}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":91}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":42}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":52}},"9":{"start":{"line":22,"column":8},"end":{"line":29,"column":11}},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":43}},"11":{"start":{"line":33,"column":8},"end":{"line":33,"column":58}},"12":{"start":{"line":36,"column":0},"end":{"line":36,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":27},"end":{"line":14,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":20},"end":{"line":19,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":23},"end":{"line":31,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":38},"end":{"line":34,"column":5}},"line":32}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":75,"4":75,"5":75,"6":75,"7":75,"8":2,"9":2,"10":2,"11":1,"12":1},"f":{"0":75,"1":75,"2":2,"3":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/handshake/DefaultHandshakeSupport.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/handshake/DefaultHandshakeSupport.ts"],"names":[],"mappings":";;;AACA,sEAAmE;AAKnE;;;GAGG;AACH,MAAa,uBAAuB;IAEvB,SAAS,CAAW;IACrB,iBAAiB,GAA6B,IAAI,CAAA;IAE1D,YAAY,SAAoB;QAC5B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;IAC9B,CAAC;IAED,KAAK,CAAC,OAAO;QACT,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAA;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,qCAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;QAC9D,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAA;IACrC,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,MAAM,IAAI,CAAC,iBAAiB,EAAE,WAAW,EAAE,CAAA;QAC3C,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YACtB,IAAI,EAAE,aAAa;YACnB,IAAI,EAAE;gBACF,SAAS,EAAE,IAAI,IAAI,EAAE;gBACrB,qBAAqB,EAAE,IAAI,CAAC,mEAAmE;aAClG;YACD,OAAO,EAAE,EACR;SAC6B,CAAC,CAAA;QACnC,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAA;IACtC,CAAC;IAED,KAAK,CAAC,yBAAyB;QAC3B,OAAO,IAAI,CAAC,SAAS,CAAC,yBAAyB,EAAE,CAAA;IACrD,CAAC;CAEJ;AAjCD,0DAiCC","sourcesContent":["import { WebConnectionProtocol6Goodbye } from \"@kite9/fdc3-schema/generated/api/BrowserTypes\";\nimport { HeartbeatListener } from \"../listeners/HeartbeatListener\";\nimport { Messaging } from \"../Messaging\";\nimport { HandshakeSupport } from \"./HandshakeSupport\";\nimport { ImplementationMetadata } from \"@kite9/fdc3-standard\";\n\n/**\n * Handles connection, disconnection and heartbeats for the proxy.\n * This will possibly eventually need extending to allow for auth handshaking.\n */\nexport class DefaultHandshakeSupport implements HandshakeSupport {\n\n    readonly messaging: Messaging\n    private heartbeatListener: HeartbeatListener | null = null\n\n    constructor(messaging: Messaging) {\n        this.messaging = messaging\n    }\n\n    async connect(): Promise<void> {\n        await this.messaging.connect()\n        this.heartbeatListener = new HeartbeatListener(this.messaging)\n        this.heartbeatListener.register()\n    }\n\n    async disconnect(): Promise<void> {\n        await this.heartbeatListener?.unsubscribe()\n        await this.messaging.post({\n            type: 'WCP6Goodbye',\n            meta: {\n                timestamp: new Date(),\n                connectionAttemptUuid: \"na\" // ISSUE: https://github.com/finos/FDC3/pull/1191/files#r1762619337\n            },\n            payload: {\n            }\n        } as WebConnectionProtocol6Goodbye)\n        return this.messaging.disconnect()\n    }\n\n    async getImplementationMetadata(): Promise<ImplementationMetadata> {\n        return this.messaging.getImplementationMetadata()\n    }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3215295fad9ead6a2c5cf70c5b7a5b6f84379590","contentHash":"305ea156d39b188cf81d721bd59040a955b1d25cbfe8219cf1ec9b51de38ba5d"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/HeartbeatListener.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/HeartbeatListener.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":8,"column":8},"end":{"line":8,"column":56}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":35}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":43}},"5":{"start":{"line":15,"column":8},"end":{"line":24,"column":11}},"6":{"start":{"line":25,"column":8},"end":{"line":25,"column":46}},"7":{"start":{"line":28,"column":8},"end":{"line":28,"column":38}},"8":{"start":{"line":31,"column":8},"end":{"line":31,"column":43}},"9":{"start":{"line":34,"column":0},"end":{"line":34,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":27},"end":{"line":10,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":14},"end":{"line":13,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":15},"end":{"line":26,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":21},"end":{"line":29,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":24},"end":{"line":32,"column":5}},"line":30}},"branchMap":{},"s":{"0":1,"1":1,"2":75,"3":75,"4":170,"5":1,"6":1,"7":75,"8":2,"9":1},"f":{"0":75,"1":170,"2":1,"3":75,"4":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/HeartbeatListener.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/fdc3-agent-proxy/src/listeners/HeartbeatListener.ts"],"names":[],"mappings":";;;AAIA,MAAa,iBAAiB;IAEjB,EAAE,CAAQ;IACV,SAAS,CAAW;IAE7B,YAAY,SAAoB;QAC5B,IAAI,CAAC,EAAE,GAAG,YAAY,GAAG,SAAS,CAAC,UAAU,EAAE,CAAA;QAC/C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;IAC9B,CAAC;IAED,MAAM,CAAC,CAAM;QACT,OAAO,CAAC,CAAC,IAAI,KAAK,gBAAgB,CAAA;IAEtC,CAAC;IAED,MAAM,CAAC,EAAO;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAEhB,IAAI,EAAE,iCAAiC;YACvC,IAAI,EAAE;gBACF,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;gBACxC,SAAS,EAAE,IAAI,IAAI,EAAE;aACxB;YACD,OAAO,EAAE;gBACL,SAAS,EAAE,IAAI,IAAI,EAAE;aACxB;SAE+B,CAAC,CAAA;QACrC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAA;IACzC,CAAC;IAED,KAAK,CAAC,QAAQ;QACV,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IACjC,CAAC;IAED,KAAK,CAAC,WAAW;QACb,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IACtC,CAAC;CAEJ;AAvCD,8CAuCC","sourcesContent":["import { HeartbeatAcknowledgementRequest } from \"@kite9/fdc3-schema/generated/api/BrowserTypes\";\nimport { Messaging } from \"../Messaging\";\nimport { RegisterableListener } from \"./RegisterableListener\";\n\nexport class HeartbeatListener implements RegisterableListener {\n\n    readonly id: string\n    readonly messaging: Messaging\n\n    constructor(messaging: Messaging) {\n        this.id = \"heartbeat-\" + messaging.createUUID()\n        this.messaging = messaging\n    }\n\n    filter(m: any): boolean {\n        return m.type === \"heartbeatEvent\"\n\n    }\n\n    action(_m: any): void {\n        this.messaging.post({\n\n            type: \"heartbeatAcknowledgementRequest\",\n            meta: {\n                requestUuid: this.messaging.createUUID(),\n                timestamp: new Date()\n            },\n            payload: {\n                timestamp: new Date()\n            }\n\n        } as HeartbeatAcknowledgementRequest)\n        console.log(\"Heartbeat acknowledged\")\n    }\n\n    async register(): Promise<void> {\n        this.messaging.register(this)\n    }\n\n    async unsubscribe(): Promise<void> {\n        this.messaging.unregister(this.id)\n    }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1050b26fc68714e052dc044b4a43af74e31fe100","contentHash":"983e15845f291f72f064cf2fb28ab7ffd4c925bc8a17a19b4866d6a3ab6255f9"}}